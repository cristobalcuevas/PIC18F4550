

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 01 16:44:55 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _LATDbits	set	3980
    55  0000                     _LATD	set	3980
    56  0000                     _TRISD	set	3989
    57  0000                     _TRISDbits	set	3989
    58                           
    59                           	psect	smallconst
    60  000800                     __psmallconst:
    61                           	callstack 0
    62  000800  00                 	db	0
    63  000801                     STR_1:
    64  000801  48                 	db	72	;'H'
    65  000802  6F                 	db	111	;'o'
    66  000803  6C                 	db	108	;'l'
    67  000804  61                 	db	97	;'a'
    68  000805  20                 	db	32
    69  000806  6D                 	db	109	;'m'
    70  000807  75                 	db	117	;'u'
    71  000808  6E                 	db	110	;'n'
    72  000809  64                 	db	100	;'d'
    73  00080A  6F                 	db	111	;'o'
    74  00080B  00                 	db	0
    75  00080C  00                 	db	0	; dummy byte at the end
    76  0000                     
    77                           ; #config settings
    78                           
    79                           	psect	cinit
    80  0009AA                     __pcinit:
    81                           	callstack 0
    82  0009AA                     start_initialization:
    83                           	callstack 0
    84  0009AA                     __initialization:
    85                           	callstack 0
    86  0009AA                     end_of_initialization:
    87                           	callstack 0
    88  0009AA                     __end_of__initialization:
    89                           	callstack 0
    90  0009AA  0E00               	movlw	low (__Lsmallconst shr (0+16))
    91  0009AC  6EF8               	movwf	tblptru,c
    92  0009AE  0E08               	movlw	high __Lsmallconst
    93  0009B0  6EF7               	movwf	tblptrh,c
    94  0009B2  0100               	movlb	0
    95  0009B4  EF32  F004         	goto	_main	;jump to C main() function
    96                           
    97                           	psect	cstackCOMRAM
    98  000001                     __pcstackCOMRAM:
    99                           	callstack 0
   100  000001                     selectorRegistro@rs:
   101                           	callstack 0
   102                           
   103                           ; 2 bytes @ 0x0
   104  000001                     	ds	2
   105  000003                     ??_selectorRegistro:
   106                           
   107                           ; 1 bytes @ 0x2
   108  000003                     	ds	1
   109  000004                     lcd_Comando@cmd:
   110                           	callstack 0
   111  000004                     lcd_Caracter@dat:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x3
   115  000004                     	ds	1
   116  000005                     ??_lcd_Init:
   117  000005                     lcd_XY@y:
   118                           	callstack 0
   119  000005                     lcd_Cadena@pal:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x4
   123  000005                     	ds	1
   124  000006                     lcd_XY@x:
   125                           	callstack 0
   126                           
   127                           ; 1 bytes @ 0x5
   128  000006                     	ds	1
   129  000007                     
   130                           ; 1 bytes @ 0x6
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 12 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   150 ;;      Params:         0       0       0       0       0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0
   152 ;;      Temps:          0       0       0       0       0       0       0       0       0
   153 ;;      Totals:         0       0       0       0       0       0       0       0       0
   154 ;;Total ram usage:        0 bytes
   155 ;; Hardware stack levels required when called: 3
   156 ;; This function calls:
   157 ;;		_lcd_Cadena
   158 ;;		_lcd_Caracter
   159 ;;		_lcd_Init
   160 ;;		_lcd_XY
   161 ;; This function is called by:
   162 ;;		Startup code after reset
   163 ;; This function uses a non-reentrant model
   164 ;;
   165                           
   166                           	psect	text0
   167  000864                     __ptext0:
   168                           	callstack 0
   169  000864                     _main:
   170                           	callstack 28
   171  000864                     
   172                           ;main.c: 13:     TRISDbits.RD0 = 0;
   173  000864  9095               	bcf	149,0,c	;volatile
   174  000866                     
   175                           ;main.c: 14:     lcd_Init();
   176  000866  EC07  F004         	call	_lcd_Init	;wreg free
   177                           
   178                           ;main.c: 15:     lcd_XY(1,8);
   179  00086A  0E08               	movlw	8
   180  00086C  6E05               	movwf	lcd_XY@y^0,c
   181  00086E  0E01               	movlw	1
   182  000870  ECC1  F004         	call	_lcd_XY
   183                           
   184                           ;main.c: 16:     lcd_Caracter('W');
   185  000874  0E57               	movlw	87
   186  000876  ECA8  F004         	call	_lcd_Caracter
   187                           
   188                           ;main.c: 17:     lcd_XY(1,0);
   189  00087A  0E00               	movlw	0
   190  00087C  6E05               	movwf	lcd_XY@y^0,c
   191  00087E  0E01               	movlw	1
   192  000880  ECC1  F004         	call	_lcd_XY
   193                           
   194                           ;main.c: 18:     lcd_Caracter('e');
   195  000884  0E65               	movlw	101
   196  000886  ECA8  F004         	call	_lcd_Caracter
   197                           
   198                           ;main.c: 19:     lcd_XY(0,0);
   199  00088A  0E00               	movlw	0
   200  00088C  6E05               	movwf	lcd_XY@y^0,c
   201  00088E  0E00               	movlw	0
   202  000890  ECC1  F004         	call	_lcd_XY
   203  000894                     
   204                           ;main.c: 20:     lcd_Cadena("Hola mundo");
   205  000894  0E01               	movlw	low STR_1
   206  000896  6E05               	movwf	lcd_Cadena@pal^0,c
   207  000898  0E08               	movlw	high STR_1
   208  00089A  6E06               	movwf	(lcd_Cadena@pal+1)^0,c
   209  00089C  EC74  F004         	call	_lcd_Cadena	;wreg free
   210  0008A0                     l15:
   211  0008A0  EF50  F004         	goto	l15
   212  0008A4  EF00  F000         	goto	start
   213  0008A8                     __end_of_main:
   214                           	callstack 0
   215                           
   216 ;; *************** function _lcd_XY *****************
   217 ;; Defined at:
   218 ;;		line 28 in file "lcd_libreria.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;  x               1    wreg     unsigned char 
   221 ;;  y               1    4[COMRAM] unsigned char 
   222 ;; Auto vars:     Size  Location     Type
   223 ;;  x               1    5[COMRAM] unsigned char 
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   233 ;;      Params:         1       0       0       0       0       0       0       0       0
   234 ;;      Locals:         1       0       0       0       0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels used: 1
   239 ;; Hardware stack levels required when called: 2
   240 ;; This function calls:
   241 ;;		_lcd_Comando
   242 ;; This function is called by:
   243 ;;		_main
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text1
   248  000982                     __ptext1:
   249                           	callstack 0
   250  000982                     _lcd_XY:
   251                           	callstack 28
   252                           
   253                           ;incstack = 0
   254                           ;lcd_XY@x stored from wreg
   255  000982  6E06               	movwf	lcd_XY@x^0,c
   256  000984                     
   257                           ;lcd_libreria.c: 29:     if(x > 0){
   258  000984  5006               	movf	lcd_XY@x^0,w,c
   259  000986  B4D8               	btfsc	status,2,c
   260  000988  EFC8  F004         	goto	u51
   261  00098C  EFCA  F004         	goto	u50
   262  000990                     u51:
   263  000990  EFD0  F004         	goto	l859
   264  000994                     u50:
   265  000994                     
   266                           ;lcd_libreria.c: 30:         lcd_Comando(0xC0+y);
   267  000994  5005               	movf	lcd_XY@y^0,w,c
   268  000996  0FC0               	addlw	192
   269  000998  EC8F  F004         	call	_lcd_Comando
   270                           
   271                           ;lcd_libreria.c: 31:     }
   272  00099C  EFD4  F004         	goto	l41
   273  0009A0                     l859:
   274                           
   275                           ;lcd_libreria.c: 33:         lcd_Comando(0x80+y);
   276  0009A0  5005               	movf	lcd_XY@y^0,w,c
   277  0009A2  0F80               	addlw	128
   278  0009A4  EC8F  F004         	call	_lcd_Comando
   279  0009A8                     l41:
   280  0009A8  0012               	return		;funcret
   281  0009AA                     __end_of_lcd_XY:
   282                           	callstack 0
   283                           
   284 ;; *************** function _lcd_Init *****************
   285 ;; Defined at:
   286 ;;		line 4 in file "lcd_libreria.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   300 ;;      Params:         0       0       0       0       0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0
   302 ;;      Temps:          1       0       0       0       0       0       0       0       0
   303 ;;      Totals:         1       0       0       0       0       0       0       0       0
   304 ;;Total ram usage:        1 bytes
   305 ;; Hardware stack levels used: 1
   306 ;; Hardware stack levels required when called: 2
   307 ;; This function calls:
   308 ;;		_lcd_Comando
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text2
   315  00080E                     __ptext2:
   316                           	callstack 0
   317  00080E                     _lcd_Init:
   318                           	callstack 28
   319  00080E                     
   320                           ;lcd_libreria.c: 5:     TRISD = 0x00;
   321  00080E  0E00               	movlw	0
   322  000810  6E95               	movwf	149,c	;volatile
   323  000812                     
   324                           ;lcd_libreria.c: 6:     _delay((unsigned long)((20)*(20000000UL/4000.0)));
   325  000812  0E82               	movlw	130
   326  000814  6E05               	movwf	??_lcd_Init^0,c
   327  000816  0EDE               	movlw	222
   328  000818                     u77:
   329  000818  2EE8               	decfsz	wreg,f,c
   330  00081A  D7FE               	bra	u77
   331  00081C  2E05               	decfsz	??_lcd_Init^0,f,c
   332  00081E  D7FC               	bra	u77
   333  000820                     
   334                           ;lcd_libreria.c: 7:     lcd_Comando(0x30);
   335  000820  0E30               	movlw	48
   336  000822  EC8F  F004         	call	_lcd_Comando
   337  000826                     
   338                           ;lcd_libreria.c: 8:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   339  000826  0E21               	movlw	33
   340  000828  6E05               	movwf	??_lcd_Init^0,c
   341  00082A  0E76               	movlw	118
   342  00082C                     u87:
   343  00082C  2EE8               	decfsz	wreg,f,c
   344  00082E  D7FE               	bra	u87
   345  000830  2E05               	decfsz	??_lcd_Init^0,f,c
   346  000832  D7FC               	bra	u87
   347  000834  D000               	nop2	
   348  000836                     
   349                           ;lcd_libreria.c: 9:     lcd_Comando(0x30);
   350  000836  0E30               	movlw	48
   351  000838  EC8F  F004         	call	_lcd_Comando
   352  00083C                     
   353                           ;lcd_libreria.c: 10:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   354  00083C  0EA6               	movlw	166
   355  00083E                     u97:
   356  00083E  2EE8               	decfsz	wreg,f,c
   357  000840  D7FE               	bra	u97
   358  000842  D000               	nop2	
   359  000844                     
   360                           ;lcd_libreria.c: 11:     lcd_Comando(0x32);
   361  000844  0E32               	movlw	50
   362  000846  EC8F  F004         	call	_lcd_Comando
   363  00084A                     
   364                           ;lcd_libreria.c: 12:     lcd_Comando(0x28);
   365  00084A  0E28               	movlw	40
   366  00084C  EC8F  F004         	call	_lcd_Comando
   367  000850                     
   368                           ;lcd_libreria.c: 13:     lcd_Comando(0x0C);
   369  000850  0E0C               	movlw	12
   370  000852  EC8F  F004         	call	_lcd_Comando
   371  000856                     
   372                           ;lcd_libreria.c: 14:     lcd_Comando(0x01);
   373  000856  0E01               	movlw	1
   374  000858  EC8F  F004         	call	_lcd_Comando
   375  00085C                     
   376                           ;lcd_libreria.c: 15:     lcd_Comando(0x06);
   377  00085C  0E06               	movlw	6
   378  00085E  EC8F  F004         	call	_lcd_Comando
   379  000862  0012               	return		;funcret
   380  000864                     __end_of_lcd_Init:
   381                           	callstack 0
   382                           
   383 ;; *************** function _lcd_Comando *****************
   384 ;; Defined at:
   385 ;;		line 18 in file "lcd_libreria.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  cmd             1    wreg     unsigned char 
   388 ;; Auto vars:     Size  Location     Type
   389 ;;  cmd             1    3[COMRAM] unsigned char 
   390 ;; Return value:  Size  Location     Type
   391 ;;                  1    wreg      void 
   392 ;; Registers used:
   393 ;;		wreg, status,2, status,0, cstack
   394 ;; Tracked objects:
   395 ;;		On entry : 0/0
   396 ;;		On exit  : 0/0
   397 ;;		Unchanged: 0/0
   398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   399 ;;      Params:         0       0       0       0       0       0       0       0       0
   400 ;;      Locals:         1       0       0       0       0       0       0       0       0
   401 ;;      Temps:          0       0       0       0       0       0       0       0       0
   402 ;;      Totals:         1       0       0       0       0       0       0       0       0
   403 ;;Total ram usage:        1 bytes
   404 ;; Hardware stack levels used: 1
   405 ;; Hardware stack levels required when called: 1
   406 ;; This function calls:
   407 ;;		_selectorRegistro
   408 ;; This function is called by:
   409 ;;		_lcd_Init
   410 ;;		_lcd_XY
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text3
   415  00091E                     __ptext3:
   416                           	callstack 0
   417  00091E                     _lcd_Comando:
   418                           	callstack 28
   419                           
   420                           ;incstack = 0
   421                           ;lcd_Comando@cmd stored from wreg
   422  00091E  6E04               	movwf	lcd_Comando@cmd^0,c
   423  000920                     
   424                           ;lcd_libreria.c: 20:     LATD &= 0x03;
   425  000920  0E03               	movlw	3
   426  000922  168C               	andwf	140,f,c	;volatile
   427                           
   428                           ;lcd_libreria.c: 21:     LATD |= (cmd&0xF0);
   429  000924  5004               	movf	lcd_Comando@cmd^0,w,c
   430  000926  0BF0               	andlw	240
   431  000928  128C               	iorwf	140,f,c	;volatile
   432  00092A                     
   433                           ;lcd_libreria.c: 22:     selectorRegistro(0);
   434  00092A  0E00               	movlw	0
   435  00092C  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   436  00092E  0E00               	movlw	0
   437  000930  6E01               	movwf	selectorRegistro@rs^0,c
   438  000932  EC54  F004         	call	_selectorRegistro	;wreg free
   439  000936                     
   440                           ;lcd_libreria.c: 23:     LATD &= 0x03;
   441  000936  0E03               	movlw	3
   442  000938  168C               	andwf	140,f,c	;volatile
   443  00093A                     
   444                           ;lcd_libreria.c: 24:     LATD |= ((cmd<<4)&0xF0);
   445  00093A  3804               	swapf	lcd_Comando@cmd^0,w,c
   446  00093C  0BF0               	andlw	240
   447  00093E  0BF0               	andlw	240
   448  000940  128C               	iorwf	140,f,c	;volatile
   449  000942                     
   450                           ;lcd_libreria.c: 25:     selectorRegistro(0);
   451  000942  0E00               	movlw	0
   452  000944  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   453  000946  0E00               	movlw	0
   454  000948  6E01               	movwf	selectorRegistro@rs^0,c
   455  00094A  EC54  F004         	call	_selectorRegistro	;wreg free
   456  00094E  0012               	return		;funcret
   457  000950                     __end_of_lcd_Comando:
   458                           	callstack 0
   459                           
   460 ;; *************** function _lcd_Cadena *****************
   461 ;; Defined at:
   462 ;;		line 47 in file "lcd_libreria.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  pal             2    4[COMRAM] PTR unsigned char 
   465 ;;		 -> STR_1(11), 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   477 ;;      Params:         2       0       0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0       0       0
   480 ;;      Totals:         2       0       0       0       0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels used: 1
   483 ;; Hardware stack levels required when called: 2
   484 ;; This function calls:
   485 ;;		_lcd_Caracter
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text4
   492  0008E8                     __ptext4:
   493                           	callstack 0
   494  0008E8                     _lcd_Cadena:
   495                           	callstack 28
   496  0008E8                     
   497                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   498  0008E8  EF80  F004         	goto	l867
   499  0008EC                     l863:
   500                           
   501                           ;lcd_libreria.c: 49:         lcd_Caracter(*pal);
   502  0008EC  C005  FFF6         	movff	lcd_Cadena@pal,tblptrl
   503  0008F0  C006  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   504  0008F4                     	if	0	;tblptru may be non-zero
   505  0008F4                     	endif
   506  0008F4                     	if	0	;tblptru may be non-zero
   507  0008F4                     	endif
   508  0008F4  0008               	tblrd		*
   509  0008F6  50F5               	movf	tablat,w,c
   510  0008F8  ECA8  F004         	call	_lcd_Caracter
   511  0008FC                     
   512                           ;lcd_libreria.c: 50:         pal++;
   513  0008FC  4A05               	infsnz	lcd_Cadena@pal^0,f,c
   514  0008FE  2A06               	incf	(lcd_Cadena@pal+1)^0,f,c
   515  000900                     l867:
   516                           
   517                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   518  000900  C005  FFF6         	movff	lcd_Cadena@pal,tblptrl
   519  000904  C006  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   520  000908                     	if	0	;tblptru may be non-zero
   521  000908                     	endif
   522  000908                     	if	0	;tblptru may be non-zero
   523  000908                     	endif
   524  000908  0008               	tblrd		*
   525  00090A  50F5               	movf	tablat,w,c
   526  00090C  0900               	iorlw	0
   527  00090E  A4D8               	btfss	status,2,c
   528  000910  EF8C  F004         	goto	u61
   529  000914  EF8E  F004         	goto	u60
   530  000918                     u61:
   531  000918  EF76  F004         	goto	l863
   532  00091C                     u60:
   533  00091C  0012               	return		;funcret
   534  00091E                     __end_of_lcd_Cadena:
   535                           	callstack 0
   536                           
   537 ;; *************** function _lcd_Caracter *****************
   538 ;; Defined at:
   539 ;;		line 37 in file "lcd_libreria.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;  dat             1    wreg     unsigned char 
   542 ;; Auto vars:     Size  Location     Type
   543 ;;  dat             1    3[COMRAM] unsigned char 
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   553 ;;      Params:         0       0       0       0       0       0       0       0       0
   554 ;;      Locals:         1       0       0       0       0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0       0       0       0       0
   556 ;;      Totals:         1       0       0       0       0       0       0       0       0
   557 ;;Total ram usage:        1 bytes
   558 ;; Hardware stack levels used: 1
   559 ;; Hardware stack levels required when called: 1
   560 ;; This function calls:
   561 ;;		_selectorRegistro
   562 ;; This function is called by:
   563 ;;		_main
   564 ;;		_lcd_Cadena
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text5
   569  000950                     __ptext5:
   570                           	callstack 0
   571  000950                     _lcd_Caracter:
   572                           	callstack 29
   573                           
   574                           ;incstack = 0
   575                           ;lcd_Caracter@dat stored from wreg
   576  000950  6E04               	movwf	lcd_Caracter@dat^0,c
   577  000952                     
   578                           ;lcd_libreria.c: 38:     LATD &= 0x03;
   579  000952  0E03               	movlw	3
   580  000954  168C               	andwf	140,f,c	;volatile
   581                           
   582                           ;lcd_libreria.c: 39:     LATD |= (dat&0xF0);
   583  000956  5004               	movf	lcd_Caracter@dat^0,w,c
   584  000958  0BF0               	andlw	240
   585  00095A  128C               	iorwf	140,f,c	;volatile
   586  00095C                     
   587                           ;lcd_libreria.c: 40:     selectorRegistro(1);
   588  00095C  0E00               	movlw	0
   589  00095E  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   590  000960  0E01               	movlw	1
   591  000962  6E01               	movwf	selectorRegistro@rs^0,c
   592  000964  EC54  F004         	call	_selectorRegistro	;wreg free
   593  000968                     
   594                           ;lcd_libreria.c: 41:     LATD &= 0x03;
   595  000968  0E03               	movlw	3
   596  00096A  168C               	andwf	140,f,c	;volatile
   597  00096C                     
   598                           ;lcd_libreria.c: 42:     LATD |= ((dat<<4)&0xF0);
   599  00096C  3804               	swapf	lcd_Caracter@dat^0,w,c
   600  00096E  0BF0               	andlw	240
   601  000970  0BF0               	andlw	240
   602  000972  128C               	iorwf	140,f,c	;volatile
   603  000974                     
   604                           ;lcd_libreria.c: 43:     selectorRegistro(1);
   605  000974  0E00               	movlw	0
   606  000976  6E02               	movwf	(selectorRegistro@rs+1)^0,c
   607  000978  0E01               	movlw	1
   608  00097A  6E01               	movwf	selectorRegistro@rs^0,c
   609  00097C  EC54  F004         	call	_selectorRegistro	;wreg free
   610  000980  0012               	return		;funcret
   611  000982                     __end_of_lcd_Caracter:
   612                           	callstack 0
   613                           
   614 ;; *************** function _selectorRegistro *****************
   615 ;; Defined at:
   616 ;;		line 54 in file "lcd_libreria.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  rs              2    0[COMRAM] int 
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   630 ;;      Params:         2       0       0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0
   632 ;;      Temps:          1       0       0       0       0       0       0       0       0
   633 ;;      Totals:         3       0       0       0       0       0       0       0       0
   634 ;;Total ram usage:        3 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; This function calls:
   637 ;;		Nothing
   638 ;; This function is called by:
   639 ;;		_lcd_Comando
   640 ;;		_lcd_Caracter
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text6
   645  0008A8                     __ptext6:
   646                           	callstack 0
   647  0008A8                     _selectorRegistro:
   648                           	callstack 28
   649  0008A8                     
   650                           ;lcd_libreria.c: 55:     if(rs == 1){
   651  0008A8  0401               	decf	selectorRegistro@rs^0,w,c
   652  0008AA  1002               	iorwf	(selectorRegistro@rs+1)^0,w,c
   653  0008AC  A4D8               	btfss	status,2,c
   654  0008AE  EF5B  F004         	goto	u41
   655  0008B2  EF5D  F004         	goto	u40
   656  0008B6                     u41:
   657  0008B6  EF60  F004         	goto	l53
   658  0008BA                     u40:
   659  0008BA                     
   660                           ;lcd_libreria.c: 56:         LATDbits.LATD2 = 1;
   661  0008BA  848C               	bsf	140,2,c	;volatile
   662                           
   663                           ;lcd_libreria.c: 57:     }
   664  0008BC  EF61  F004         	goto	l807
   665  0008C0                     l53:
   666                           
   667                           ;lcd_libreria.c: 59:         LATDbits.LATD2 = 0;
   668  0008C0  948C               	bcf	140,2,c	;volatile
   669  0008C2                     l807:
   670                           
   671                           ;lcd_libreria.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   672  0008C2  0E07               	movlw	7
   673  0008C4  6E03               	movwf	??_selectorRegistro^0,c
   674  0008C6  0E7D               	movlw	125
   675  0008C8                     u107:
   676  0008C8  2EE8               	decfsz	wreg,f,c
   677  0008CA  D7FE               	bra	u107
   678  0008CC  2E03               	decfsz	??_selectorRegistro^0,f,c
   679  0008CE  D7FC               	bra	u107
   680  0008D0  F000               	nop	
   681  0008D2                     
   682                           ;lcd_libreria.c: 62:     LATDbits.LATD3 = 1;
   683  0008D2  868C               	bsf	140,3,c	;volatile
   684                           
   685                           ;lcd_libreria.c: 63:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   686  0008D4  0E07               	movlw	7
   687  0008D6  6E03               	movwf	??_selectorRegistro^0,c
   688  0008D8  0E7D               	movlw	125
   689  0008DA                     u117:
   690  0008DA  2EE8               	decfsz	wreg,f,c
   691  0008DC  D7FE               	bra	u117
   692  0008DE  2E03               	decfsz	??_selectorRegistro^0,f,c
   693  0008E0  D7FC               	bra	u117
   694  0008E2  F000               	nop	
   695  0008E4                     
   696                           ;lcd_libreria.c: 64:     LATDbits.LATD3 = 0;
   697  0008E4  968C               	bcf	140,3,c	;volatile
   698  0008E6  0012               	return		;funcret
   699  0008E8                     __end_of_selectorRegistro:
   700                           	callstack 0
   701                           
   702                           	psect	rparam
   703  0000                     
   704                           	psect	idloc
   705                           
   706                           ;Config register IDLOC0 @ 0x200000
   707                           ;	unspecified, using default values
   708  200000                     	org	2097152
   709  200000  FF                 	db	255
   710                           
   711                           ;Config register IDLOC1 @ 0x200001
   712                           ;	unspecified, using default values
   713  200001                     	org	2097153
   714  200001  FF                 	db	255
   715                           
   716                           ;Config register IDLOC2 @ 0x200002
   717                           ;	unspecified, using default values
   718  200002                     	org	2097154
   719  200002  FF                 	db	255
   720                           
   721                           ;Config register IDLOC3 @ 0x200003
   722                           ;	unspecified, using default values
   723  200003                     	org	2097155
   724  200003  FF                 	db	255
   725                           
   726                           ;Config register IDLOC4 @ 0x200004
   727                           ;	unspecified, using default values
   728  200004                     	org	2097156
   729  200004  FF                 	db	255
   730                           
   731                           ;Config register IDLOC5 @ 0x200005
   732                           ;	unspecified, using default values
   733  200005                     	org	2097157
   734  200005  FF                 	db	255
   735                           
   736                           ;Config register IDLOC6 @ 0x200006
   737                           ;	unspecified, using default values
   738  200006                     	org	2097158
   739  200006  FF                 	db	255
   740                           
   741                           ;Config register IDLOC7 @ 0x200007
   742                           ;	unspecified, using default values
   743  200007                     	org	2097159
   744  200007  FF                 	db	255
   745                           
   746                           	psect	config
   747                           
   748                           ;Config register CONFIG1L @ 0x300000
   749                           ;	PLL Prescaler Selection bits
   750                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   751                           ;	System Clock Postscaler Selection bits
   752                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   753                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   754                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   755  300000                     	org	3145728
   756  300000  00                 	db	0
   757                           
   758                           ;Config register CONFIG1H @ 0x300001
   759                           ;	Oscillator Selection bits
   760                           ;	FOSC = HS, HS oscillator (HS)
   761                           ;	Fail-Safe Clock Monitor Enable bit
   762                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   763                           ;	Internal/External Oscillator Switchover bit
   764                           ;	IESO = ON, Oscillator Switchover mode enabled
   765  300001                     	org	3145729
   766  300001  8C                 	db	140
   767                           
   768                           ;Config register CONFIG2L @ 0x300002
   769                           ;	Power-up Timer Enable bit
   770                           ;	PWRT = ON, PWRT enabled
   771                           ;	Brown-out Reset Enable bits
   772                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   773                           ;	Brown-out Reset Voltage bits
   774                           ;	BORV = 3, Minimum setting 2.05V
   775                           ;	USB Voltage Regulator Enable bit
   776                           ;	VREGEN = OFF, USB voltage regulator disabled
   777  300002                     	org	3145730
   778  300002  18                 	db	24
   779                           
   780                           ;Config register CONFIG2H @ 0x300003
   781                           ;	Watchdog Timer Enable bit
   782                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   783                           ;	Watchdog Timer Postscale Select bits
   784                           ;	WDTPS = 32768, 1:32768
   785  300003                     	org	3145731
   786  300003  1E                 	db	30
   787                           
   788                           ; Padding undefined space
   789  300004                     	org	3145732
   790  300004  FF                 	db	255
   791                           
   792                           ;Config register CONFIG3H @ 0x300005
   793                           ;	CCP2 MUX bit
   794                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   795                           ;	PORTB A/D Enable bit
   796                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   797                           ;	Low-Power Timer 1 Oscillator Enable bit
   798                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   799                           ;	MCLR Pin Enable bit
   800                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   801  300005                     	org	3145733
   802  300005  81                 	db	129
   803                           
   804                           ;Config register CONFIG4L @ 0x300006
   805                           ;	Stack Full/Underflow Reset Enable bit
   806                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   807                           ;	Single-Supply ICSP Enable bit
   808                           ;	LVP = OFF, Single-Supply ICSP disabled
   809                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   810                           ;	ICPRT = OFF, ICPORT disabled
   811                           ;	Extended Instruction Set Enable bit
   812                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   813                           ;	Background Debugger Enable bit
   814                           ;	DEBUG = 0x1, unprogrammed default
   815  300006                     	org	3145734
   816  300006  80                 	db	128
   817                           
   818                           ; Padding undefined space
   819  300007                     	org	3145735
   820  300007  FF                 	db	255
   821                           
   822                           ;Config register CONFIG5L @ 0x300008
   823                           ;	Code Protection bit
   824                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   825                           ;	Code Protection bit
   826                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   827                           ;	Code Protection bit
   828                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   829                           ;	Code Protection bit
   830                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   831  300008                     	org	3145736
   832  300008  0F                 	db	15
   833                           
   834                           ;Config register CONFIG5H @ 0x300009
   835                           ;	Boot Block Code Protection bit
   836                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   837                           ;	Data EEPROM Code Protection bit
   838                           ;	CPD = OFF, Data EEPROM is not code-protected
   839  300009                     	org	3145737
   840  300009  C0                 	db	192
   841                           
   842                           ;Config register CONFIG6L @ 0x30000A
   843                           ;	Write Protection bit
   844                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   845                           ;	Write Protection bit
   846                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   847                           ;	Write Protection bit
   848                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   849                           ;	Write Protection bit
   850                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   851  30000A                     	org	3145738
   852  30000A  0F                 	db	15
   853                           
   854                           ;Config register CONFIG6H @ 0x30000B
   855                           ;	Configuration Register Write Protection bit
   856                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   857                           ;	Boot Block Write Protection bit
   858                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   859                           ;	Data EEPROM Write Protection bit
   860                           ;	WRTD = OFF, Data EEPROM is not write-protected
   861  30000B                     	org	3145739
   862  30000B  E0                 	db	224
   863                           
   864                           ;Config register CONFIG7L @ 0x30000C
   865                           ;	Table Read Protection bit
   866                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   867                           ;	Table Read Protection bit
   868                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   869                           ;	Table Read Protection bit
   870                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   871                           ;	Table Read Protection bit
   872                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   873  30000C                     	org	3145740
   874  30000C  0F                 	db	15
   875                           
   876                           ;Config register CONFIG7H @ 0x30000D
   877                           ;	Boot Block Table Read Protection bit
   878                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   879  30000D                     	org	3145741
   880  30000D  40                 	db	64
   881                           tosu	equ	0xFFF
   882                           tosh	equ	0xFFE
   883                           tosl	equ	0xFFD
   884                           stkptr	equ	0xFFC
   885                           pclatu	equ	0xFFB
   886                           pclath	equ	0xFFA
   887                           pcl	equ	0xFF9
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           prodh	equ	0xFF4
   893                           prodl	equ	0xFF3
   894                           indf0	equ	0xFEF
   895                           postinc0	equ	0xFEE
   896                           postdec0	equ	0xFED
   897                           preinc0	equ	0xFEC
   898                           plusw0	equ	0xFEB
   899                           fsr0h	equ	0xFEA
   900                           fsr0l	equ	0xFE9
   901                           wreg	equ	0xFE8
   902                           indf1	equ	0xFE7
   903                           postinc1	equ	0xFE6
   904                           postdec1	equ	0xFE5
   905                           preinc1	equ	0xFE4
   906                           plusw1	equ	0xFE3
   907                           fsr1h	equ	0xFE2
   908                           fsr1l	equ	0xFE1
   909                           bsr	equ	0xFE0
   910                           indf2	equ	0xFDF
   911                           postinc2	equ	0xFDE
   912                           postdec2	equ	0xFDD
   913                           preinc2	equ	0xFDC
   914                           plusw2	equ	0xFDB
   915                           fsr2h	equ	0xFDA
   916                           fsr2l	equ	0xFD9
   917                           status	equ	0xFD8

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_Cadena@pal	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_lcd_Cadena
    _main->_lcd_XY
    _lcd_XY->_lcd_Comando
    _lcd_Init->_lcd_Comando
    _lcd_Comando->_selectorRegistro
    _lcd_Cadena->_lcd_Caracter
    _lcd_Caracter->_selectorRegistro

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1895
                         _lcd_Cadena
                       _lcd_Caracter
                           _lcd_Init
                             _lcd_XY
 ---------------------------------------------------------------------------------
 (1) _lcd_XY                                               2     1      1     664
                                              4 COMRAM     2     1      1
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (1) _lcd_Init                                             1     1      0     370
                                              4 COMRAM     1     1      0
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (2) _lcd_Comando                                          1     1      0     370
                                              3 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (1) _lcd_Cadena                                           2     0      2     491
                                              4 COMRAM     2     0      2
                       _lcd_Caracter
 ---------------------------------------------------------------------------------
 (1) _lcd_Caracter                                         1     1      0     370
                                              3 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (3) _selectorRegistro                                     3     1      2     326
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_Cadena
     _lcd_Caracter
       _selectorRegistro
   _lcd_Caracter
   _lcd_Init
     _lcd_Comando
       _selectorRegistro
   _lcd_XY
     _lcd_Comando

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 01 16:44:55 2021

                       l15 08A0                         l16 08A0                         l33 0862  
                       l41 09A8                         l50 091C                         l44 0980  
                       l36 094E                         l53 08C0                         l55 08E6  
                       u40 08BA                         u41 08B6                         u50 0994  
                       u51 0990                         u60 091C                         u61 0918  
                       u77 0818                         u87 082C                         u97 083E  
          lcd_Caracter@dat 0004                        l811 08E4                        l803 08A8  
                      l805 08BA                        l821 0974                        l813 0952  
                      l807 08C2                        l815 095C                        l831 0942  
                      l823 0920                        l809 08D2                        l817 0968  
                      l825 092A                        l841 0836                        l833 080E  
                      l819 096C                        l827 0936                        l851 0856  
                      l843 083C                        l835 0812                        l861 08E8  
                      l829 093A                        l853 085C                        l845 0844  
                      l837 0820                        l863 08EC                        l847 084A  
                      l839 0826                        l855 0984                        l871 0866  
                      l865 08FC                        l849 0850                        l857 0994  
                      l873 0894                        l867 0900                        l859 09A0  
                      l869 0864                        u107 08C8                        u117 08DA  
                      wreg 000FE8                       STR_1 0801                       _LATD 000F8C  
                     _main 0864                       start 0000               ___param_bank 000000  
                    ?_main 0001                      _TRISD 000F95                      tablat 000FF5  
                    status 000FD8            __initialization 09AA       __end_of_lcd_Caracter 0982  
             __end_of_main 08A8                     ??_main 0007              __activetblptr 000001  
         _selectorRegistro 08A8       __size_of_lcd_Comando 0032           __end_of_lcd_Init 0864  
                   _lcd_XY 0982                     isa$std 000001               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
               __accesstop 0060    __end_of__initialization 09AA              ___rparam_used 000001  
           __pcstackCOMRAM 0001      __size_of_lcd_Caracter 0032                 _lcd_Cadena 08E8  
                  ?_lcd_XY 0005                  ?_lcd_Init 0001               _lcd_Caracter 0950  
                  __Hparam 0000   __end_of_selectorRegistro 08E8                    __Lparam 0000  
             __psmallconst 0800            __size_of_lcd_XY 0028                    __pcinit 09AA  
                  __ramtop 0800                    __ptext0 0864                    __ptext1 0982  
                  __ptext2 080E                    __ptext3 091E                    __ptext4 08E8  
                  __ptext5 0950                    __ptext6 08A8                    lcd_XY@x 0006  
                  lcd_XY@y 0005                 ??_lcd_Init 0005       end_of_initialization 09AA  
              ?_lcd_Cadena 0005              ??_lcd_Comando 0004                  _TRISDbits 000F95  
           __end_of_lcd_XY 09AA        start_initialization 09AA        __end_of_lcd_Comando 0950  
      __size_of_lcd_Cadena 0036             lcd_Comando@cmd 0004                   ??_lcd_XY 0006  
        __size_of_lcd_Init 0056          ?_selectorRegistro 0001         ??_selectorRegistro 0003  
              __smallconst 0800                _lcd_Comando 091E                   _LATDbits 000F8C  
            lcd_Cadena@pal 0005               ??_lcd_Cadena 0007         __end_of_lcd_Cadena 091E  
                 __Hrparam 0000                   __Lrparam 0000               __Lsmallconst 0800  
                 _lcd_Init 080E              __size_of_main 0044                   isa$xinst 000000  
            ?_lcd_Caracter 0001         selectorRegistro@rs 0001               ?_lcd_Comando 0001  
__size_of_selectorRegistro 0040             ??_lcd_Caracter 0004  
