

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 02 00:55:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	nvCOMRAM
    53  000004                     __pnvCOMRAM:
    54                           	callstack 0
    55  000004                     _valor:
    56                           	callstack 0
    57  000004                     	ds	1
    58  0000                     _LATDbits	set	3980
    59  0000                     _TRISDbits	set	3989
    60  0000                     _RCREG	set	4014
    61  0000                     _TXREG	set	4013
    62  0000                     _RCSTAbits	set	4011
    63  0000                     _TXSTAbits	set	4012
    64  0000                     _BAUDCONbits	set	4024
    65  0000                     _SPBRG	set	4015
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  007F54                     __pcinit:
    71                           	callstack 0
    72  007F54                     start_initialization:
    73                           	callstack 0
    74  007F54                     __initialization:
    75                           	callstack 0
    76  007F54                     end_of_initialization:
    77                           	callstack 0
    78  007F54                     __end_of__initialization:
    79                           	callstack 0
    80  007F54  0E00               	movlw	low (__Lmediumconst shr (0+16))
    81  007F56  6EF8               	movwf	tblptru,c
    82  007F58  0100               	movlb	0
    83  007F5A  EFC6  F03F         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86  000001                     __pcstackCOMRAM:
    87                           	callstack 0
    88  000001                     EUSART_Init@baud:
    89                           	callstack 0
    90  000001                     EUSART_TX@dato:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x0
    94  000001                     	ds	1
    95  000002                     ??_main:
    96                           
    97                           ; 1 bytes @ 0x1
    98  000002                     	ds	2
    99                           
   100 ;;
   101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   102 ;;
   103 ;; *************** function _main *****************
   104 ;; Defined at:
   105 ;;		line 14 in file "main.c"
   106 ;; Parameters:    Size  Location     Type
   107 ;;		None
   108 ;; Auto vars:     Size  Location     Type
   109 ;;		None
   110 ;; Return value:  Size  Location     Type
   111 ;;                  1    wreg      void 
   112 ;; Registers used:
   113 ;;		wreg, status,2, status,0, cstack
   114 ;; Tracked objects:
   115 ;;		On entry : 0/0
   116 ;;		On exit  : 0/0
   117 ;;		Unchanged: 0/0
   118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   119 ;;      Params:         0       0       0       0       0       0       0       0       0
   120 ;;      Locals:         0       0       0       0       0       0       0       0       0
   121 ;;      Temps:          2       0       0       0       0       0       0       0       0
   122 ;;      Totals:         2       0       0       0       0       0       0       0       0
   123 ;;Total ram usage:        2 bytes
   124 ;; Hardware stack levels required when called: 1
   125 ;; This function calls:
   126 ;;		_EUSART_Init
   127 ;;		_EUSART_RX
   128 ;;		_EUSART_TX
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           	psect	text0
   135  007F8C                     __ptext0:
   136                           	callstack 0
   137  007F8C                     _main:
   138                           	callstack 30
   139  007F8C                     
   140                           ;main.c: 15:     EUSART_Init(31);
   141  007F8C  0E1F               	movlw	31
   142  007F8E  ECBA  F03F         	call	_EUSART_Init
   143  007F92                     
   144                           ;main.c: 16:     TRISDbits.RD0 = 0;
   145  007F92  9095               	bcf	149,0,c	;volatile
   146  007F94                     
   147                           ;main.c: 17:     TRISDbits.RD1 = 0;
   148  007F94  9295               	bcf	149,1,c	;volatile
   149  007F96                     l773:
   150                           
   151                           ;main.c: 19:         valor = EUSART_RX();
   152  007F96  ECA8  F03F         	call	_EUSART_RX	;wreg free
   153  007F9A  6E04               	movwf	_valor^0,c
   154                           
   155                           ;main.c: 20:         switch(valor){
   156  007F9C  EFD9  F03F         	goto	l777
   157  007FA0                     l51:
   158                           
   159                           ;main.c: 22:                 LATDbits.LATD0 = 1;
   160  007FA0  808C               	bsf	140,0,c	;volatile
   161                           
   162                           ;main.c: 23:                 break;
   163  007FA2  EFEE  F03F         	goto	l779
   164  007FA6                     l53:
   165                           
   166                           ;main.c: 25:                 LATDbits.LATD0 = 0;
   167  007FA6  908C               	bcf	140,0,c	;volatile
   168                           
   169                           ;main.c: 26:                 break;
   170  007FA8  EFEE  F03F         	goto	l779
   171  007FAC                     l54:
   172                           
   173                           ;main.c: 28:                 LATDbits.LATD1 = 1;
   174  007FAC  828C               	bsf	140,1,c	;volatile
   175                           
   176                           ;main.c: 29:                 break;
   177  007FAE  EFEE  F03F         	goto	l779
   178  007FB2                     l777:
   179  007FB2  5004               	movf	_valor^0,w,c
   180  007FB4  6E02               	movwf	??_main^0,c
   181  007FB6  6A03               	clrf	(??_main+1)^0,c
   182                           
   183                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   184                           ; Switch size 1, requested type "simple"
   185                           ; Number of cases is 1, Range of values is 0 to 0
   186                           ; switch strategies available:
   187                           ; Name         Instructions Cycles
   188                           ; simple_byte            4     3 (average)
   189                           ;	Chosen strategy is simple_byte
   190  007FB8  5003               	movf	(??_main+1)^0,w,c
   191  007FBA  0A00               	xorlw	0	; case 0
   192  007FBC  B4D8               	btfsc	status,2,c
   193  007FBE  EFE3  F03F         	goto	l791
   194  007FC2  EFD6  F03F         	goto	l54
   195  007FC6                     l791:
   196                           
   197                           ; Switch size 1, requested type "simple"
   198                           ; Number of cases is 2, Range of values is 49 to 50
   199                           ; switch strategies available:
   200                           ; Name         Instructions Cycles
   201                           ; simple_byte            7     4 (average)
   202                           ;	Chosen strategy is simple_byte
   203  007FC6  5002               	movf	??_main^0,w,c
   204  007FC8  0A31               	xorlw	49	; case 49
   205  007FCA  B4D8               	btfsc	status,2,c
   206  007FCC  EFD0  F03F         	goto	l51
   207  007FD0  0A03               	xorlw	3	; case 50
   208  007FD2  B4D8               	btfsc	status,2,c
   209  007FD4  EFD3  F03F         	goto	l53
   210  007FD8  EFD6  F03F         	goto	l54
   211  007FDC                     l779:
   212                           
   213                           ;main.c: 31:         EUSART_TX(valor);
   214  007FDC  5004               	movf	_valor^0,w,c
   215  007FDE  ECAF  F03F         	call	_EUSART_TX
   216  007FE2                     
   217                           ;main.c: 32:         _delay((unsigned long)((100)*(20000000UL/4000.0)));
   218  007FE2  0E03               	movlw	3
   219  007FE4  6E03               	movwf	(??_main+1)^0,c
   220  007FE6  0E8A               	movlw	138
   221  007FE8  6E02               	movwf	??_main^0,c
   222  007FEA  0E56               	movlw	86
   223  007FEC                     u37:
   224  007FEC  2EE8               	decfsz	wreg,f,c
   225  007FEE  D7FE               	bra	u37
   226  007FF0  2E02               	decfsz	??_main^0,f,c
   227  007FF2  D7FC               	bra	u37
   228  007FF4  2E03               	decfsz	(??_main+1)^0,f,c
   229  007FF6  D7FA               	bra	u37
   230  007FF8  EFCB  F03F         	goto	l773
   231  007FFC  EF00  F000         	goto	start
   232  008000                     __end_of_main:
   233                           	callstack 0
   234                           
   235 ;; *************** function _EUSART_TX *****************
   236 ;; Defined at:
   237 ;;		line 17 in file "EUSART_libreria.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;  dato            1    wreg     unsigned char 
   240 ;; Auto vars:     Size  Location     Type
   241 ;;  dato            1    0[COMRAM] unsigned char 
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		wreg
   246 ;; Tracked objects:
   247 ;;		On entry : 0/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   251 ;;      Params:         0       0       0       0       0       0       0       0       0
   252 ;;      Locals:         1       0       0       0       0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0       0       0       0       0
   254 ;;      Totals:         1       0       0       0       0       0       0       0       0
   255 ;;Total ram usage:        1 bytes
   256 ;; Hardware stack levels used: 1
   257 ;; This function calls:
   258 ;;		Nothing
   259 ;; This function is called by:
   260 ;;		_main
   261 ;;		_EUSART_Cadena
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265                           	psect	text1
   266  007F5E                     __ptext1:
   267                           	callstack 0
   268  007F5E                     _EUSART_TX:
   269                           	callstack 30
   270                           
   271                           ;incstack = 0
   272                           ;EUSART_TX@dato stored from wreg
   273  007F5E  6E01               	movwf	EUSART_TX@dato^0,c
   274  007F60                     l18:
   275  007F60  A2AC               	btfss	172,1,c	;volatile
   276  007F62  EFB5  F03F         	goto	u11
   277  007F66  EFB7  F03F         	goto	u10
   278  007F6A                     u11:
   279  007F6A  EFB0  F03F         	goto	l18
   280  007F6E                     u10:
   281  007F6E                     
   282                           ;EUSART_libreria.c: 19:     TXREG = dato;
   283  007F6E  C001  FFAD         	movff	EUSART_TX@dato,4013	;volatile
   284  007F72  0012               	return		;funcret
   285  007F74                     __end_of_EUSART_TX:
   286                           	callstack 0
   287                           
   288 ;; *************** function _EUSART_RX *****************
   289 ;; Defined at:
   290 ;;		line 21 in file "EUSART_libreria.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      unsigned char 
   297 ;; Registers used:
   298 ;;		wreg, status,2
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   304 ;;      Params:         0       0       0       0       0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text2
   318  007F50                     __ptext2:
   319                           	callstack 0
   320  007F50                     _EUSART_RX:
   321                           	callstack 30
   322  007F50                     
   323                           ;EUSART_libreria.c: 22:     return RCREG;
   324  007F50  50AE               	movf	174,w,c	;volatile
   325  007F52  0012               	return		;funcret
   326  007F54                     __end_of_EUSART_RX:
   327                           	callstack 0
   328                           
   329 ;; *************** function _EUSART_Init *****************
   330 ;; Defined at:
   331 ;;		line 3 in file "EUSART_libreria.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  baud            1    wreg     unsigned char 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  baud            1    0[COMRAM] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         0       0       0       0       0       0       0       0       0
   346 ;;      Locals:         1       0       0       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0
   348 ;;      Totals:         1       0       0       0       0       0       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text3
   359  007F74                     __ptext3:
   360                           	callstack 0
   361  007F74                     _EUSART_Init:
   362                           	callstack 30
   363                           
   364                           ;incstack = 0
   365                           ;EUSART_Init@baud stored from wreg
   366  007F74  6E01               	movwf	EUSART_Init@baud^0,c
   367  007F76                     
   368                           ;EUSART_libreria.c: 4:     SPBRG = baud;
   369  007F76  C001  FFAF         	movff	EUSART_Init@baud,4015	;volatile
   370  007F7A                     
   371                           ;EUSART_libreria.c: 5:     BAUDCONbits.BRG16 = 0;
   372  007F7A  96B8               	bcf	184,3,c	;volatile
   373  007F7C                     
   374                           ;EUSART_libreria.c: 6:     TXSTAbits.BRGH = 0;
   375  007F7C  94AC               	bcf	172,2,c	;volatile
   376  007F7E                     
   377                           ;EUSART_libreria.c: 7:     TXSTAbits.SYNC = 0;
   378  007F7E  98AC               	bcf	172,4,c	;volatile
   379  007F80                     
   380                           ;EUSART_libreria.c: 8:     RCSTAbits.SPEN = 1;
   381  007F80  8EAB               	bsf	171,7,c	;volatile
   382  007F82                     
   383                           ;EUSART_libreria.c: 10:     TXSTAbits.TXEN = 1;
   384  007F82  8AAC               	bsf	172,5,c	;volatile
   385  007F84                     
   386                           ;EUSART_libreria.c: 11:     TXSTAbits.TX9 = 0;
   387  007F84  9CAC               	bcf	172,6,c	;volatile
   388  007F86                     
   389                           ;EUSART_libreria.c: 13:     RCSTAbits.CREN = 1;
   390  007F86  88AB               	bsf	171,4,c	;volatile
   391  007F88                     
   392                           ;EUSART_libreria.c: 14:     RCSTAbits.RX9 = 0;
   393  007F88  9CAB               	bcf	171,6,c	;volatile
   394  007F8A  0012               	return		;funcret
   395  007F8C                     __end_of_EUSART_Init:
   396                           	callstack 0
   397  0000                     
   398                           	psect	rparam
   399  0000                     
   400                           	psect	idloc
   401                           
   402                           ;Config register IDLOC0 @ 0x200000
   403                           ;	unspecified, using default values
   404  200000                     	org	2097152
   405  200000  FF                 	db	255
   406                           
   407                           ;Config register IDLOC1 @ 0x200001
   408                           ;	unspecified, using default values
   409  200001                     	org	2097153
   410  200001  FF                 	db	255
   411                           
   412                           ;Config register IDLOC2 @ 0x200002
   413                           ;	unspecified, using default values
   414  200002                     	org	2097154
   415  200002  FF                 	db	255
   416                           
   417                           ;Config register IDLOC3 @ 0x200003
   418                           ;	unspecified, using default values
   419  200003                     	org	2097155
   420  200003  FF                 	db	255
   421                           
   422                           ;Config register IDLOC4 @ 0x200004
   423                           ;	unspecified, using default values
   424  200004                     	org	2097156
   425  200004  FF                 	db	255
   426                           
   427                           ;Config register IDLOC5 @ 0x200005
   428                           ;	unspecified, using default values
   429  200005                     	org	2097157
   430  200005  FF                 	db	255
   431                           
   432                           ;Config register IDLOC6 @ 0x200006
   433                           ;	unspecified, using default values
   434  200006                     	org	2097158
   435  200006  FF                 	db	255
   436                           
   437                           ;Config register IDLOC7 @ 0x200007
   438                           ;	unspecified, using default values
   439  200007                     	org	2097159
   440  200007  FF                 	db	255
   441                           
   442                           	psect	config
   443                           
   444                           ;Config register CONFIG1L @ 0x300000
   445                           ;	PLL Prescaler Selection bits
   446                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   447                           ;	System Clock Postscaler Selection bits
   448                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   449                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   450                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   451  300000                     	org	3145728
   452  300000  00                 	db	0
   453                           
   454                           ;Config register CONFIG1H @ 0x300001
   455                           ;	Oscillator Selection bits
   456                           ;	FOSC = HS, HS oscillator (HS)
   457                           ;	Fail-Safe Clock Monitor Enable bit
   458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   459                           ;	Internal/External Oscillator Switchover bit
   460                           ;	IESO = ON, Oscillator Switchover mode enabled
   461  300001                     	org	3145729
   462  300001  8C                 	db	140
   463                           
   464                           ;Config register CONFIG2L @ 0x300002
   465                           ;	Power-up Timer Enable bit
   466                           ;	PWRT = ON, PWRT enabled
   467                           ;	Brown-out Reset Enable bits
   468                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   469                           ;	Brown-out Reset Voltage bits
   470                           ;	BORV = 3, Minimum setting 2.05V
   471                           ;	USB Voltage Regulator Enable bit
   472                           ;	VREGEN = OFF, USB voltage regulator disabled
   473  300002                     	org	3145730
   474  300002  18                 	db	24
   475                           
   476                           ;Config register CONFIG2H @ 0x300003
   477                           ;	Watchdog Timer Enable bit
   478                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   479                           ;	Watchdog Timer Postscale Select bits
   480                           ;	WDTPS = 32768, 1:32768
   481  300003                     	org	3145731
   482  300003  1E                 	db	30
   483                           
   484                           ; Padding undefined space
   485  300004                     	org	3145732
   486  300004  FF                 	db	255
   487                           
   488                           ;Config register CONFIG3H @ 0x300005
   489                           ;	CCP2 MUX bit
   490                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   491                           ;	PORTB A/D Enable bit
   492                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   493                           ;	Low-Power Timer 1 Oscillator Enable bit
   494                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   495                           ;	MCLR Pin Enable bit
   496                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   497  300005                     	org	3145733
   498  300005  81                 	db	129
   499                           
   500                           ;Config register CONFIG4L @ 0x300006
   501                           ;	Stack Full/Underflow Reset Enable bit
   502                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   503                           ;	Single-Supply ICSP Enable bit
   504                           ;	LVP = OFF, Single-Supply ICSP disabled
   505                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   506                           ;	ICPRT = OFF, ICPORT disabled
   507                           ;	Extended Instruction Set Enable bit
   508                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   509                           ;	Background Debugger Enable bit
   510                           ;	DEBUG = 0x1, unprogrammed default
   511  300006                     	org	3145734
   512  300006  80                 	db	128
   513                           
   514                           ; Padding undefined space
   515  300007                     	org	3145735
   516  300007  FF                 	db	255
   517                           
   518                           ;Config register CONFIG5L @ 0x300008
   519                           ;	Code Protection bit
   520                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   521                           ;	Code Protection bit
   522                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   523                           ;	Code Protection bit
   524                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   525                           ;	Code Protection bit
   526                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   527  300008                     	org	3145736
   528  300008  0F                 	db	15
   529                           
   530                           ;Config register CONFIG5H @ 0x300009
   531                           ;	Boot Block Code Protection bit
   532                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   533                           ;	Data EEPROM Code Protection bit
   534                           ;	CPD = OFF, Data EEPROM is not code-protected
   535  300009                     	org	3145737
   536  300009  C0                 	db	192
   537                           
   538                           ;Config register CONFIG6L @ 0x30000A
   539                           ;	Write Protection bit
   540                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   541                           ;	Write Protection bit
   542                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   543                           ;	Write Protection bit
   544                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   545                           ;	Write Protection bit
   546                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   547  30000A                     	org	3145738
   548  30000A  0F                 	db	15
   549                           
   550                           ;Config register CONFIG6H @ 0x30000B
   551                           ;	Configuration Register Write Protection bit
   552                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   553                           ;	Boot Block Write Protection bit
   554                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   555                           ;	Data EEPROM Write Protection bit
   556                           ;	WRTD = OFF, Data EEPROM is not write-protected
   557  30000B                     	org	3145739
   558  30000B  E0                 	db	224
   559                           
   560                           ;Config register CONFIG7L @ 0x30000C
   561                           ;	Table Read Protection bit
   562                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   563                           ;	Table Read Protection bit
   564                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   565                           ;	Table Read Protection bit
   566                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   567                           ;	Table Read Protection bit
   568                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   569  30000C                     	org	3145740
   570  30000C  0F                 	db	15
   571                           
   572                           ;Config register CONFIG7H @ 0x30000D
   573                           ;	Boot Block Table Read Protection bit
   574                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   575  30000D                     	org	3145741
   576  30000D  40                 	db	64
   577                           tosu	equ	0xFFF
   578                           tosh	equ	0xFFE
   579                           tosl	equ	0xFFD
   580                           stkptr	equ	0xFFC
   581                           pclatu	equ	0xFFB
   582                           pclath	equ	0xFFA
   583                           pcl	equ	0xFF9
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           prodh	equ	0xFF4
   589                           prodl	equ	0xFF3
   590                           indf0	equ	0xFEF
   591                           postinc0	equ	0xFEE
   592                           postdec0	equ	0xFED
   593                           preinc0	equ	0xFEC
   594                           plusw0	equ	0xFEB
   595                           fsr0h	equ	0xFEA
   596                           fsr0l	equ	0xFE9
   597                           wreg	equ	0xFE8
   598                           indf1	equ	0xFE7
   599                           postinc1	equ	0xFE6
   600                           postdec1	equ	0xFE5
   601                           preinc1	equ	0xFE4
   602                           plusw1	equ	0xFE3
   603                           fsr1h	equ	0xFE2
   604                           fsr1l	equ	0xFE1
   605                           bsr	equ	0xFE0
   606                           indf2	equ	0xFDF
   607                           postinc2	equ	0xFDE
   608                           postdec2	equ	0xFDD
   609                           preinc2	equ	0xFDC
   610                           plusw2	equ	0xFDB
   611                           fsr2h	equ	0xFDA
   612                           fsr2l	equ	0xFD9
   613                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_EUSART_Init
    _main->_EUSART_TX

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              1 COMRAM     2     2      0
                        _EUSART_Init
                          _EUSART_RX
                          _EUSART_TX
 ---------------------------------------------------------------------------------
 (1) _EUSART_TX                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_RX                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _EUSART_RX
   _EUSART_TX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       4       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       4      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 02 00:55:11 2021

                     l21 7F72                       l15 7F8A                       l24 7F52  
                     l18 7F60                       l51 7FA0                       l53 7FA6  
                     l54 7FAC                       u10 7F6E                       u11 7F6A  
                     u37 7FEC                      l741 7F80                      l733 7F76  
                    l743 7F82                      l735 7F7A                      l751 7F60  
                    l745 7F84                      l737 7F7C                      l753 7F6E  
                    l747 7F86                      l739 7F7E                      l755 7F50  
                    l771 7F94                      l749 7F88                      l781 7FE2  
                    l773 7F96                      l791 7FC6                      l767 7F8C  
                    l777 7FB2                      l769 7F92                      l779 7FDC  
                    wreg 000FE8             ?_EUSART_Init 0001                     _main 7F8C  
                   start 0000       __size_of_EUSART_RX 0004       __size_of_EUSART_TX 0016  
           ___param_bank 000000                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _valor 0004  
                  status 000FD8          __initialization 7F54             __end_of_main 8000  
                 ??_main 0002            __activetblptr 000002        __end_of_EUSART_RX 7F54  
      __end_of_EUSART_TX 7F74                   isa$std 000001                   tblptru 000FF8  
   __size_of_EUSART_Init 0018               __accesstop 0060  __end_of__initialization 7F54  
          ___rparam_used 000001           __pcstackCOMRAM 0001               __pnvCOMRAM 0004  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F54  
                __ramtop 0800                  __ptext0 7F8C                  __ptext1 7F5E  
                __ptext2 7F50                  __ptext3 7F74            EUSART_TX@dato 0001  
              _EUSART_RX 7F50                _EUSART_TX 7F5E     end_of_initialization 7F54  
          __Lmediumconst 0000                _RCSTAbits 000FAB                _TRISDbits 000F95  
             ?_EUSART_RX 0001               ?_EUSART_TX 0001                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8      start_initialization 7F54            ??_EUSART_Init 0001  
            ??_EUSART_RX 0001              ??_EUSART_TX 0001      __end_of_EUSART_Init 7F8C  
               _LATDbits 000F8C              _EUSART_Init 7F74                 __Hrparam 0000  
        EUSART_Init@baud 0001                 __Lrparam 0000            __size_of_main 0074  
               isa$xinst 000000  
