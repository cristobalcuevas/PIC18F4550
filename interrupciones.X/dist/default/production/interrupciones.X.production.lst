

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 12 02:10:35 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _LATDbits	set	3980
    53  0000                     _RCONbits	set	4048
    54  0000                     _INTCON2bits	set	4081
    55  0000                     _INTCON3bits	set	4080
    56  0000                     _INTCONbits	set	4082
    57  0000                     _TRISBbits	set	3987
    58  0000                     _TRISDbits	set	3989
    59                           
    60                           ; #config settings
    61                           
    62                           	psect	cinit
    63  0000D0                     __pcinit:
    64                           	callstack 0
    65  0000D0                     start_initialization:
    66                           	callstack 0
    67  0000D0                     __initialization:
    68                           	callstack 0
    69  0000D0                     end_of_initialization:
    70                           	callstack 0
    71  0000D0                     __end_of__initialization:
    72                           	callstack 0
    73  0000D0  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  0000D2  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  0000D4  0100               	movlb	0
    76  0000D6  EF5E  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	callstack 0
    81  000001                     ??_INT_ALTA:
    82  000001                     
    83                           ; 1 bytes @ 0x0
    84  000001                     	ds	1
    85  000002                     ??_INT_BAJA:
    86                           
    87                           ; 1 bytes @ 0x1
    88  000002                     	ds	4
    89  000006                     
    90                           ; 1 bytes @ 0x5
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 12 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		cstack
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   110 ;;      Params:         0       0       0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called: 3
   116 ;; This function calls:
   117 ;;		_INT_Init
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  0000BC                     __ptext0:
   125                           	callstack 0
   126  0000BC                     _main:
   127                           	callstack 28
   128  0000BC                     
   129                           ;main.c: 13:     INT_Init();
   130  0000BC  EC51  F000         	call	_INT_Init	;wreg free
   131  0000C0                     
   132                           ;main.c: 14:     TRISDbits.RD0 = 0;
   133  0000C0  9095               	bcf	149,0,c	;volatile
   134  0000C2                     
   135                           ;main.c: 15:     TRISDbits.RD1 = 0;
   136  0000C2  9295               	bcf	149,1,c	;volatile
   137  0000C4                     
   138                           ;main.c: 16:     TRISDbits.RD2 = 0;
   139  0000C4  9495               	bcf	149,2,c	;volatile
   140  0000C6                     
   141                           ;main.c: 17:     TRISDbits.RD4 = 0;
   142  0000C6  9895               	bcf	149,4,c	;volatile
   143  0000C8                     l9:
   144  0000C8  EF64  F000         	goto	l9
   145  0000CC  EF34  F000         	goto	start
   146  0000D0                     __end_of_main:
   147                           	callstack 0
   148                           
   149 ;; *************** function _INT_Init *****************
   150 ;; Defined at:
   151 ;;		line 10 in file "interrupcion_libreria.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		None
   160 ;; Tracked objects:
   161 ;;		On entry : 0/0
   162 ;;		On exit  : 0/0
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   165 ;;      Params:         0       0       0       0       0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels used: 1
   171 ;; Hardware stack levels required when called: 2
   172 ;; This function calls:
   173 ;;		Nothing
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           	psect	text1
   180  0000A2                     __ptext1:
   181                           	callstack 0
   182  0000A2                     _INT_Init:
   183                           	callstack 28
   184  0000A2                     
   185                           ;interrupcion_libreria.c: 11:     TRISBbits.RB0 = 1;
   186  0000A2  8093               	bsf	147,0,c	;volatile
   187                           
   188                           ;interrupcion_libreria.c: 12:     TRISBbits.RB1 = 1;
   189  0000A4  8293               	bsf	147,1,c	;volatile
   190                           
   191                           ;interrupcion_libreria.c: 14:     INTCONbits.INT0E = 1;
   192  0000A6  88F2               	bsf	242,4,c	;volatile
   193                           
   194                           ;interrupcion_libreria.c: 15:     INTCON3bits.INT1E = 1;
   195  0000A8  86F0               	bsf	240,3,c	;volatile
   196                           
   197                           ;interrupcion_libreria.c: 17:     INTCONbits.INT0IF = 0;
   198  0000AA  92F2               	bcf	242,1,c	;volatile
   199                           
   200                           ;interrupcion_libreria.c: 18:     INTCON3bits.INT1IF = 0;
   201  0000AC  90F0               	bcf	240,0,c	;volatile
   202                           
   203                           ;interrupcion_libreria.c: 20:     INTCON3bits.INT1IP = 0;
   204  0000AE  9CF0               	bcf	240,6,c	;volatile
   205                           
   206                           ;interrupcion_libreria.c: 22:     INTCON2bits.INTEDG0 = 0;
   207  0000B0  9CF1               	bcf	241,6,c	;volatile
   208                           
   209                           ;interrupcion_libreria.c: 23:     INTCON2bits.INTEDG1 = 0;
   210  0000B2  9AF1               	bcf	241,5,c	;volatile
   211                           
   212                           ;interrupcion_libreria.c: 25:     RCONbits.IPEN = 1;
   213  0000B4  8ED0               	bsf	208,7,c	;volatile
   214                           
   215                           ;interrupcion_libreria.c: 26:     INTCONbits.GIEH = 1;
   216  0000B6  8EF2               	bsf	242,7,c	;volatile
   217                           
   218                           ;interrupcion_libreria.c: 27:     INTCONbits.GIEL = 1;
   219  0000B8  8CF2               	bsf	242,6,c	;volatile
   220  0000BA  0012               	return		;funcret
   221  0000BC                     __end_of_INT_Init:
   222                           	callstack 0
   223                           
   224 ;; *************** function _INT_BAJA *****************
   225 ;; Defined at:
   226 ;;		line 36 in file "interrupcion_libreria.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0
   235 ;; Tracked objects:
   236 ;;		On entry : 0/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   240 ;;      Params:         0       0       0       0       0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0       0       0       0       0
   242 ;;      Temps:          4       0       0       0       0       0       0       0       0
   243 ;;      Totals:         4       0       0       0       0       0       0       0       0
   244 ;;Total ram usage:        4 bytes
   245 ;; Hardware stack levels used: 1
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		Interrupt level 1
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254                           	psect	intcodelo
   255  000018                     __pintcodelo:
   256                           	callstack 0
   257  000018                     _INT_BAJA:
   258                           	callstack 28
   259                           
   260                           ;incstack = 0
   261  000018  8006               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   262  00001A  CFD8 F003          	movff	status,??_INT_BAJA+1
   263  00001E  CFE8 F004          	movff	wreg,??_INT_BAJA+2
   264  000022  CFE0 F005          	movff	bsr,??_INT_BAJA+3
   265  000026                     
   266                           ;interrupcion_libreria.c: 37:     if(INTCON3bits.INT1IF == 1){
   267  000026  A0F0               	btfss	240,0,c	;volatile
   268  000028  EF18  F000         	goto	i1u3_21
   269  00002C  EF1A  F000         	goto	i1u3_20
   270  000030                     i1u3_21:
   271  000030  EF2C  F000         	goto	i1l39
   272  000034                     i1u3_20:
   273  000034                     
   274                           ;interrupcion_libreria.c: 38:         LATDbits.LATD1 = ~LATDbits.LATD1;
   275  000034  B28C               	btfsc	140,1,c	;volatile
   276  000036  EF1F  F000         	goto	i1u4_21
   277  00003A  EF22  F000         	goto	i1u4_20
   278  00003E                     i1u4_21:
   279  00003E  0E01               	movlw	1
   280  000040  EF23  F000         	goto	i1u4_26
   281  000044                     i1u4_20:
   282  000044  0E00               	movlw	0
   283  000046                     i1u4_26:
   284  000046  0AFF               	xorlw	255
   285  000048  6E02               	movwf	??_INT_BAJA^0,c
   286  00004A  4602               	rlncf	??_INT_BAJA^0,f,c
   287  00004C  508C               	movf	140,w,c	;volatile
   288  00004E  1802               	xorwf	??_INT_BAJA^0,w,c
   289  000050  0BFD               	andlw	-3
   290  000052  1802               	xorwf	??_INT_BAJA^0,w,c
   291  000054  6E8C               	movwf	140,c	;volatile
   292  000056                     
   293                           ;interrupcion_libreria.c: 39:         INTCON3bits.INT1IF = 0;
   294  000056  90F0               	bcf	240,0,c	;volatile
   295  000058                     i1l39:
   296  000058  C005  FFE0         	movff	??_INT_BAJA+3,bsr
   297  00005C  C004  FFE8         	movff	??_INT_BAJA+2,wreg
   298  000060  C003  FFD8         	movff	??_INT_BAJA+1,status
   299  000064  9006               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   300  000066  0010               	retfie	
   301  000068                     __end_of_INT_BAJA:
   302                           	callstack 0
   303                           
   304 ;; *************** function _INT_ALTA *****************
   305 ;; Defined at:
   306 ;;		line 30 in file "interrupcion_libreria.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;		None
   311 ;; Return value:  Size  Location     Type
   312 ;;                  1    wreg      void 
   313 ;; Registers used:
   314 ;;		wreg, status,2, status,0
   315 ;; Tracked objects:
   316 ;;		On entry : 0/0
   317 ;;		On exit  : 0/0
   318 ;;		Unchanged: 0/0
   319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   320 ;;      Params:         0       0       0       0       0       0       0       0       0
   321 ;;      Locals:         0       0       0       0       0       0       0       0       0
   322 ;;      Temps:          1       0       0       0       0       0       0       0       0
   323 ;;      Totals:         1       0       0       0       0       0       0       0       0
   324 ;;Total ram usage:        1 bytes
   325 ;; Hardware stack levels used: 1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		Interrupt level 2
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	intcode
   334  000008                     __pintcode:
   335                           	callstack 0
   336  000008                     _INT_ALTA:
   337                           	callstack 28
   338                           
   339                           ;incstack = 0
   340  000008  8206               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   341  00000A  ED36  F000         	call	int_func,f	;refresh shadow registers
   342                           
   343                           	psect	intcode_body
   344  00006C                     __pintcode_body:
   345                           	callstack 28
   346  00006C                     int_func:
   347                           	callstack 28
   348  00006C  0006               	pop		; remove dummy address from shadow register refresh
   349  00006E                     
   350                           ;interrupcion_libreria.c: 31:     if(INTCONbits.INT0IF == 1){
   351  00006E  A2F2               	btfss	242,1,c	;volatile
   352  000070  EF3C  F000         	goto	i2u1_41
   353  000074  EF3E  F000         	goto	i2u1_40
   354  000078                     i2u1_41:
   355  000078  EF4F  F000         	goto	i2l33
   356  00007C                     i2u1_40:
   357  00007C                     
   358                           ;interrupcion_libreria.c: 32:         LATDbits.LATD0 = ~LATDbits.LATD0;
   359  00007C  B08C               	btfsc	140,0,c	;volatile
   360  00007E  EF43  F000         	goto	i2u2_41
   361  000082  EF46  F000         	goto	i2u2_40
   362  000086                     i2u2_41:
   363  000086  0E01               	movlw	1
   364  000088  EF47  F000         	goto	i2u2_46
   365  00008C                     i2u2_40:
   366  00008C  0E00               	movlw	0
   367  00008E                     i2u2_46:
   368  00008E  0AFF               	xorlw	255
   369  000090  6E01               	movwf	??_INT_ALTA^0,c
   370  000092  508C               	movf	140,w,c	;volatile
   371  000094  1801               	xorwf	??_INT_ALTA^0,w,c
   372  000096  0BFE               	andlw	-2
   373  000098  1801               	xorwf	??_INT_ALTA^0,w,c
   374  00009A  6E8C               	movwf	140,c	;volatile
   375  00009C                     
   376                           ;interrupcion_libreria.c: 33:         INTCONbits.INT0IF = 0;
   377  00009C  92F2               	bcf	242,1,c	;volatile
   378  00009E                     i2l33:
   379  00009E  9206               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  0000A0  0011               	retfie		f
   381  0000A2                     __end_of_INT_ALTA:
   382                           	callstack 0
   383  0000                     
   384                           	psect	rparam
   385  0000                     
   386                           	psect	temp
   387  000006                     btemp:
   388                           	callstack 0
   389  000006                     	ds	1
   390  0000                     int$flags	set	btemp
   391  0000                     wtemp8	set	btemp+1
   392  0000                     ttemp5	set	btemp+1
   393  0000                     ttemp6	set	btemp+4
   394  0000                     ttemp7	set	btemp+8
   395                           
   396                           	psect	idloc
   397                           
   398                           ;Config register IDLOC0 @ 0x200000
   399                           ;	unspecified, using default values
   400  200000                     	org	2097152
   401  200000  FF                 	db	255
   402                           
   403                           ;Config register IDLOC1 @ 0x200001
   404                           ;	unspecified, using default values
   405  200001                     	org	2097153
   406  200001  FF                 	db	255
   407                           
   408                           ;Config register IDLOC2 @ 0x200002
   409                           ;	unspecified, using default values
   410  200002                     	org	2097154
   411  200002  FF                 	db	255
   412                           
   413                           ;Config register IDLOC3 @ 0x200003
   414                           ;	unspecified, using default values
   415  200003                     	org	2097155
   416  200003  FF                 	db	255
   417                           
   418                           ;Config register IDLOC4 @ 0x200004
   419                           ;	unspecified, using default values
   420  200004                     	org	2097156
   421  200004  FF                 	db	255
   422                           
   423                           ;Config register IDLOC5 @ 0x200005
   424                           ;	unspecified, using default values
   425  200005                     	org	2097157
   426  200005  FF                 	db	255
   427                           
   428                           ;Config register IDLOC6 @ 0x200006
   429                           ;	unspecified, using default values
   430  200006                     	org	2097158
   431  200006  FF                 	db	255
   432                           
   433                           ;Config register IDLOC7 @ 0x200007
   434                           ;	unspecified, using default values
   435  200007                     	org	2097159
   436  200007  FF                 	db	255
   437                           
   438                           	psect	config
   439                           
   440                           ;Config register CONFIG1L @ 0x300000
   441                           ;	PLL Prescaler Selection bits
   442                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   443                           ;	System Clock Postscaler Selection bits
   444                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   445                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   446                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   447  300000                     	org	3145728
   448  300000  00                 	db	0
   449                           
   450                           ;Config register CONFIG1H @ 0x300001
   451                           ;	Oscillator Selection bits
   452                           ;	FOSC = HS, HS oscillator (HS)
   453                           ;	Fail-Safe Clock Monitor Enable bit
   454                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   455                           ;	Internal/External Oscillator Switchover bit
   456                           ;	IESO = ON, Oscillator Switchover mode enabled
   457  300001                     	org	3145729
   458  300001  8C                 	db	140
   459                           
   460                           ;Config register CONFIG2L @ 0x300002
   461                           ;	Power-up Timer Enable bit
   462                           ;	PWRT = ON, PWRT enabled
   463                           ;	Brown-out Reset Enable bits
   464                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   465                           ;	Brown-out Reset Voltage bits
   466                           ;	BORV = 3, Minimum setting 2.05V
   467                           ;	USB Voltage Regulator Enable bit
   468                           ;	VREGEN = OFF, USB voltage regulator disabled
   469  300002                     	org	3145730
   470  300002  18                 	db	24
   471                           
   472                           ;Config register CONFIG2H @ 0x300003
   473                           ;	Watchdog Timer Enable bit
   474                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   475                           ;	Watchdog Timer Postscale Select bits
   476                           ;	WDTPS = 32768, 1:32768
   477  300003                     	org	3145731
   478  300003  1E                 	db	30
   479                           
   480                           ; Padding undefined space
   481  300004                     	org	3145732
   482  300004  FF                 	db	255
   483                           
   484                           ;Config register CONFIG3H @ 0x300005
   485                           ;	CCP2 MUX bit
   486                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   487                           ;	PORTB A/D Enable bit
   488                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   489                           ;	Low-Power Timer 1 Oscillator Enable bit
   490                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   491                           ;	MCLR Pin Enable bit
   492                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   493  300005                     	org	3145733
   494  300005  81                 	db	129
   495                           
   496                           ;Config register CONFIG4L @ 0x300006
   497                           ;	Stack Full/Underflow Reset Enable bit
   498                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   499                           ;	Single-Supply ICSP Enable bit
   500                           ;	LVP = OFF, Single-Supply ICSP disabled
   501                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   502                           ;	ICPRT = OFF, ICPORT disabled
   503                           ;	Extended Instruction Set Enable bit
   504                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   505                           ;	Background Debugger Enable bit
   506                           ;	DEBUG = 0x1, unprogrammed default
   507  300006                     	org	3145734
   508  300006  80                 	db	128
   509                           
   510                           ; Padding undefined space
   511  300007                     	org	3145735
   512  300007  FF                 	db	255
   513                           
   514                           ;Config register CONFIG5L @ 0x300008
   515                           ;	Code Protection bit
   516                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   517                           ;	Code Protection bit
   518                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   519                           ;	Code Protection bit
   520                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   521                           ;	Code Protection bit
   522                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   523  300008                     	org	3145736
   524  300008  0F                 	db	15
   525                           
   526                           ;Config register CONFIG5H @ 0x300009
   527                           ;	Boot Block Code Protection bit
   528                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   529                           ;	Data EEPROM Code Protection bit
   530                           ;	CPD = OFF, Data EEPROM is not code-protected
   531  300009                     	org	3145737
   532  300009  C0                 	db	192
   533                           
   534                           ;Config register CONFIG6L @ 0x30000A
   535                           ;	Write Protection bit
   536                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   537                           ;	Write Protection bit
   538                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   539                           ;	Write Protection bit
   540                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   541                           ;	Write Protection bit
   542                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   543  30000A                     	org	3145738
   544  30000A  0F                 	db	15
   545                           
   546                           ;Config register CONFIG6H @ 0x30000B
   547                           ;	Configuration Register Write Protection bit
   548                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   549                           ;	Boot Block Write Protection bit
   550                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   551                           ;	Data EEPROM Write Protection bit
   552                           ;	WRTD = OFF, Data EEPROM is not write-protected
   553  30000B                     	org	3145739
   554  30000B  E0                 	db	224
   555                           
   556                           ;Config register CONFIG7L @ 0x30000C
   557                           ;	Table Read Protection bit
   558                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   559                           ;	Table Read Protection bit
   560                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   561                           ;	Table Read Protection bit
   562                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   563                           ;	Table Read Protection bit
   564                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   565  30000C                     	org	3145740
   566  30000C  0F                 	db	15
   567                           
   568                           ;Config register CONFIG7H @ 0x30000D
   569                           ;	Boot Block Table Read Protection bit
   570                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   571  30000D                     	org	3145741
   572  30000D  40                 	db	64
   573                           tosu	equ	0xFFF
   574                           tosh	equ	0xFFE
   575                           tosl	equ	0xFFD
   576                           stkptr	equ	0xFFC
   577                           pclatu	equ	0xFFB
   578                           pclath	equ	0xFFA
   579                           pcl	equ	0xFF9
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           prodh	equ	0xFF4
   585                           prodl	equ	0xFF3
   586                           indf0	equ	0xFEF
   587                           postinc0	equ	0xFEE
   588                           postdec0	equ	0xFED
   589                           preinc0	equ	0xFEC
   590                           plusw0	equ	0xFEB
   591                           fsr0h	equ	0xFEA
   592                           fsr0l	equ	0xFE9
   593                           wreg	equ	0xFE8
   594                           indf1	equ	0xFE7
   595                           postinc1	equ	0xFE6
   596                           postdec1	equ	0xFE5
   597                           preinc1	equ	0xFE4
   598                           plusw1	equ	0xFE3
   599                           fsr1h	equ	0xFE2
   600                           fsr1l	equ	0xFE1
   601                           bsr	equ	0xFE0
   602                           indf2	equ	0xFDF
   603                           postinc2	equ	0xFDE
   604                           postdec2	equ	0xFDD
   605                           preinc2	equ	0xFDC
   606                           plusw2	equ	0xFDB
   607                           fsr2h	equ	0xFDA
   608                           fsr2l	equ	0xFD9
   609                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_BAJA in COMRAM

    None.

Critical Paths under _INT_ALTA in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_BAJA in BANK0

    None.

Critical Paths under _INT_ALTA in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_BAJA in BANK1

    None.

Critical Paths under _INT_ALTA in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_BAJA in BANK2

    None.

Critical Paths under _INT_ALTA in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_BAJA in BANK3

    None.

Critical Paths under _INT_ALTA in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_BAJA in BANK4

    None.

Critical Paths under _INT_ALTA in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_BAJA in BANK5

    None.

Critical Paths under _INT_ALTA in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_BAJA in BANK6

    None.

Critical Paths under _INT_ALTA in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_BAJA in BANK7

    None.

Critical Paths under _INT_ALTA in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _INT_Init
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_BAJA                                             4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_ALTA                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init

 _INT_BAJA (ROOT)

 _INT_ALTA (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 12 02:10:35 2021

                      l9 00C8                       l10 00C8                       l27 00BA  
                     bsr 000FE0                      l721 00C2                      l715 00A2  
                    l723 00C4                      l725 00C6                      l717 00BC  
                    l719 00C0                      wreg 000FE8                     i1l39 0058  
                   i2l33 009E                     _main 00BC                     btemp 0006  
                   start 0068             ___param_bank 000000                    ?_main 0001  
       __end_of_INT_BAJA 0068         __end_of_INT_ALTA 00A2                    i1l733 0026  
                  i1l735 0034                    i1l737 0056                    i2l731 009C  
                  i2l727 006E                    i2l729 007C         __end_of_INT_Init 00BC  
                  ttemp5 0007                    ttemp6 000A                    ttemp7 000E  
                  status 000FD8                    wtemp8 0007          __initialization 00D0  
           __end_of_main 00D0                   ??_main 0006            __activetblptr 000000  
                 i1u3_20 0034                   i1u3_21 0030                   i1u4_20 0044  
                 i1u4_21 003E                   i1u4_26 0046                   i2u1_40 007C  
                 i2u1_41 0078                   i2u2_40 008C                   i2u2_41 0086  
                 i2u2_46 008E                   isa$std 000001               __accesstop 0060  
__end_of__initialization 00D0            ___rparam_used 000001                ?_INT_BAJA 0001  
              ?_INT_ALTA 0001                ?_INT_Init 0001           __pcstackCOMRAM 0001  
             ??_INT_BAJA 0002               ??_INT_ALTA 0001               ??_INT_Init 0006  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00D0  
                __ramtop 0800                  __ptext0 00BC                  __ptext1 00A2  
         __pintcode_body 006C     end_of_initialization 00D0                  int_func 006C  
              _TRISBbits 000F93                _TRISDbits 000F95        __size_of_INT_BAJA 0050  
      __size_of_INT_ALTA 009A        __size_of_INT_Init 001A      start_initialization 00D0  
              __pintcode 0008              __pintcodelo 0018                 _LATDbits 000F8C  
               _INT_BAJA 0018                 _INT_ALTA 0008                 _INT_Init 00A2  
               _RCONbits 000FD0              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0014  
               isa$xinst 000000                 int$flags 0006               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
