

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 02 00:13:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _RCREG	set	4014
    53  0000                     _TXREG	set	4013
    54  0000                     _RCSTAbits	set	4011
    55  0000                     _TXSTAbits	set	4012
    56  0000                     _BAUDCONbits	set	4024
    57  0000                     _SPBRG	set	4015
    58                           
    59                           	psect	smallconst
    60  000800                     __psmallconst:
    61                           	callstack 0
    62  000800  00                 	db	0
    63  000801                     STR_1:
    64  000801  43                 	db	67	;'C'
    65  000802  72                 	db	114	;'r'
    66  000803  69                 	db	105	;'i'
    67  000804  73                 	db	115	;'s'
    68  000805  74                 	db	116	;'t'
    69  000806  6F                 	db	111	;'o'
    70  000807  62                 	db	98	;'b'
    71  000808  61                 	db	97	;'a'
    72  000809  6C                 	db	108	;'l'
    73  00080A  00                 	db	0
    74  00080B  00                 	db	0	; dummy byte at the end
    75  0000                     
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  000890                     __pcinit:
    80                           	callstack 0
    81  000890                     start_initialization:
    82                           	callstack 0
    83  000890                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to COMRAM (1 bytes)
    87  000890  6A04               	clrf	__pbssCOMRAM& (0+255),c
    88  000892                     end_of_initialization:
    89                           	callstack 0
    90  000892                     __end_of__initialization:
    91                           	callstack 0
    92  000892  0E00               	movlw	low (__Lsmallconst shr (0+16))
    93  000894  6EF8               	movwf	tblptru,c
    94  000896  0E08               	movlw	high __Lsmallconst
    95  000898  6EF7               	movwf	tblptrh,c
    96  00089A  0100               	movlb	0
    97  00089C  EF21  F004         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bssCOMRAM
   100  000004                     __pbssCOMRAM:
   101                           	callstack 0
   102  000004                     _valor:
   103                           	callstack 0
   104  000004                     	ds	1
   105                           
   106                           	psect	cstackCOMRAM
   107  000001                     __pcstackCOMRAM:
   108                           	callstack 0
   109  000001                     EUSART_Init@baud:
   110                           	callstack 0
   111  000001                     EUSART_TX@dato:
   112                           	callstack 0
   113                           
   114                           ; 1 bytes @ 0x0
   115  000001                     	ds	1
   116  000002                     EUSART_Cadena@data:
   117                           	callstack 0
   118                           
   119                           ; 2 bytes @ 0x1
   120  000002                     	ds	2
   121  000004                     
   122                           ; 1 bytes @ 0x3
   123 ;;
   124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   125 ;;
   126 ;; *************** function _main *****************
   127 ;; Defined at:
   128 ;;		line 14 in file "main.c"
   129 ;; Parameters:    Size  Location     Type
   130 ;;		None
   131 ;; Auto vars:     Size  Location     Type
   132 ;;		None
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   142 ;;      Params:         0       0       0       0       0       0       0       0       0
   143 ;;      Locals:         0       0       0       0       0       0       0       0       0
   144 ;;      Temps:          0       0       0       0       0       0       0       0       0
   145 ;;      Totals:         0       0       0       0       0       0       0       0       0
   146 ;;Total ram usage:        0 bytes
   147 ;; Hardware stack levels required when called: 2
   148 ;; This function calls:
   149 ;;		_EUSART_Cadena
   150 ;;		_EUSART_Init
   151 ;;		_EUSART_TX
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  000842                     __ptext0:
   159                           	callstack 0
   160  000842                     _main:
   161                           	callstack 29
   162  000842                     
   163                           ;main.c: 15:     EUSART_Init(31);
   164  000842  0E1F               	movlw	31
   165  000844  EC31  F004         	call	_EUSART_Init
   166                           
   167                           ;main.c: 16:     EUSART_TX('C');
   168  000848  0E43               	movlw	67
   169  00084A  EC3D  F004         	call	_EUSART_TX
   170  00084E                     
   171                           ;main.c: 17:     EUSART_Cadena("Cristobal");
   172  00084E  0E01               	movlw	low STR_1
   173  000850  6E02               	movwf	EUSART_Cadena@data^0,c
   174  000852  0E08               	movlw	high STR_1
   175  000854  6E03               	movwf	(EUSART_Cadena@data+1)^0,c
   176  000856  EC06  F004         	call	_EUSART_Cadena	;wreg free
   177  00085A                     l13:
   178  00085A  EF2D  F004         	goto	l13
   179  00085E  EF00  F000         	goto	start
   180  000862                     __end_of_main:
   181                           	callstack 0
   182                           
   183 ;; *************** function _EUSART_Init *****************
   184 ;; Defined at:
   185 ;;		line 3 in file "EUSART_libreria.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;  baud            1    wreg     unsigned char 
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  baud            1    0[COMRAM] unsigned char 
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg
   194 ;; Tracked objects:
   195 ;;		On entry : 0/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   199 ;;      Params:         0       0       0       0       0       0       0       0       0
   200 ;;      Locals:         1       0       0       0       0       0       0       0       0
   201 ;;      Temps:          0       0       0       0       0       0       0       0       0
   202 ;;      Totals:         1       0       0       0       0       0       0       0       0
   203 ;;Total ram usage:        1 bytes
   204 ;; Hardware stack levels used: 1
   205 ;; This function calls:
   206 ;;		Nothing
   207 ;; This function is called by:
   208 ;;		_main
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text1
   213  000862                     __ptext1:
   214                           	callstack 0
   215  000862                     _EUSART_Init:
   216                           	callstack 30
   217                           
   218                           ;incstack = 0
   219                           ;EUSART_Init@baud stored from wreg
   220  000862  6E01               	movwf	EUSART_Init@baud^0,c
   221  000864                     
   222                           ;EUSART_libreria.c: 4:     SPBRG = baud;
   223  000864  C001  FFAF         	movff	EUSART_Init@baud,4015	;volatile
   224  000868                     
   225                           ;EUSART_libreria.c: 5:     BAUDCONbits.BRG16 = 0;
   226  000868  96B8               	bcf	184,3,c	;volatile
   227  00086A                     
   228                           ;EUSART_libreria.c: 6:     TXSTAbits.BRGH = 0;
   229  00086A  94AC               	bcf	172,2,c	;volatile
   230  00086C                     
   231                           ;EUSART_libreria.c: 7:     TXSTAbits.SYNC = 0;
   232  00086C  98AC               	bcf	172,4,c	;volatile
   233  00086E                     
   234                           ;EUSART_libreria.c: 8:     RCSTAbits.SPEN = 1;
   235  00086E  8EAB               	bsf	171,7,c	;volatile
   236  000870                     
   237                           ;EUSART_libreria.c: 10:     TXSTAbits.TXEN = 1;
   238  000870  8AAC               	bsf	172,5,c	;volatile
   239  000872                     
   240                           ;EUSART_libreria.c: 11:     TXSTAbits.TX9 = 0;
   241  000872  9CAC               	bcf	172,6,c	;volatile
   242  000874                     
   243                           ;EUSART_libreria.c: 13:     RCSTAbits.CREN = 1;
   244  000874  88AB               	bsf	171,4,c	;volatile
   245  000876                     
   246                           ;EUSART_libreria.c: 14:     RCSTAbits.RX9 = 0;
   247  000876  9CAB               	bcf	171,6,c	;volatile
   248  000878  0012               	return		;funcret
   249  00087A                     __end_of_EUSART_Init:
   250                           	callstack 0
   251                           
   252 ;; *************** function _EUSART_Cadena *****************
   253 ;; Defined at:
   254 ;;		line 24 in file "EUSART_libreria.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;  data            2    1[COMRAM] PTR unsigned char 
   257 ;;		 -> STR_1(10), 
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         2       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0
   272 ;;      Totals:         2       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        2 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; Hardware stack levels required when called: 1
   276 ;; This function calls:
   277 ;;		_EUSART_TX
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text2
   284  00080C                     __ptext2:
   285                           	callstack 0
   286  00080C                     _EUSART_Cadena:
   287                           	callstack 29
   288  00080C                     
   289                           ;EUSART_libreria.c: 25:     while(*data != '\0'){
   290  00080C  EF12  F004         	goto	l766
   291  000810                     l762:
   292                           
   293                           ;EUSART_libreria.c: 26:         EUSART_TX(*data);
   294  000810  C002  FFF6         	movff	EUSART_Cadena@data,tblptrl
   295  000814  C003  FFF7         	movff	EUSART_Cadena@data+1,tblptrh
   296  000818                     	if	0	;tblptru may be non-zero
   297  000818                     	endif
   298  000818                     	if	0	;tblptru may be non-zero
   299  000818                     	endif
   300  000818  0008               	tblrd		*
   301  00081A  50F5               	movf	tablat,w,c
   302  00081C  EC3D  F004         	call	_EUSART_TX
   303  000820                     
   304                           ;EUSART_libreria.c: 27:         data++;
   305  000820  4A02               	infsnz	EUSART_Cadena@data^0,f,c
   306  000822  2A03               	incf	(EUSART_Cadena@data+1)^0,f,c
   307  000824                     l766:
   308                           
   309                           ;EUSART_libreria.c: 25:     while(*data != '\0'){
   310  000824  C002  FFF6         	movff	EUSART_Cadena@data,tblptrl
   311  000828  C003  FFF7         	movff	EUSART_Cadena@data+1,tblptrh
   312  00082C                     	if	0	;tblptru may be non-zero
   313  00082C                     	endif
   314  00082C                     	if	0	;tblptru may be non-zero
   315  00082C                     	endif
   316  00082C  0008               	tblrd		*
   317  00082E  50F5               	movf	tablat,w,c
   318  000830  0900               	iorlw	0
   319  000832  A4D8               	btfss	status,2,c
   320  000834  EF1E  F004         	goto	u31
   321  000838  EF20  F004         	goto	u30
   322  00083C                     u31:
   323  00083C  EF08  F004         	goto	l762
   324  000840                     u30:
   325  000840  0012               	return		;funcret
   326  000842                     __end_of_EUSART_Cadena:
   327                           	callstack 0
   328                           
   329 ;; *************** function _EUSART_TX *****************
   330 ;; Defined at:
   331 ;;		line 17 in file "EUSART_libreria.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;  dato            1    wreg     unsigned char 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  dato            1    0[COMRAM] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         0       0       0       0       0       0       0       0       0
   346 ;;      Locals:         1       0       0       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0
   348 ;;      Totals:         1       0       0       0       0       0       0       0       0
   349 ;;Total ram usage:        1 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		_main
   355 ;;		_EUSART_Cadena
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text3
   360  00087A                     __ptext3:
   361                           	callstack 0
   362  00087A                     _EUSART_TX:
   363                           	callstack 30
   364                           
   365                           ;incstack = 0
   366                           ;EUSART_TX@dato stored from wreg
   367  00087A  6E01               	movwf	EUSART_TX@dato^0,c
   368  00087C                     l34:
   369  00087C  A2AC               	btfss	172,1,c	;volatile
   370  00087E  EF43  F004         	goto	u11
   371  000882  EF45  F004         	goto	u10
   372  000886                     u11:
   373  000886  EF3E  F004         	goto	l34
   374  00088A                     u10:
   375  00088A                     
   376                           ;EUSART_libreria.c: 19:     TXREG = dato;
   377  00088A  C001  FFAD         	movff	EUSART_TX@dato,4013	;volatile
   378  00088E  0012               	return		;funcret
   379  000890                     __end_of_EUSART_TX:
   380                           	callstack 0
   381                           
   382                           	psect	rparam
   383  0000                     
   384                           	psect	idloc
   385                           
   386                           ;Config register IDLOC0 @ 0x200000
   387                           ;	unspecified, using default values
   388  200000                     	org	2097152
   389  200000  FF                 	db	255
   390                           
   391                           ;Config register IDLOC1 @ 0x200001
   392                           ;	unspecified, using default values
   393  200001                     	org	2097153
   394  200001  FF                 	db	255
   395                           
   396                           ;Config register IDLOC2 @ 0x200002
   397                           ;	unspecified, using default values
   398  200002                     	org	2097154
   399  200002  FF                 	db	255
   400                           
   401                           ;Config register IDLOC3 @ 0x200003
   402                           ;	unspecified, using default values
   403  200003                     	org	2097155
   404  200003  FF                 	db	255
   405                           
   406                           ;Config register IDLOC4 @ 0x200004
   407                           ;	unspecified, using default values
   408  200004                     	org	2097156
   409  200004  FF                 	db	255
   410                           
   411                           ;Config register IDLOC5 @ 0x200005
   412                           ;	unspecified, using default values
   413  200005                     	org	2097157
   414  200005  FF                 	db	255
   415                           
   416                           ;Config register IDLOC6 @ 0x200006
   417                           ;	unspecified, using default values
   418  200006                     	org	2097158
   419  200006  FF                 	db	255
   420                           
   421                           ;Config register IDLOC7 @ 0x200007
   422                           ;	unspecified, using default values
   423  200007                     	org	2097159
   424  200007  FF                 	db	255
   425                           
   426                           	psect	config
   427                           
   428                           ;Config register CONFIG1L @ 0x300000
   429                           ;	PLL Prescaler Selection bits
   430                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   431                           ;	System Clock Postscaler Selection bits
   432                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   433                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   434                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   435  300000                     	org	3145728
   436  300000  00                 	db	0
   437                           
   438                           ;Config register CONFIG1H @ 0x300001
   439                           ;	Oscillator Selection bits
   440                           ;	FOSC = HS, HS oscillator (HS)
   441                           ;	Fail-Safe Clock Monitor Enable bit
   442                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   443                           ;	Internal/External Oscillator Switchover bit
   444                           ;	IESO = ON, Oscillator Switchover mode enabled
   445  300001                     	org	3145729
   446  300001  8C                 	db	140
   447                           
   448                           ;Config register CONFIG2L @ 0x300002
   449                           ;	Power-up Timer Enable bit
   450                           ;	PWRT = ON, PWRT enabled
   451                           ;	Brown-out Reset Enable bits
   452                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   453                           ;	Brown-out Reset Voltage bits
   454                           ;	BORV = 3, Minimum setting 2.05V
   455                           ;	USB Voltage Regulator Enable bit
   456                           ;	VREGEN = OFF, USB voltage regulator disabled
   457  300002                     	org	3145730
   458  300002  18                 	db	24
   459                           
   460                           ;Config register CONFIG2H @ 0x300003
   461                           ;	Watchdog Timer Enable bit
   462                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   463                           ;	Watchdog Timer Postscale Select bits
   464                           ;	WDTPS = 32768, 1:32768
   465  300003                     	org	3145731
   466  300003  1E                 	db	30
   467                           
   468                           ; Padding undefined space
   469  300004                     	org	3145732
   470  300004  FF                 	db	255
   471                           
   472                           ;Config register CONFIG3H @ 0x300005
   473                           ;	CCP2 MUX bit
   474                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   475                           ;	PORTB A/D Enable bit
   476                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   477                           ;	Low-Power Timer 1 Oscillator Enable bit
   478                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   479                           ;	MCLR Pin Enable bit
   480                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   481  300005                     	org	3145733
   482  300005  81                 	db	129
   483                           
   484                           ;Config register CONFIG4L @ 0x300006
   485                           ;	Stack Full/Underflow Reset Enable bit
   486                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   487                           ;	Single-Supply ICSP Enable bit
   488                           ;	LVP = OFF, Single-Supply ICSP disabled
   489                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   490                           ;	ICPRT = OFF, ICPORT disabled
   491                           ;	Extended Instruction Set Enable bit
   492                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   493                           ;	Background Debugger Enable bit
   494                           ;	DEBUG = 0x1, unprogrammed default
   495  300006                     	org	3145734
   496  300006  80                 	db	128
   497                           
   498                           ; Padding undefined space
   499  300007                     	org	3145735
   500  300007  FF                 	db	255
   501                           
   502                           ;Config register CONFIG5L @ 0x300008
   503                           ;	Code Protection bit
   504                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   505                           ;	Code Protection bit
   506                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   507                           ;	Code Protection bit
   508                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   509                           ;	Code Protection bit
   510                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   511  300008                     	org	3145736
   512  300008  0F                 	db	15
   513                           
   514                           ;Config register CONFIG5H @ 0x300009
   515                           ;	Boot Block Code Protection bit
   516                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   517                           ;	Data EEPROM Code Protection bit
   518                           ;	CPD = OFF, Data EEPROM is not code-protected
   519  300009                     	org	3145737
   520  300009  C0                 	db	192
   521                           
   522                           ;Config register CONFIG6L @ 0x30000A
   523                           ;	Write Protection bit
   524                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   525                           ;	Write Protection bit
   526                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   527                           ;	Write Protection bit
   528                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   529                           ;	Write Protection bit
   530                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   531  30000A                     	org	3145738
   532  30000A  0F                 	db	15
   533                           
   534                           ;Config register CONFIG6H @ 0x30000B
   535                           ;	Configuration Register Write Protection bit
   536                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   537                           ;	Boot Block Write Protection bit
   538                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   539                           ;	Data EEPROM Write Protection bit
   540                           ;	WRTD = OFF, Data EEPROM is not write-protected
   541  30000B                     	org	3145739
   542  30000B  E0                 	db	224
   543                           
   544                           ;Config register CONFIG7L @ 0x30000C
   545                           ;	Table Read Protection bit
   546                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   547                           ;	Table Read Protection bit
   548                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   549                           ;	Table Read Protection bit
   550                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   551                           ;	Table Read Protection bit
   552                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   553  30000C                     	org	3145740
   554  30000C  0F                 	db	15
   555                           
   556                           ;Config register CONFIG7H @ 0x30000D
   557                           ;	Boot Block Table Read Protection bit
   558                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   559  30000D                     	org	3145741
   560  30000D  40                 	db	64
   561                           tosu	equ	0xFFF
   562                           tosh	equ	0xFFE
   563                           tosl	equ	0xFFD
   564                           stkptr	equ	0xFFC
   565                           pclatu	equ	0xFFB
   566                           pclath	equ	0xFFA
   567                           pcl	equ	0xFF9
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           tblptrl	equ	0xFF6
   571                           tablat	equ	0xFF5
   572                           prodh	equ	0xFF4
   573                           prodl	equ	0xFF3
   574                           indf0	equ	0xFEF
   575                           postinc0	equ	0xFEE
   576                           postdec0	equ	0xFED
   577                           preinc0	equ	0xFEC
   578                           plusw0	equ	0xFEB
   579                           fsr0h	equ	0xFEA
   580                           fsr0l	equ	0xFE9
   581                           wreg	equ	0xFE8
   582                           indf1	equ	0xFE7
   583                           postinc1	equ	0xFE6
   584                           postdec1	equ	0xFE5
   585                           preinc1	equ	0xFE4
   586                           plusw1	equ	0xFE3
   587                           fsr1h	equ	0xFE2
   588                           fsr1l	equ	0xFE1
   589                           bsr	equ	0xFE0
   590                           indf2	equ	0xFDF
   591                           postinc2	equ	0xFDE
   592                           postdec2	equ	0xFDD
   593                           preinc2	equ	0xFDC
   594                           plusw2	equ	0xFDB
   595                           fsr2h	equ	0xFDA
   596                           fsr2l	equ	0xFD9
   597                           status	equ	0xFD8

Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_Cadena@data	PTR unsigned char  size(2) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_EUSART_Cadena
    _EUSART_Cadena->_EUSART_TX

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     166
                      _EUSART_Cadena
                        _EUSART_Init
                          _EUSART_TX
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Cadena                                        2     0      2     136
                                              1 COMRAM     2     0      2
                          _EUSART_TX
 ---------------------------------------------------------------------------------
 (1) _EUSART_TX                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Cadena
     _EUSART_TX
   _EUSART_Init
   _EUSART_TX

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      3       4       1        4.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 02 00:13:37 2021

                     l13 085A                       l14 085A                       l31 0878  
                     l34 087C                       l37 088E                       l46 0840  
                     u10 088A                       u11 0886                       u30 0840  
                     u31 083C                      l722 087C                      l730 086A  
                    l724 088A                      l740 0874                      l732 086C  
                    l742 0876                      l734 086E                      l726 0864  
                    l760 080C                      l736 0870                      l728 0868  
                    l762 0810                      l738 0872                      l770 084E  
                    l764 0820                      l766 0824                      l768 0842  
           ?_EUSART_Init 0001                     STR_1 0801                     _main 0842  
                   start 0000       __size_of_EUSART_TX 0016             ___param_bank 000000  
          _EUSART_Cadena 080C                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _TXREG 000FAD                    _valor 0004  
                  tablat 000FF5                    status 000FD8          __initialization 0890  
           __end_of_main 0862           ?_EUSART_Cadena 0002                   ??_main 0004  
          __activetblptr 000001        __end_of_EUSART_TX 0890                   isa$std 000001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8     __size_of_EUSART_Init 0018               __accesstop 0060  
__end_of__initialization 0892            ___rparam_used 000001           __pcstackCOMRAM 0001  
        ??_EUSART_Cadena 0004                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0890                  __ramtop 0800  
                __ptext0 0842                  __ptext1 0862                  __ptext2 080C  
                __ptext3 087A            EUSART_TX@dato 0001                _EUSART_TX 087A  
   end_of_initialization 0892                _RCSTAbits 000FAB               ?_EUSART_TX 0001  
              _TXSTAbits 000FAC              _BAUDCONbits 000FB8      start_initialization 0890  
          ??_EUSART_Init 0001    __end_of_EUSART_Cadena 0842              __pbssCOMRAM 0004  
            ??_EUSART_TX 0001      __end_of_EUSART_Init 087A              __smallconst 0800  
            _EUSART_Init 0862                 __Hrparam 0000          EUSART_Init@baud 0001  
               __Lrparam 0000             __Lsmallconst 0800            __size_of_main 0020  
               isa$xinst 000000        EUSART_Cadena@data 0002   __size_of_EUSART_Cadena 0036  
