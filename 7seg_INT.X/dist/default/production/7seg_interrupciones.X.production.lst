

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 12 22:25:09 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  000192                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _display
    61  000192  3F                 	db	63
    62  000193  06                 	db	6
    63  000194  5B                 	db	91
    64  000195  4F                 	db	79
    65  000196  66                 	db	102
    66  000197  6D                 	db	109
    67  000198  7D                 	db	125
    68  000199  07                 	db	7
    69  00019A  7F                 	db	127
    70  00019B  67                 	db	103
    71  0000                     _LATD	set	3980
    72  0000                     _LATAbits	set	3977
    73  0000                     _TRISAbits	set	3986
    74  0000                     _TRISD	set	3989
    75  0000                     _RCONbits	set	4048
    76  0000                     _INTCON2bits	set	4081
    77  0000                     _INTCON3bits	set	4080
    78  0000                     _INTCONbits	set	4082
    79  0000                     _TRISBbits	set	3987
    80                           
    81                           ; #config settings
    82                           
    83                           	psect	cinit
    84  000124                     __pcinit:
    85                           	callstack 0
    86  000124                     start_initialization:
    87                           	callstack 0
    88  000124                     __initialization:
    89                           	callstack 0
    90                           
    91                           ; Initialize objects allocated to COMRAM (10 bytes)
    92                           ; load TBLPTR registers with __pidataCOMRAM
    93  000124  0E92               	movlw	low __pidataCOMRAM
    94  000126  6EF6               	movwf	tblptrl,c
    95  000128  0E01               	movlw	high __pidataCOMRAM
    96  00012A  6EF7               	movwf	tblptrh,c
    97  00012C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    98  00012E  6EF8               	movwf	tblptru,c
    99  000130  EE00  F001         	lfsr	0,__pdataCOMRAM
   100  000134  EE10 F00A          	lfsr	1,10
   101  000138                     copy_data0:
   102  000138  0009               	tblrd		*+
   103  00013A  CFF5 FFEE          	movff	tablat,postinc0
   104  00013E  50E5               	movf	postdec1,w,c
   105  000140  50E1               	movf	fsr1l,w,c
   106  000142  E1FA               	bnz	copy_data0
   107                           
   108                           ; Clear objects allocated to COMRAM (6 bytes)
   109  000144  6A10               	clrf	(__pbssCOMRAM+5)& (0+255),c
   110  000146  6A0F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   111  000148  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   112  00014A  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   113  00014C  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  00014E  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   115  000150                     end_of_initialization:
   116                           	callstack 0
   117  000150                     __end_of__initialization:
   118                           	callstack 0
   119  000150  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000152  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000154  0100               	movlb	0
   122  000156  EF29  F000         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  00000B                     __pbssCOMRAM:
   126                           	callstack 0
   127  00000B                     _j:
   128                           	callstack 0
   129  00000B                     	ds	2
   130  00000D                     _i:
   131                           	callstack 0
   132  00000D                     	ds	2
   133  00000F                     _x:
   134                           	callstack 0
   135  00000F                     	ds	2
   136                           
   137                           	psect	dataCOMRAM
   138  000001                     __pdataCOMRAM:
   139                           	callstack 0
   140  000001                     _display:
   141                           	callstack 0
   142  000001                     	ds	10
   143                           
   144                           	psect	cstackCOMRAM
   145  000011                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000011                     ??_INT_BAJA:
   148  000011                     
   149                           ; 1 bytes @ 0x0
   150  000011                     	ds	3
   151  000014                     ??_main:
   152                           
   153                           ; 1 bytes @ 0x3
   154  000014                     	ds	2
   155                           
   156 ;;
   157 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   158 ;;
   159 ;; *************** function _main *****************
   160 ;; Defined at:
   161 ;;		line 18 in file "main.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;		None
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   175 ;;      Params:         0       0       0       0       0       0       0       0       0
   176 ;;      Locals:         0       0       0       0       0       0       0       0       0
   177 ;;      Temps:          2       0       0       0       0       0       0       0       0
   178 ;;      Totals:         2       0       0       0       0       0       0       0       0
   179 ;;Total ram usage:        2 bytes
   180 ;; Hardware stack levels required when called: 3
   181 ;; This function calls:
   182 ;;		_INT_Init
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  000052                     __ptext0:
   190                           	callstack 0
   191  000052                     _main:
   192                           	callstack 28
   193  000052                     
   194                           ;main.c: 19:     INT_Init();
   195  000052  ECBC  F000         	call	_INT_Init	;wreg free
   196  000056                     
   197                           ;main.c: 20:     TRISD = 0x00;
   198  000056  0E00               	movlw	0
   199  000058  6E95               	movwf	149,c	;volatile
   200  00005A                     
   201                           ;main.c: 21:     TRISAbits.RA0 = 0;
   202  00005A  9092               	bcf	146,0,c	;volatile
   203  00005C                     
   204                           ;main.c: 22:     TRISAbits.RA1 = 0;
   205  00005C  9292               	bcf	146,1,c	;volatile
   206  00005E                     l759:
   207                           
   208                           ;main.c: 24:         if(x == 1){
   209  00005E  040F               	decf	_x^0,w,c
   210  000060  1010               	iorwf	(_x+1)^0,w,c
   211  000062  A4D8               	btfss	status,2,c
   212  000064  EF36  F000         	goto	u31
   213  000068  EF38  F000         	goto	u30
   214  00006C                     u31:
   215  00006C  EF61  F000         	goto	l777
   216  000070                     u30:
   217  000070                     
   218                           ;main.c: 25:             for(i = 0; i < 10; i++){
   219  000070  0E00               	movlw	0
   220  000072  6E0E               	movwf	(_i+1)^0,c
   221  000074  0E00               	movlw	0
   222  000076  6E0D               	movwf	_i^0,c
   223  000078                     l54:
   224                           
   225                           ;main.c: 26:                 LATAbits.LA0 = 1;
   226  000078  8089               	bsf	137,0,c	;volatile
   227  00007A                     
   228                           ;main.c: 27:                 LATD = display[i];
   229  00007A  0E01               	movlw	low _display
   230  00007C  240D               	addwf	_i^0,w,c
   231  00007E  6ED9               	movwf	fsr2l,c
   232  000080  0E00               	movlw	high _display
   233  000082  200E               	addwfc	(_i+1)^0,w,c
   234  000084  6EDA               	movwf	fsr2h,c
   235  000086  50DF               	movf	indf2,w,c
   236  000088  6E8C               	movwf	140,c	;volatile
   237  00008A                     
   238                           ;main.c: 28:                 _delay((unsigned long)((100)*(20000000UL/4000.0)));
   239  00008A  0E03               	movlw	3
   240  00008C  6E15               	movwf	(??_main+1)^0,c
   241  00008E  0E8A               	movlw	138
   242  000090  6E14               	movwf	??_main^0,c
   243  000092  0E56               	movlw	86
   244  000094                     u77:
   245  000094  2EE8               	decfsz	wreg,f,c
   246  000096  D7FE               	bra	u77
   247  000098  2E14               	decfsz	??_main^0,f,c
   248  00009A  D7FC               	bra	u77
   249  00009C  2E15               	decfsz	(??_main+1)^0,f,c
   250  00009E  D7FA               	bra	u77
   251  0000A0                     
   252                           ;main.c: 29:                 LATAbits.LA0 = 0;
   253  0000A0  9089               	bcf	137,0,c	;volatile
   254  0000A2                     
   255                           ;main.c: 30:             }
   256  0000A2  4A0D               	infsnz	_i^0,f,c
   257  0000A4  2A0E               	incf	(_i+1)^0,f,c
   258  0000A6  BE0E               	btfsc	(_i+1)^0,7,c
   259  0000A8  EF5F  F000         	goto	u41
   260  0000AC  500E               	movf	(_i+1)^0,w,c
   261  0000AE  E109               	bnz	u40
   262  0000B0  0E0A               	movlw	10
   263  0000B2  5C0D               	subwf	_i^0,w,c
   264  0000B4  A0D8               	btfss	status,0,c
   265  0000B6  EF5F  F000         	goto	u41
   266  0000BA  EF61  F000         	goto	u40
   267  0000BE                     u41:
   268  0000BE  EF3C  F000         	goto	l54
   269  0000C2                     u40:
   270  0000C2                     l777:
   271                           
   272                           ;main.c: 32:         if(x == 2){
   273  0000C2  0E02               	movlw	2
   274  0000C4  180F               	xorwf	_x^0,w,c
   275  0000C6  1010               	iorwf	(_x+1)^0,w,c
   276  0000C8  A4D8               	btfss	status,2,c
   277  0000CA  EF69  F000         	goto	u51
   278  0000CE  EF6B  F000         	goto	u50
   279  0000D2                     u51:
   280  0000D2  EF2F  F000         	goto	l759
   281  0000D6                     u50:
   282  0000D6                     
   283                           ;main.c: 33:             for(j = 9; j >= 0; j--){
   284  0000D6  0E00               	movlw	0
   285  0000D8  6E0C               	movwf	(_j+1)^0,c
   286  0000DA  0E09               	movlw	9
   287  0000DC  6E0B               	movwf	_j^0,c
   288  0000DE                     l57:
   289                           
   290                           ;main.c: 34:                 LATAbits.LA1 = 1;
   291  0000DE  8289               	bsf	137,1,c	;volatile
   292  0000E0                     
   293                           ;main.c: 35:                 LATD = display[j];
   294  0000E0  0E01               	movlw	low _display
   295  0000E2  240B               	addwf	_j^0,w,c
   296  0000E4  6ED9               	movwf	fsr2l,c
   297  0000E6  0E00               	movlw	high _display
   298  0000E8  200C               	addwfc	(_j+1)^0,w,c
   299  0000EA  6EDA               	movwf	fsr2h,c
   300  0000EC  50DF               	movf	indf2,w,c
   301  0000EE  6E8C               	movwf	140,c	;volatile
   302  0000F0                     
   303                           ;main.c: 36:                 _delay((unsigned long)((100)*(20000000UL/4000.0)));
   304  0000F0  0E03               	movlw	3
   305  0000F2  6E15               	movwf	(??_main+1)^0,c
   306  0000F4  0E8A               	movlw	138
   307  0000F6  6E14               	movwf	??_main^0,c
   308  0000F8  0E56               	movlw	86
   309  0000FA                     u87:
   310  0000FA  2EE8               	decfsz	wreg,f,c
   311  0000FC  D7FE               	bra	u87
   312  0000FE  2E14               	decfsz	??_main^0,f,c
   313  000100  D7FC               	bra	u87
   314  000102  2E15               	decfsz	(??_main+1)^0,f,c
   315  000104  D7FA               	bra	u87
   316  000106                     
   317                           ;main.c: 37:                 LATAbits.LA1 = 0;
   318  000106  9289               	bcf	137,1,c	;volatile
   319  000108                     
   320                           ;main.c: 38:             }
   321  000108  060B               	decf	_j^0,f,c
   322  00010A  A0D8               	btfss	status,0,c
   323  00010C  060C               	decf	(_j+1)^0,f,c
   324  00010E  BE0C               	btfsc	(_j+1)^0,7,c
   325  000110  EF8E  F000         	goto	u60
   326  000114  EF8C  F000         	goto	u61
   327  000118                     u61:
   328  000118  EF6F  F000         	goto	l57
   329  00011C                     u60:
   330  00011C  EF2F  F000         	goto	l759
   331  000120  EF27  F000         	goto	start
   332  000124                     __end_of_main:
   333                           	callstack 0
   334                           
   335 ;; *************** function _INT_Init *****************
   336 ;; Defined at:
   337 ;;		line 12 in file "interrupcion_libreria.c"
   338 ;; Parameters:    Size  Location     Type
   339 ;;		None
   340 ;; Auto vars:     Size  Location     Type
   341 ;;		None
   342 ;; Return value:  Size  Location     Type
   343 ;;                  1    wreg      void 
   344 ;; Registers used:
   345 ;;		None
   346 ;; Tracked objects:
   347 ;;		On entry : 0/0
   348 ;;		On exit  : 0/0
   349 ;;		Unchanged: 0/0
   350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   351 ;;      Params:         0       0       0       0       0       0       0       0       0
   352 ;;      Locals:         0       0       0       0       0       0       0       0       0
   353 ;;      Temps:          0       0       0       0       0       0       0       0       0
   354 ;;      Totals:         0       0       0       0       0       0       0       0       0
   355 ;;Total ram usage:        0 bytes
   356 ;; Hardware stack levels used: 1
   357 ;; Hardware stack levels required when called: 2
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text1
   366  000178                     __ptext1:
   367                           	callstack 0
   368  000178                     _INT_Init:
   369                           	callstack 28
   370  000178                     
   371                           ;interrupcion_libreria.c: 13:     TRISBbits.RB0 = 1;
   372  000178  8093               	bsf	147,0,c	;volatile
   373                           
   374                           ;interrupcion_libreria.c: 14:     TRISBbits.RB1 = 1;
   375  00017A  8293               	bsf	147,1,c	;volatile
   376                           
   377                           ;interrupcion_libreria.c: 16:     INTCONbits.INT0E = 1;
   378  00017C  88F2               	bsf	242,4,c	;volatile
   379                           
   380                           ;interrupcion_libreria.c: 17:     INTCON3bits.INT1E = 1;
   381  00017E  86F0               	bsf	240,3,c	;volatile
   382                           
   383                           ;interrupcion_libreria.c: 19:     INTCONbits.INT0IF = 0;
   384  000180  92F2               	bcf	242,1,c	;volatile
   385                           
   386                           ;interrupcion_libreria.c: 20:     INTCON3bits.INT1IF = 0;
   387  000182  90F0               	bcf	240,0,c	;volatile
   388                           
   389                           ;interrupcion_libreria.c: 22:     INTCON3bits.INT1IP = 0;
   390  000184  9CF0               	bcf	240,6,c	;volatile
   391                           
   392                           ;interrupcion_libreria.c: 24:     INTCON2bits.INTEDG0 = 0;
   393  000186  9CF1               	bcf	241,6,c	;volatile
   394                           
   395                           ;interrupcion_libreria.c: 25:     INTCON2bits.INTEDG1 = 0;
   396  000188  9AF1               	bcf	241,5,c	;volatile
   397                           
   398                           ;interrupcion_libreria.c: 27:     RCONbits.IPEN = 1;
   399  00018A  8ED0               	bsf	208,7,c	;volatile
   400                           
   401                           ;interrupcion_libreria.c: 28:     INTCONbits.GIEH = 1;
   402  00018C  8EF2               	bsf	242,7,c	;volatile
   403                           
   404                           ;interrupcion_libreria.c: 29:     INTCONbits.GIEL = 1;
   405  00018E  8CF2               	bsf	242,6,c	;volatile
   406  000190  0012               	return		;funcret
   407  000192                     __end_of_INT_Init:
   408                           	callstack 0
   409                           
   410 ;; *************** function _INT_BAJA *****************
   411 ;; Defined at:
   412 ;;		line 38 in file "interrupcion_libreria.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   426 ;;      Params:         0       0       0       0       0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0       0       0       0       0
   428 ;;      Temps:          3       0       0       0       0       0       0       0       0
   429 ;;      Totals:         3       0       0       0       0       0       0       0       0
   430 ;;Total ram usage:        3 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		Interrupt level 1
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           	psect	intcodelo
   441  000018                     __pintcodelo:
   442                           	callstack 0
   443  000018                     _INT_BAJA:
   444                           	callstack 28
   445                           
   446                           ;incstack = 0
   447  000018  8016               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   448  00001A  CFD8 F011          	movff	status,??_INT_BAJA
   449  00001E  CFE8 F012          	movff	wreg,??_INT_BAJA+1
   450  000022  CFE0 F013          	movff	bsr,??_INT_BAJA+2
   451  000026                     
   452                           ;interrupcion_libreria.c: 39:     if(INTCON3bits.INT1IF == 1){
   453  000026  A0F0               	btfss	240,0,c	;volatile
   454  000028  EF18  F000         	goto	i1u2_21
   455  00002C  EF1A  F000         	goto	i1u2_20
   456  000030                     i1u2_21:
   457  000030  EF1F  F000         	goto	i1l27
   458  000034                     i1u2_20:
   459  000034                     
   460                           ;interrupcion_libreria.c: 40:         x = 2;
   461  000034  0E00               	movlw	0
   462  000036  6E10               	movwf	(_x+1)^0,c
   463  000038  0E02               	movlw	2
   464  00003A  6E0F               	movwf	_x^0,c
   465  00003C                     
   466                           ;interrupcion_libreria.c: 41:         INTCON3bits.INT1IF = 0;
   467  00003C  90F0               	bcf	240,0,c	;volatile
   468  00003E                     i1l27:
   469  00003E  C013  FFE0         	movff	??_INT_BAJA+2,bsr
   470  000042  C012  FFE8         	movff	??_INT_BAJA+1,wreg
   471  000046  C011  FFD8         	movff	??_INT_BAJA,status
   472  00004A  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   473  00004C  0010               	retfie	
   474  00004E                     __end_of_INT_BAJA:
   475                           	callstack 0
   476                           
   477 ;; *************** function _INT_ALTA *****************
   478 ;; Defined at:
   479 ;;		line 32 in file "interrupcion_libreria.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   493 ;;      Params:         0       0       0       0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; This function calls:
   500 ;;		Nothing
   501 ;; This function is called by:
   502 ;;		Interrupt level 2
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	intcode
   507  000008                     __pintcode:
   508                           	callstack 0
   509  000008                     _INT_ALTA:
   510                           	callstack 28
   511                           
   512                           ;incstack = 0
   513  000008  8216               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   514  00000A  EDAD  F000         	call	int_func,f	;refresh shadow registers
   515                           
   516                           	psect	intcode_body
   517  00015A                     __pintcode_body:
   518                           	callstack 28
   519  00015A                     int_func:
   520                           	callstack 28
   521  00015A  0006               	pop		; remove dummy address from shadow register refresh
   522  00015C                     
   523                           ;interrupcion_libreria.c: 33:     if(INTCONbits.INT0IF == 1){
   524  00015C  A2F2               	btfss	242,1,c	;volatile
   525  00015E  EFB3  F000         	goto	i2u1_41
   526  000162  EFB5  F000         	goto	i2u1_40
   527  000166                     i2u1_41:
   528  000166  EFBA  F000         	goto	i2l21
   529  00016A                     i2u1_40:
   530  00016A                     
   531                           ;interrupcion_libreria.c: 34:         x =1;
   532  00016A  0E00               	movlw	0
   533  00016C  6E10               	movwf	(_x+1)^0,c
   534  00016E  0E01               	movlw	1
   535  000170  6E0F               	movwf	_x^0,c
   536  000172                     
   537                           ;interrupcion_libreria.c: 35:         INTCONbits.INT0IF = 0;
   538  000172  92F2               	bcf	242,1,c	;volatile
   539  000174                     i2l21:
   540  000174  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   541  000176  0011               	retfie		f
   542  000178                     __end_of_INT_ALTA:
   543                           	callstack 0
   544  0000                     
   545                           	psect	rparam
   546  0000                     
   547                           	psect	temp
   548  000016                     btemp:
   549                           	callstack 0
   550  000016                     	ds	1
   551  0000                     int$flags	set	btemp
   552  0000                     wtemp8	set	btemp+1
   553  0000                     ttemp5	set	btemp+1
   554  0000                     ttemp6	set	btemp+4
   555  0000                     ttemp7	set	btemp+8
   556                           
   557                           	psect	idloc
   558                           
   559                           ;Config register IDLOC0 @ 0x200000
   560                           ;	unspecified, using default values
   561  200000                     	org	2097152
   562  200000  FF                 	db	255
   563                           
   564                           ;Config register IDLOC1 @ 0x200001
   565                           ;	unspecified, using default values
   566  200001                     	org	2097153
   567  200001  FF                 	db	255
   568                           
   569                           ;Config register IDLOC2 @ 0x200002
   570                           ;	unspecified, using default values
   571  200002                     	org	2097154
   572  200002  FF                 	db	255
   573                           
   574                           ;Config register IDLOC3 @ 0x200003
   575                           ;	unspecified, using default values
   576  200003                     	org	2097155
   577  200003  FF                 	db	255
   578                           
   579                           ;Config register IDLOC4 @ 0x200004
   580                           ;	unspecified, using default values
   581  200004                     	org	2097156
   582  200004  FF                 	db	255
   583                           
   584                           ;Config register IDLOC5 @ 0x200005
   585                           ;	unspecified, using default values
   586  200005                     	org	2097157
   587  200005  FF                 	db	255
   588                           
   589                           ;Config register IDLOC6 @ 0x200006
   590                           ;	unspecified, using default values
   591  200006                     	org	2097158
   592  200006  FF                 	db	255
   593                           
   594                           ;Config register IDLOC7 @ 0x200007
   595                           ;	unspecified, using default values
   596  200007                     	org	2097159
   597  200007  FF                 	db	255
   598                           
   599                           	psect	config
   600                           
   601                           ;Config register CONFIG1L @ 0x300000
   602                           ;	PLL Prescaler Selection bits
   603                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   604                           ;	System Clock Postscaler Selection bits
   605                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   606                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   607                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   608  300000                     	org	3145728
   609  300000  00                 	db	0
   610                           
   611                           ;Config register CONFIG1H @ 0x300001
   612                           ;	Oscillator Selection bits
   613                           ;	FOSC = HS, HS oscillator (HS)
   614                           ;	Fail-Safe Clock Monitor Enable bit
   615                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   616                           ;	Internal/External Oscillator Switchover bit
   617                           ;	IESO = ON, Oscillator Switchover mode enabled
   618  300001                     	org	3145729
   619  300001  8C                 	db	140
   620                           
   621                           ;Config register CONFIG2L @ 0x300002
   622                           ;	Power-up Timer Enable bit
   623                           ;	PWRT = ON, PWRT enabled
   624                           ;	Brown-out Reset Enable bits
   625                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   626                           ;	Brown-out Reset Voltage bits
   627                           ;	BORV = 3, Minimum setting 2.05V
   628                           ;	USB Voltage Regulator Enable bit
   629                           ;	VREGEN = OFF, USB voltage regulator disabled
   630  300002                     	org	3145730
   631  300002  18                 	db	24
   632                           
   633                           ;Config register CONFIG2H @ 0x300003
   634                           ;	Watchdog Timer Enable bit
   635                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   636                           ;	Watchdog Timer Postscale Select bits
   637                           ;	WDTPS = 32768, 1:32768
   638  300003                     	org	3145731
   639  300003  1E                 	db	30
   640                           
   641                           ; Padding undefined space
   642  300004                     	org	3145732
   643  300004  FF                 	db	255
   644                           
   645                           ;Config register CONFIG3H @ 0x300005
   646                           ;	CCP2 MUX bit
   647                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   648                           ;	PORTB A/D Enable bit
   649                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   650                           ;	Low-Power Timer 1 Oscillator Enable bit
   651                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   652                           ;	MCLR Pin Enable bit
   653                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   654  300005                     	org	3145733
   655  300005  81                 	db	129
   656                           
   657                           ;Config register CONFIG4L @ 0x300006
   658                           ;	Stack Full/Underflow Reset Enable bit
   659                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   660                           ;	Single-Supply ICSP Enable bit
   661                           ;	LVP = OFF, Single-Supply ICSP disabled
   662                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   663                           ;	ICPRT = OFF, ICPORT disabled
   664                           ;	Extended Instruction Set Enable bit
   665                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   666                           ;	Background Debugger Enable bit
   667                           ;	DEBUG = 0x1, unprogrammed default
   668  300006                     	org	3145734
   669  300006  80                 	db	128
   670                           
   671                           ; Padding undefined space
   672  300007                     	org	3145735
   673  300007  FF                 	db	255
   674                           
   675                           ;Config register CONFIG5L @ 0x300008
   676                           ;	Code Protection bit
   677                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   678                           ;	Code Protection bit
   679                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   680                           ;	Code Protection bit
   681                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   682                           ;	Code Protection bit
   683                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   684  300008                     	org	3145736
   685  300008  0F                 	db	15
   686                           
   687                           ;Config register CONFIG5H @ 0x300009
   688                           ;	Boot Block Code Protection bit
   689                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   690                           ;	Data EEPROM Code Protection bit
   691                           ;	CPD = OFF, Data EEPROM is not code-protected
   692  300009                     	org	3145737
   693  300009  C0                 	db	192
   694                           
   695                           ;Config register CONFIG6L @ 0x30000A
   696                           ;	Write Protection bit
   697                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   698                           ;	Write Protection bit
   699                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   700                           ;	Write Protection bit
   701                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   702                           ;	Write Protection bit
   703                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   704  30000A                     	org	3145738
   705  30000A  0F                 	db	15
   706                           
   707                           ;Config register CONFIG6H @ 0x30000B
   708                           ;	Configuration Register Write Protection bit
   709                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   710                           ;	Boot Block Write Protection bit
   711                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   712                           ;	Data EEPROM Write Protection bit
   713                           ;	WRTD = OFF, Data EEPROM is not write-protected
   714  30000B                     	org	3145739
   715  30000B  E0                 	db	224
   716                           
   717                           ;Config register CONFIG7L @ 0x30000C
   718                           ;	Table Read Protection bit
   719                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   720                           ;	Table Read Protection bit
   721                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   722                           ;	Table Read Protection bit
   723                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   724                           ;	Table Read Protection bit
   725                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   726  30000C                     	org	3145740
   727  30000C  0F                 	db	15
   728                           
   729                           ;Config register CONFIG7H @ 0x30000D
   730                           ;	Boot Block Table Read Protection bit
   731                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   732  30000D                     	org	3145741
   733  30000D  40                 	db	64
   734                           tosu	equ	0xFFF
   735                           tosh	equ	0xFFE
   736                           tosl	equ	0xFFD
   737                           stkptr	equ	0xFFC
   738                           pclatu	equ	0xFFB
   739                           pclath	equ	0xFFA
   740                           pcl	equ	0xFF9
   741                           tblptru	equ	0xFF8
   742                           tblptrh	equ	0xFF7
   743                           tblptrl	equ	0xFF6
   744                           tablat	equ	0xFF5
   745                           prodh	equ	0xFF4
   746                           prodl	equ	0xFF3
   747                           indf0	equ	0xFEF
   748                           postinc0	equ	0xFEE
   749                           postdec0	equ	0xFED
   750                           preinc0	equ	0xFEC
   751                           plusw0	equ	0xFEB
   752                           fsr0h	equ	0xFEA
   753                           fsr0l	equ	0xFE9
   754                           wreg	equ	0xFE8
   755                           indf1	equ	0xFE7
   756                           postinc1	equ	0xFE6
   757                           postdec1	equ	0xFE5
   758                           preinc1	equ	0xFE4
   759                           plusw1	equ	0xFE3
   760                           fsr1h	equ	0xFE2
   761                           fsr1l	equ	0xFE1
   762                           bsr	equ	0xFE0
   763                           indf2	equ	0xFDF
   764                           postinc2	equ	0xFDE
   765                           postdec2	equ	0xFDD
   766                           preinc2	equ	0xFDC
   767                           plusw2	equ	0xFDB
   768                           fsr2h	equ	0xFDA
   769                           fsr2l	equ	0xFD9
   770                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT_BAJA in COMRAM

    None.

Critical Paths under _INT_ALTA in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_BAJA in BANK0

    None.

Critical Paths under _INT_ALTA in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_BAJA in BANK1

    None.

Critical Paths under _INT_ALTA in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_BAJA in BANK2

    None.

Critical Paths under _INT_ALTA in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_BAJA in BANK3

    None.

Critical Paths under _INT_ALTA in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_BAJA in BANK4

    None.

Critical Paths under _INT_ALTA in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_BAJA in BANK5

    None.

Critical Paths under _INT_ALTA in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_BAJA in BANK6

    None.

Critical Paths under _INT_ALTA in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_BAJA in BANK7

    None.

Critical Paths under _INT_ALTA in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              3 COMRAM     2     2      0
                           _INT_Init
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _INT_BAJA                                             3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT_ALTA                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init

 _INT_BAJA (ROOT)

 _INT_ALTA (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 12 22:25:09 2021

                      _i 000D                        _j 000B                        _x 000F  
                     l15 0190                       l54 0078                       l57 00DE  
                     u30 0070                       u31 006C                       u40 00C2  
                     u41 00BE                       u50 00D6                       u51 00D2  
                     u60 011C                       u61 0118                       u77 0094  
                     u87 00FA                       bsr 000FE0                      l751 0052  
                    l737 0178                      l761 0070                      l753 0056  
                    l771 00A0                      l755 005A                      l773 00A2  
                    l757 005C                      l791 0108                      l775 00A6  
                    l767 007A                      l759 005E                      l793 010E  
                    l785 00E0                      l769 008A                      l777 00C2  
                    l787 00F0                      l779 00D6                      l789 0106  
                    wreg 000FE8                     _LATD 000F8C                     i1l27 003E  
                   i2l21 0174                     _main 0052                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   start 004E             ___param_bank 000000                    ?_main 0011  
       __end_of_INT_BAJA 004E         __end_of_INT_ALTA 0178                    i1l745 0026  
                  i1l747 0034                    i1l749 003C                    i2l741 016A  
                  i2l743 0172                    i2l739 015C         __end_of_INT_Init 0192  
                  _TRISD 000F95                    tablat 000FF5                    ttemp5 0017  
                  ttemp6 001A                    ttemp7 001E                    status 000FD8  
                  wtemp8 0017          __initialization 0124             __end_of_main 0124  
                 ??_main 0014            __activetblptr 000000                   i1u2_20 0034  
                 i1u2_21 0030                   i2u1_40 016A                   i2u1_41 0166  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0150            ___rparam_used 000001                ?_INT_BAJA 0011  
              ?_INT_ALTA 0011                ?_INT_Init 0011           __pcstackCOMRAM 0011  
             ??_INT_BAJA 0011               ??_INT_ALTA 0011               ??_INT_Init 0014  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0124  
                __ramtop 0800                  __ptext0 0052                  __ptext1 0178  
                _display 0001           __pintcode_body 015A     end_of_initialization 0150  
                int_func 015A                  postdec1 000FE5                  postinc0 000FEE  
              _TRISAbits 000F92                _TRISBbits 000F93        __size_of_INT_BAJA 0036  
      __size_of_INT_ALTA 0170        __size_of_INT_Init 001A            __pidataCOMRAM 0192  
    start_initialization 0124              __pbssCOMRAM 000B                __pintcode 0008  
            __pintcodelo 0018                 _LATAbits 000F89                 _INT_BAJA 0018  
               _INT_ALTA 0008                 _INT_Init 0178                 _RCONbits 000FD0  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                copy_data0 0138  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00D2  
               isa$xinst 000000                 int$flags 0016               _INTCONbits 000FF2  
               intlevel1 0000                 intlevel2 0000  
