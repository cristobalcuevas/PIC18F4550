

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 12 17:56:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007F04                     __pidataCOMRAM:
    54                           	callstack 0
    55                           
    56                           ;initializer for _display
    57  007F04  3F                 	db	63
    58  007F05  06                 	db	6
    59  007F06  5B                 	db	91
    60  007F07  4F                 	db	79
    61  007F08  66                 	db	102
    62  007F09  6D                 	db	109
    63  007F0A  7D                 	db	125
    64  007F0B  07                 	db	7
    65  007F0C  7F                 	db	127
    66  007F0D  67                 	db	103
    67                           
    68                           	psect	nvCOMRAM
    69  00000B                     __pnvCOMRAM:
    70                           	callstack 0
    71  00000B                     _i:
    72                           	callstack 0
    73  00000B                     	ds	2
    74  0000                     _LATD	set	3980
    75  0000                     _LATAbits	set	3977
    76  0000                     _TRISAbits	set	3986
    77  0000                     _TRISD	set	3989
    78                           
    79                           ; #config settings
    80                           
    81                           	psect	cinit
    82  007F0E                     __pcinit:
    83                           	callstack 0
    84  007F0E                     start_initialization:
    85                           	callstack 0
    86  007F0E                     __initialization:
    87                           	callstack 0
    88                           
    89                           ; Initialize objects allocated to COMRAM (10 bytes)
    90                           ; load TBLPTR registers with __pidataCOMRAM
    91  007F0E  0E04               	movlw	low __pidataCOMRAM
    92  007F10  6EF6               	movwf	tblptrl,c
    93  007F12  0E7F               	movlw	high __pidataCOMRAM
    94  007F14  6EF7               	movwf	tblptrh,c
    95  007F16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    96  007F18  6EF8               	movwf	tblptru,c
    97  007F1A  EE00  F001         	lfsr	0,__pdataCOMRAM
    98  007F1E  EE10 F00A          	lfsr	1,10
    99  007F22                     copy_data0:
   100  007F22  0009               	tblrd		*+
   101  007F24  CFF5 FFEE          	movff	tablat,postinc0
   102  007F28  50E5               	movf	postdec1,w,c
   103  007F2A  50E1               	movf	fsr1l,w,c
   104  007F2C  E1FA               	bnz	copy_data0
   105                           
   106                           ; Clear objects allocated to COMRAM (2 bytes)
   107  007F2E  6A0E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   108  007F30  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   109  007F32                     end_of_initialization:
   110                           	callstack 0
   111  007F32                     __end_of__initialization:
   112                           	callstack 0
   113  007F32  0100               	movlb	0
   114  007F34  EF9C  F03F         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  00000D                     __pbssCOMRAM:
   118                           	callstack 0
   119  00000D                     _j:
   120                           	callstack 0
   121  00000D                     	ds	2
   122                           
   123                           	psect	dataCOMRAM
   124  000001                     __pdataCOMRAM:
   125                           	callstack 0
   126  000001                     _display:
   127                           	callstack 0
   128  000001                     	ds	10
   129                           
   130                           	psect	cstackCOMRAM
   131  00000F                     __pcstackCOMRAM:
   132                           	callstack 0
   133  00000F                     ??_main:
   134                           
   135                           ; 1 bytes @ 0x0
   136  00000F                     	ds	2
   137                           
   138 ;;
   139 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   140 ;;
   141 ;; *************** function _main *****************
   142 ;; Defined at:
   143 ;;		line 15 in file "main.c"
   144 ;; Parameters:    Size  Location     Type
   145 ;;		None
   146 ;; Auto vars:     Size  Location     Type
   147 ;;		None
   148 ;; Return value:  Size  Location     Type
   149 ;;                  1    wreg      void 
   150 ;; Registers used:
   151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   152 ;; Tracked objects:
   153 ;;		On entry : 0/0
   154 ;;		On exit  : 0/0
   155 ;;		Unchanged: 0/0
   156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   157 ;;      Params:         0       0       0       0       0       0       0       0       0
   158 ;;      Locals:         0       0       0       0       0       0       0       0       0
   159 ;;      Temps:          2       0       0       0       0       0       0       0       0
   160 ;;      Totals:         2       0       0       0       0       0       0       0       0
   161 ;;Total ram usage:        2 bytes
   162 ;; This function calls:
   163 ;;		Nothing
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  007F38                     __ptext0:
   171                           	callstack 0
   172  007F38                     _main:
   173                           	callstack 31
   174  007F38                     
   175                           ;main.c: 16:     TRISD = 0x00;
   176  007F38  0E00               	movlw	0
   177  007F3A  6E95               	movwf	149,c	;volatile
   178  007F3C                     
   179                           ;main.c: 17:     TRISAbits.RA0 = 0;
   180  007F3C  9092               	bcf	146,0,c	;volatile
   181  007F3E                     
   182                           ;main.c: 18:     TRISAbits.RA1 = 0;
   183  007F3E  9292               	bcf	146,1,c	;volatile
   184  007F40                     l21:
   185                           
   186                           ;main.c: 20:         for(i = 0; i < 11; i++){
   187  007F40  0E00               	movlw	0
   188  007F42  6E0C               	movwf	(_i+1)^0,c
   189  007F44  0E00               	movlw	0
   190  007F46  6E0B               	movwf	_i^0,c
   191  007F48                     l714:
   192                           
   193                           ;main.c: 21:             if(i == 10){
   194  007F48  0E0A               	movlw	10
   195  007F4A  180B               	xorwf	_i^0,w,c
   196  007F4C  100C               	iorwf	(_i+1)^0,w,c
   197  007F4E  A4D8               	btfss	status,2,c
   198  007F50  EFAC  F03F         	goto	u11
   199  007F54  EFAE  F03F         	goto	u10
   200  007F58                     u11:
   201  007F58  EFB4  F03F         	goto	l720
   202  007F5C                     u10:
   203  007F5C                     
   204                           ;main.c: 22:                 j++;
   205  007F5C  4A0D               	infsnz	_j^0,f,c
   206  007F5E  2A0E               	incf	(_j+1)^0,f,c
   207  007F60                     
   208                           ;main.c: 23:                 i = 0;
   209  007F60  0E00               	movlw	0
   210  007F62  6E0C               	movwf	(_i+1)^0,c
   211  007F64  0E00               	movlw	0
   212  007F66  6E0B               	movwf	_i^0,c
   213  007F68                     l720:
   214                           
   215                           ;main.c: 25:             if(j == 10){
   216  007F68  0E0A               	movlw	10
   217  007F6A  180D               	xorwf	_j^0,w,c
   218  007F6C  100E               	iorwf	(_j+1)^0,w,c
   219  007F6E  A4D8               	btfss	status,2,c
   220  007F70  EFBC  F03F         	goto	u21
   221  007F74  EFBE  F03F         	goto	u20
   222  007F78                     u21:
   223  007F78  EFC2  F03F         	goto	l724
   224  007F7C                     u20:
   225  007F7C                     
   226                           ;main.c: 26:                 j = 0;
   227  007F7C  0E00               	movlw	0
   228  007F7E  6E0E               	movwf	(_j+1)^0,c
   229  007F80  0E00               	movlw	0
   230  007F82  6E0D               	movwf	_j^0,c
   231  007F84                     l724:
   232                           
   233                           ;main.c: 28:             LATAbits.LA0 = 1;
   234  007F84  8089               	bsf	137,0,c	;volatile
   235  007F86                     
   236                           ;main.c: 29:             LATD = display[i];
   237  007F86  0E01               	movlw	low _display
   238  007F88  240B               	addwf	_i^0,w,c
   239  007F8A  6ED9               	movwf	fsr2l,c
   240  007F8C  0E00               	movlw	high _display
   241  007F8E  200C               	addwfc	(_i+1)^0,w,c
   242  007F90  6EDA               	movwf	fsr2h,c
   243  007F92  50DF               	movf	indf2,w,c
   244  007F94  6E8C               	movwf	140,c	;volatile
   245  007F96                     
   246                           ;main.c: 30:             _delay((unsigned long)((50)*(20000000UL/4000.0)));
   247  007F96  0E02               	movlw	2
   248  007F98  6E10               	movwf	(??_main+1)^0,c
   249  007F9A  0E45               	movlw	69
   250  007F9C  6E0F               	movwf	??_main^0,c
   251  007F9E  0EAA               	movlw	170
   252  007FA0                     u47:
   253  007FA0  2EE8               	decfsz	wreg,f,c
   254  007FA2  D7FE               	bra	u47
   255  007FA4  2E0F               	decfsz	??_main^0,f,c
   256  007FA6  D7FC               	bra	u47
   257  007FA8  2E10               	decfsz	(??_main+1)^0,f,c
   258  007FAA  D7FA               	bra	u47
   259  007FAC                     
   260                           ;main.c: 31:             LATAbits.LA0 = 0;
   261  007FAC  9089               	bcf	137,0,c	;volatile
   262  007FAE                     
   263                           ;main.c: 32:             LATAbits.LA1 = 1;
   264  007FAE  8289               	bsf	137,1,c	;volatile
   265  007FB0                     
   266                           ;main.c: 33:             LATD = display[j];
   267  007FB0  0E01               	movlw	low _display
   268  007FB2  240D               	addwf	_j^0,w,c
   269  007FB4  6ED9               	movwf	fsr2l,c
   270  007FB6  0E00               	movlw	high _display
   271  007FB8  200E               	addwfc	(_j+1)^0,w,c
   272  007FBA  6EDA               	movwf	fsr2h,c
   273  007FBC  50DF               	movf	indf2,w,c
   274  007FBE  6E8C               	movwf	140,c	;volatile
   275  007FC0                     
   276                           ;main.c: 34:             _delay((unsigned long)((50)*(20000000UL/4000.0)));
   277  007FC0  0E02               	movlw	2
   278  007FC2  6E10               	movwf	(??_main+1)^0,c
   279  007FC4  0E45               	movlw	69
   280  007FC6  6E0F               	movwf	??_main^0,c
   281  007FC8  0EAA               	movlw	170
   282  007FCA                     u57:
   283  007FCA  2EE8               	decfsz	wreg,f,c
   284  007FCC  D7FE               	bra	u57
   285  007FCE  2E0F               	decfsz	??_main^0,f,c
   286  007FD0  D7FC               	bra	u57
   287  007FD2  2E10               	decfsz	(??_main+1)^0,f,c
   288  007FD4  D7FA               	bra	u57
   289  007FD6                     
   290                           ;main.c: 35:             LATAbits.LA1 = 0;
   291  007FD6  9289               	bcf	137,1,c	;volatile
   292  007FD8                     
   293                           ;main.c: 37:         }
   294  007FD8  4A0B               	infsnz	_i^0,f,c
   295  007FDA  2A0C               	incf	(_i+1)^0,f,c
   296  007FDC  BE0C               	btfsc	(_i+1)^0,7,c
   297  007FDE  EFFA  F03F         	goto	u31
   298  007FE2  500C               	movf	(_i+1)^0,w,c
   299  007FE4  E109               	bnz	u30
   300  007FE6  0E0B               	movlw	11
   301  007FE8  5C0B               	subwf	_i^0,w,c
   302  007FEA  A0D8               	btfss	status,0,c
   303  007FEC  EFFA  F03F         	goto	u31
   304  007FF0  EFFC  F03F         	goto	u30
   305  007FF4                     u31:
   306  007FF4  EFA4  F03F         	goto	l714
   307  007FF8                     u30:
   308  007FF8  EFA0  F03F         	goto	l21
   309  007FFC  EF00  F000         	goto	start
   310  008000                     __end_of_main:
   311                           	callstack 0
   312  0000                     
   313                           	psect	rparam
   314  0000                     
   315                           	psect	idloc
   316                           
   317                           ;Config register IDLOC0 @ 0x200000
   318                           ;	unspecified, using default values
   319  200000                     	org	2097152
   320  200000  FF                 	db	255
   321                           
   322                           ;Config register IDLOC1 @ 0x200001
   323                           ;	unspecified, using default values
   324  200001                     	org	2097153
   325  200001  FF                 	db	255
   326                           
   327                           ;Config register IDLOC2 @ 0x200002
   328                           ;	unspecified, using default values
   329  200002                     	org	2097154
   330  200002  FF                 	db	255
   331                           
   332                           ;Config register IDLOC3 @ 0x200003
   333                           ;	unspecified, using default values
   334  200003                     	org	2097155
   335  200003  FF                 	db	255
   336                           
   337                           ;Config register IDLOC4 @ 0x200004
   338                           ;	unspecified, using default values
   339  200004                     	org	2097156
   340  200004  FF                 	db	255
   341                           
   342                           ;Config register IDLOC5 @ 0x200005
   343                           ;	unspecified, using default values
   344  200005                     	org	2097157
   345  200005  FF                 	db	255
   346                           
   347                           ;Config register IDLOC6 @ 0x200006
   348                           ;	unspecified, using default values
   349  200006                     	org	2097158
   350  200006  FF                 	db	255
   351                           
   352                           ;Config register IDLOC7 @ 0x200007
   353                           ;	unspecified, using default values
   354  200007                     	org	2097159
   355  200007  FF                 	db	255
   356                           
   357                           	psect	config
   358                           
   359                           ;Config register CONFIG1L @ 0x300000
   360                           ;	PLL Prescaler Selection bits
   361                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   362                           ;	System Clock Postscaler Selection bits
   363                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   364                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   365                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   366  300000                     	org	3145728
   367  300000  00                 	db	0
   368                           
   369                           ;Config register CONFIG1H @ 0x300001
   370                           ;	Oscillator Selection bits
   371                           ;	FOSC = HS, HS oscillator (HS)
   372                           ;	Fail-Safe Clock Monitor Enable bit
   373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   374                           ;	Internal/External Oscillator Switchover bit
   375                           ;	IESO = ON, Oscillator Switchover mode enabled
   376  300001                     	org	3145729
   377  300001  8C                 	db	140
   378                           
   379                           ;Config register CONFIG2L @ 0x300002
   380                           ;	Power-up Timer Enable bit
   381                           ;	PWRT = ON, PWRT enabled
   382                           ;	Brown-out Reset Enable bits
   383                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   384                           ;	Brown-out Reset Voltage bits
   385                           ;	BORV = 3, Minimum setting 2.05V
   386                           ;	USB Voltage Regulator Enable bit
   387                           ;	VREGEN = OFF, USB voltage regulator disabled
   388  300002                     	org	3145730
   389  300002  18                 	db	24
   390                           
   391                           ;Config register CONFIG2H @ 0x300003
   392                           ;	Watchdog Timer Enable bit
   393                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   394                           ;	Watchdog Timer Postscale Select bits
   395                           ;	WDTPS = 32768, 1:32768
   396  300003                     	org	3145731
   397  300003  1E                 	db	30
   398                           
   399                           ; Padding undefined space
   400  300004                     	org	3145732
   401  300004  FF                 	db	255
   402                           
   403                           ;Config register CONFIG3H @ 0x300005
   404                           ;	CCP2 MUX bit
   405                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   406                           ;	PORTB A/D Enable bit
   407                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   408                           ;	Low-Power Timer 1 Oscillator Enable bit
   409                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   410                           ;	MCLR Pin Enable bit
   411                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   412  300005                     	org	3145733
   413  300005  81                 	db	129
   414                           
   415                           ;Config register CONFIG4L @ 0x300006
   416                           ;	Stack Full/Underflow Reset Enable bit
   417                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   418                           ;	Single-Supply ICSP Enable bit
   419                           ;	LVP = OFF, Single-Supply ICSP disabled
   420                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   421                           ;	ICPRT = OFF, ICPORT disabled
   422                           ;	Extended Instruction Set Enable bit
   423                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   424                           ;	Background Debugger Enable bit
   425                           ;	DEBUG = 0x1, unprogrammed default
   426  300006                     	org	3145734
   427  300006  80                 	db	128
   428                           
   429                           ; Padding undefined space
   430  300007                     	org	3145735
   431  300007  FF                 	db	255
   432                           
   433                           ;Config register CONFIG5L @ 0x300008
   434                           ;	Code Protection bit
   435                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   436                           ;	Code Protection bit
   437                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   438                           ;	Code Protection bit
   439                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   440                           ;	Code Protection bit
   441                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   442  300008                     	org	3145736
   443  300008  0F                 	db	15
   444                           
   445                           ;Config register CONFIG5H @ 0x300009
   446                           ;	Boot Block Code Protection bit
   447                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   448                           ;	Data EEPROM Code Protection bit
   449                           ;	CPD = OFF, Data EEPROM is not code-protected
   450  300009                     	org	3145737
   451  300009  C0                 	db	192
   452                           
   453                           ;Config register CONFIG6L @ 0x30000A
   454                           ;	Write Protection bit
   455                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   456                           ;	Write Protection bit
   457                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   458                           ;	Write Protection bit
   459                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   460                           ;	Write Protection bit
   461                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   462  30000A                     	org	3145738
   463  30000A  0F                 	db	15
   464                           
   465                           ;Config register CONFIG6H @ 0x30000B
   466                           ;	Configuration Register Write Protection bit
   467                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   468                           ;	Boot Block Write Protection bit
   469                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   470                           ;	Data EEPROM Write Protection bit
   471                           ;	WRTD = OFF, Data EEPROM is not write-protected
   472  30000B                     	org	3145739
   473  30000B  E0                 	db	224
   474                           
   475                           ;Config register CONFIG7L @ 0x30000C
   476                           ;	Table Read Protection bit
   477                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   478                           ;	Table Read Protection bit
   479                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   480                           ;	Table Read Protection bit
   481                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   482                           ;	Table Read Protection bit
   483                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   484  30000C                     	org	3145740
   485  30000C  0F                 	db	15
   486                           
   487                           ;Config register CONFIG7H @ 0x30000D
   488                           ;	Boot Block Table Read Protection bit
   489                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   490  30000D                     	org	3145741
   491  30000D  40                 	db	64
   492                           tosu	equ	0xFFF
   493                           tosh	equ	0xFFE
   494                           tosl	equ	0xFFD
   495                           stkptr	equ	0xFFC
   496                           pclatu	equ	0xFFB
   497                           pclath	equ	0xFFA
   498                           pcl	equ	0xFF9
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           prodh	equ	0xFF4
   504                           prodl	equ	0xFF3
   505                           indf0	equ	0xFEF
   506                           postinc0	equ	0xFEE
   507                           postdec0	equ	0xFED
   508                           preinc0	equ	0xFEC
   509                           plusw0	equ	0xFEB
   510                           fsr0h	equ	0xFEA
   511                           fsr0l	equ	0xFE9
   512                           wreg	equ	0xFE8
   513                           indf1	equ	0xFE7
   514                           postinc1	equ	0xFE6
   515                           postdec1	equ	0xFE5
   516                           preinc1	equ	0xFE4
   517                           plusw1	equ	0xFE3
   518                           fsr1h	equ	0xFE2
   519                           fsr1l	equ	0xFE1
   520                           bsr	equ	0xFE0
   521                           indf2	equ	0xFDF
   522                           postinc2	equ	0xFDE
   523                           postdec2	equ	0xFDD
   524                           preinc2	equ	0xFDC
   525                           plusw2	equ	0xFDB
   526                           fsr2h	equ	0xFDA
   527                           fsr2l	equ	0xFD9
   528                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2      16
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2      10       1       16.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      20        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 12 17:56:03 2021

                      _i 000B                        _j 000D                       l21 7F40  
                     u10 7F5C                       u11 7F58                       u20 7F7C  
                     u21 7F78                       u30 7FF8                       u31 7FF4  
                     u47 7FA0                       u57 7FCA                      l720 7F68  
                    l704 7F38                      l730 7FAC                      l722 7F7C  
                    l714 7F48                      l706 7F3C                      l740 7FD8  
                    l732 7FAE                      l724 7F84                      l716 7F5C  
                    l708 7F3E                      l742 7FDC                      l734 7FB0  
                    l726 7F86                      l718 7F60                      l736 7FC0  
                    l728 7F96                      l738 7FD6                      wreg 000FE8  
                   _LATD 000F8C                     _main 7F38                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ?_main 000F                    _TRISD 000F95  
                  tablat 000FF5                    status 000FD8          __initialization 7F0E  
           __end_of_main 8000                   ??_main 000F            __activetblptr 000000  
                 isa$std 000001             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F32            ___rparam_used 000001           __pcstackCOMRAM 000F  
             __pnvCOMRAM 000B                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F0E                  __ramtop 0800                  __ptext0 7F38  
                _display 0001     end_of_initialization 7F32                  postdec1 000FE5  
                postinc0 000FEE                _TRISAbits 000F92            __pidataCOMRAM 7F04  
    start_initialization 7F0E              __pbssCOMRAM 000D                 _LATAbits 000F89  
              copy_data0 7F22                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 00C8                 isa$xinst 000000  
