

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 02 02:25:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4550 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  000A14                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _duty
    65  000A14  0001               	dw	1
    66  0000                     _INTCON2bits	set	4081
    67  0000                     _INTCONbits	set	4082
    68  0000                     _T2CONbits	set	4042
    69  0000                     _TRISCbits	set	3988
    70  0000                     _PR2	set	4043
    71  0000                     _CCP1CONbits	set	4029
    72  0000                     _CCPR1L	set	4030
    73  0000                     _PORTBbits	set	3969
    74  0000                     _TRISBbits	set	3987
    75  0000                     _RCREG	set	4014
    76  0000                     _TXREG	set	4013
    77  0000                     _RCSTAbits	set	4011
    78  0000                     _TXSTAbits	set	4012
    79  0000                     _BAUDCONbits	set	4024
    80  0000                     _SPBRG	set	4015
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	callstack 0
    85  000800  00                 	db	0
    86  000801                     STR_2:
    87  000801  51                 	db	81	;'Q'
    88  000802  75                 	db	117	;'u'
    89  000803  65                 	db	101	;'e'
    90  000804  20                 	db	32
    91  000805  62                 	db	98	;'b'
    92  000806  75                 	db	117	;'u'
    93  000807  65                 	db	101	;'e'
    94  000808  6E                 	db	110	;'n'
    95  000809  20                 	db	32
    96  00080A  63                 	db	99	;'c'
    97  00080B  75                 	db	117	;'u'
    98  00080C  72                 	db	114	;'r'
    99  00080D  73                 	db	115	;'s'
   100  00080E  6F                 	db	111	;'o'
   101  00080F  20                 	db	32
   102  000810  57                 	db	87	;'W'
   103  000811  65                 	db	101	;'e'
   104  000812  6C                 	db	108	;'l'
   105  000813  73                 	db	115	;'s'
   106  000814  2C                 	db	44
   107  000815  20                 	db	32
   108  000816  41                 	db	65	;'A'
   109  000817  64                 	db	100	;'d'
   110  000818  69                 	db	105	;'i'
   111  000819  6F                 	db	111	;'o'
   112  00081A  73                 	db	115	;'s'
   113  00081B  00                 	db	0
   114  00081C                     STR_1:
   115  00081C  43                 	db	67	;'C'
   116  00081D  72                 	db	114	;'r'
   117  00081E  69                 	db	105	;'i'
   118  00081F  73                 	db	115	;'s'
   119  000820  74                 	db	116	;'t'
   120  000821  6F                 	db	111	;'o'
   121  000822  62                 	db	98	;'b'
   122  000823  61                 	db	97	;'a'
   123  000824  6C                 	db	108	;'l'
   124  000825  00                 	db	0
   125  000826  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  0009A8                     __pcinit:
   131                           	callstack 0
   132  0009A8                     start_initialization:
   133                           	callstack 0
   134  0009A8                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (2 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  0009A8  0E14               	movlw	low __pidataCOMRAM
   140  0009AA  6EF6               	movwf	tblptrl,c
   141  0009AC  0E0A               	movlw	high __pidataCOMRAM
   142  0009AE  6EF7               	movwf	tblptrh,c
   143  0009B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  0009B2  6EF8               	movwf	tblptru,c
   145  0009B4  0009               	tblrd		*+	;fetch initializer
   146  0009B6  CFF5 F006          	movff	tablat,__pdataCOMRAM
   147  0009BA  0009               	tblrd		*+	;fetch initializer
   148  0009BC  CFF5 F007          	movff	tablat,__pdataCOMRAM+1
   149                           
   150                           ; Clear objects allocated to COMRAM (1 bytes)
   151  0009C0  6A08               	clrf	__pbssCOMRAM& (0+255),c
   152  0009C2                     end_of_initialization:
   153                           	callstack 0
   154  0009C2                     __end_of__initialization:
   155                           	callstack 0
   156  0009C2  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   157  0009C4  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   158  0009C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   159  0009C8  6EF8               	movwf	tblptru,c
   160  0009CA  0100               	movlb	0
   161  0009CC  EF14  F004         	goto	_main	;jump to C main() function
   162                           
   163                           	psect	bssCOMRAM
   164  000008                     __pbssCOMRAM:
   165                           	callstack 0
   166  000008                     _x:
   167                           	callstack 0
   168  000008                     	ds	1
   169                           
   170                           	psect	dataCOMRAM
   171  000006                     __pdataCOMRAM:
   172                           	callstack 0
   173  000006                     _duty:
   174                           	callstack 0
   175  000006                     	ds	2
   176                           
   177                           	psect	cstackCOMRAM
   178  000001                     __pcstackCOMRAM:
   179                           	callstack 0
   180  000001                     ??_pwm_Init:
   181  000001                     EUSART_Init@baud:
   182                           	callstack 0
   183  000001                     EUSART_TX@dato:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     EUSART_Cadena@data:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x1
   192  000002                     	ds	2
   193  000004                     ??_main:
   194                           
   195                           ; 1 bytes @ 0x3
   196  000004                     	ds	2
   197                           
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 17 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;		None
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   212 ;; Tracked objects:
   213 ;;		On entry : 0/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   217 ;;      Params:         0       0       0       0       0       0       0       0       0
   218 ;;      Locals:         0       0       0       0       0       0       0       0       0
   219 ;;      Temps:          2       0       0       0       0       0       0       0       0
   220 ;;      Totals:         2       0       0       0       0       0       0       0       0
   221 ;;Total ram usage:        2 bytes
   222 ;; Hardware stack levels required when called: 3
   223 ;; This function calls:
   224 ;;		_EUSART_Cadena
   225 ;;		_EUSART_Init
   226 ;;		_INT_Init
   227 ;;		_pwm_Init
   228 ;; This function is called by:
   229 ;;		Startup code after reset
   230 ;; This function uses a non-reentrant model
   231 ;;
   232                           
   233                           	psect	text0
   234  000828                     __ptext0:
   235                           	callstack 0
   236  000828                     _main:
   237                           	callstack 28
   238  000828                     
   239                           ;main.c: 18:     TRISBbits.RB1 = 1;
   240  000828  8293               	bsf	147,1,c	;volatile
   241                           
   242                           ;main.c: 19:     TRISBbits.RB2 = 1;
   243  00082A  8493               	bsf	147,2,c	;volatile
   244  00082C                     
   245                           ;main.c: 20:     INT_Init();
   246  00082C  ECFF  F004         	call	_INT_Init	;wreg free
   247  000830  EF7F  F004         	goto	l960
   248  000834                     l924:
   249                           
   250                           ;main.c: 25:                 pwm_Init();
   251  000834  EC96  F004         	call	_pwm_Init	;wreg free
   252  000838                     
   253                           ;main.c: 26:                 if(PORTBbits.RB1 == 0){
   254  000838  B281               	btfsc	129,1,c	;volatile
   255  00083A  EF21  F004         	goto	u91
   256  00083E  EF23  F004         	goto	u90
   257  000842                     u91:
   258  000842  EF25  F004         	goto	l930
   259  000846                     u90:
   260  000846                     
   261                           ;main.c: 27:                     duty++;
   262  000846  4A06               	infsnz	_duty^0,f,c
   263  000848  2A07               	incf	(_duty+1)^0,f,c
   264  00084A                     l930:
   265                           
   266                           ;main.c: 29:                 if(PORTBbits.RB2 == 0){
   267  00084A  B481               	btfsc	129,2,c	;volatile
   268  00084C  EF2A  F004         	goto	u101
   269  000850  EF2C  F004         	goto	u100
   270  000854                     u101:
   271  000854  EF2F  F004         	goto	l934
   272  000858                     u100:
   273  000858                     
   274                           ;main.c: 30:                     duty--;
   275  000858  0606               	decf	_duty^0,f,c
   276  00085A  A0D8               	btfss	status,0,c
   277  00085C  0607               	decf	(_duty+1)^0,f,c
   278  00085E                     l934:
   279                           
   280                           ;main.c: 32:                 if(duty > 50){
   281  00085E  5007               	movf	(_duty+1)^0,w,c
   282  000860  E109               	bnz	u110
   283  000862  0E33               	movlw	51
   284  000864  5C06               	subwf	_duty^0,w,c
   285  000866  A0D8               	btfss	status,0,c
   286  000868  EF38  F004         	goto	u111
   287  00086C  EF3A  F004         	goto	u110
   288  000870                     u111:
   289  000870  EF3E  F004         	goto	l938
   290  000874                     u110:
   291  000874                     
   292                           ;main.c: 33:                     duty = 49;
   293  000874  0E00               	movlw	0
   294  000876  6E07               	movwf	(_duty+1)^0,c
   295  000878  0E31               	movlw	49
   296  00087A  6E06               	movwf	_duty^0,c
   297  00087C                     l938:
   298                           
   299                           ;main.c: 35:                 if(duty <= 0){
   300  00087C  5006               	movf	_duty^0,w,c
   301  00087E  1007               	iorwf	(_duty+1)^0,w,c
   302  000880  A4D8               	btfss	status,2,c
   303  000882  EF45  F004         	goto	u121
   304  000886  EF47  F004         	goto	u120
   305  00088A                     u121:
   306  00088A  EF4B  F004         	goto	l942
   307  00088E                     u120:
   308  00088E                     
   309                           ;main.c: 36:                     duty = 1;
   310  00088E  0E00               	movlw	0
   311  000890  6E07               	movwf	(_duty+1)^0,c
   312  000892  0E01               	movlw	1
   313  000894  6E06               	movwf	_duty^0,c
   314  000896                     l942:
   315                           
   316                           ;main.c: 38:                 CCPR1L = duty>>2;
   317  000896  C006  F004         	movff	_duty,??_main
   318  00089A  C007  F005         	movff	_duty+1,??_main+1
   319  00089E  90D8               	bcf	status,0,c
   320  0008A0  3205               	rrcf	(??_main+1)^0,f,c
   321  0008A2  3204               	rrcf	??_main^0,f,c
   322  0008A4  90D8               	bcf	status,0,c
   323  0008A6  3205               	rrcf	(??_main+1)^0,f,c
   324  0008A8  3204               	rrcf	??_main^0,f,c
   325  0008AA  5004               	movf	??_main^0,w,c
   326  0008AC  6EBE               	movwf	190,c	;volatile
   327  0008AE                     
   328                           ;main.c: 39:                 CCP1CONbits.DC1B = duty&0x03;
   329  0008AE  C006  F004         	movff	_duty,??_main
   330  0008B2  0E03               	movlw	3
   331  0008B4  1604               	andwf	??_main^0,f,c
   332  0008B6  3A04               	swapf	??_main^0,f,c
   333  0008B8  50BD               	movf	189,w,c	;volatile
   334  0008BA  1804               	xorwf	??_main^0,w,c
   335  0008BC  0BCF               	andlw	-49
   336  0008BE  1804               	xorwf	??_main^0,w,c
   337  0008C0  6EBD               	movwf	189,c	;volatile
   338  0008C2                     
   339                           ;main.c: 40:                 _delay((unsigned long)((20)*(20000000UL/4000.0)));
   340  0008C2  0E82               	movlw	130
   341  0008C4  6E04               	movwf	??_main^0,c
   342  0008C6  0EDE               	movlw	222
   343  0008C8                     u137:
   344  0008C8  2EE8               	decfsz	wreg,f,c
   345  0008CA  D7FE               	bra	u137
   346  0008CC  2E04               	decfsz	??_main^0,f,c
   347  0008CE  D7FC               	bra	u137
   348  0008D0                     
   349                           ;main.c: 42:                 EUSART_Init(31);
   350  0008D0  0E1F               	movlw	31
   351  0008D2  ECE8  F004         	call	_EUSART_Init
   352  0008D6                     
   353                           ;main.c: 43:                 EUSART_Cadena("Cristobal");
   354  0008D6  0E1C               	movlw	low STR_1
   355  0008D8  6E02               	movwf	EUSART_Cadena@data^0,c
   356  0008DA  0E08               	movlw	high STR_1
   357  0008DC  6E03               	movwf	(EUSART_Cadena@data+1)^0,c
   358  0008DE  ECB9  F004         	call	_EUSART_Cadena	;wreg free
   359                           
   360                           ;main.c: 44:                 break;
   361  0008E2  EF7F  F004         	goto	l960
   362  0008E6                     l952:
   363                           
   364                           ;main.c: 47:                 CCP1CONbits.CCP1M = 0b0000;
   365  0008E6  0EF0               	movlw	-16
   366  0008E8  16BD               	andwf	189,f,c	;volatile
   367  0008EA                     
   368                           ;main.c: 49:                 EUSART_Cadena("Que buen curso Wels, Adios");
   369  0008EA  0E01               	movlw	low STR_2
   370  0008EC  6E02               	movwf	EUSART_Cadena@data^0,c
   371  0008EE  0E08               	movlw	high STR_2
   372  0008F0  6E03               	movwf	(EUSART_Cadena@data+1)^0,c
   373  0008F2  ECB9  F004         	call	_EUSART_Cadena	;wreg free
   374  0008F6                     
   375                           ;main.c: 50:                 x = 0;
   376  0008F6  0E00               	movlw	0
   377  0008F8  6E08               	movwf	_x^0,c
   378                           
   379                           ;main.c: 51:                 break;
   380  0008FA  EF7F  F004         	goto	l960
   381  0008FE                     l58:
   382  0008FE                     l960:
   383  0008FE  5008               	movf	_x^0,w,c
   384  000900  6E04               	movwf	??_main^0,c
   385  000902  6A05               	clrf	(??_main+1)^0,c
   386                           
   387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   388                           ; Switch size 1, requested type "simple"
   389                           ; Number of cases is 1, Range of values is 0 to 0
   390                           ; switch strategies available:
   391                           ; Name         Instructions Cycles
   392                           ; simple_byte            4     3 (average)
   393                           ;	Chosen strategy is simple_byte
   394  000904  5005               	movf	(??_main+1)^0,w,c
   395  000906  0A00               	xorlw	0	; case 0
   396  000908  B4D8               	btfsc	status,2,c
   397  00090A  EF89  F004         	goto	l974
   398  00090E  EF7F  F004         	goto	l58
   399  000912                     l974:
   400                           
   401                           ; Switch size 1, requested type "simple"
   402                           ; Number of cases is 2, Range of values is 1 to 2
   403                           ; switch strategies available:
   404                           ; Name         Instructions Cycles
   405                           ; simple_byte            7     4 (average)
   406                           ;	Chosen strategy is simple_byte
   407  000912  5004               	movf	??_main^0,w,c
   408  000914  0A01               	xorlw	1	; case 1
   409  000916  B4D8               	btfsc	status,2,c
   410  000918  EF1A  F004         	goto	l924
   411  00091C  0A03               	xorlw	3	; case 2
   412  00091E  B4D8               	btfsc	status,2,c
   413  000920  EF73  F004         	goto	l952
   414  000924  EF7F  F004         	goto	l58
   415  000928  EF07  F000         	goto	start
   416  00092C                     __end_of_main:
   417                           	callstack 0
   418                           
   419 ;; *************** function _pwm_Init *****************
   420 ;; Defined at:
   421 ;;		line 13 in file "pwm_libreria.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   435 ;;      Params:         0       0       0       0       0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0       0       0
   437 ;;      Temps:          2       0       0       0       0       0       0       0       0
   438 ;;      Totals:         2       0       0       0       0       0       0       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used: 1
   441 ;; Hardware stack levels required when called: 1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text1
   450  00092C                     __ptext1:
   451                           	callstack 0
   452  00092C                     _pwm_Init:
   453                           	callstack 29
   454  00092C                     
   455                           ;pwm_libreria.c: 14:     PR2 = 12;
   456  00092C  0E0C               	movlw	12
   457  00092E  6ECB               	movwf	203,c	;volatile
   458  000930                     
   459                           ;pwm_libreria.c: 15:     CCPR1L = duty>>2;
   460  000930  C006  F001         	movff	_duty,??_pwm_Init
   461  000934  C007  F002         	movff	_duty+1,??_pwm_Init+1
   462  000938  90D8               	bcf	status,0,c
   463  00093A  3202               	rrcf	(??_pwm_Init+1)^0,f,c
   464  00093C  3201               	rrcf	??_pwm_Init^0,f,c
   465  00093E  90D8               	bcf	status,0,c
   466  000940  3202               	rrcf	(??_pwm_Init+1)^0,f,c
   467  000942  3201               	rrcf	??_pwm_Init^0,f,c
   468  000944  5001               	movf	??_pwm_Init^0,w,c
   469  000946  6EBE               	movwf	190,c	;volatile
   470  000948                     
   471                           ;pwm_libreria.c: 16:     CCP1CONbits.DC1B = duty&0x03;
   472  000948  C006  F001         	movff	_duty,??_pwm_Init
   473  00094C  0E03               	movlw	3
   474  00094E  1601               	andwf	??_pwm_Init^0,f,c
   475  000950  3A01               	swapf	??_pwm_Init^0,f,c
   476  000952  50BD               	movf	189,w,c	;volatile
   477  000954  1801               	xorwf	??_pwm_Init^0,w,c
   478  000956  0BCF               	andlw	-49
   479  000958  1801               	xorwf	??_pwm_Init^0,w,c
   480  00095A  6EBD               	movwf	189,c	;volatile
   481  00095C                     
   482                           ;pwm_libreria.c: 17:     TRISCbits.RC2 = 0;
   483  00095C  9494               	bcf	148,2,c	;volatile
   484                           
   485                           ;pwm_libreria.c: 18:     T2CONbits.T2CKPS = 0b10;
   486  00095E  50CA               	movf	202,w,c	;volatile
   487  000960  0BFC               	andlw	-4
   488  000962  0902               	iorlw	2
   489  000964  6ECA               	movwf	202,c	;volatile
   490  000966                     
   491                           ;pwm_libreria.c: 19:     T2CONbits.TMR2ON = 1;
   492  000966  84CA               	bsf	202,2,c	;volatile
   493                           
   494                           ;pwm_libreria.c: 20:     CCP1CONbits.CCP1M = 0b1100;
   495  000968  50BD               	movf	189,w,c	;volatile
   496  00096A  0BF0               	andlw	-16
   497  00096C  090C               	iorlw	12
   498  00096E  6EBD               	movwf	189,c	;volatile
   499  000970  0012               	return		;funcret
   500  000972                     __end_of_pwm_Init:
   501                           	callstack 0
   502                           
   503 ;; *************** function _INT_Init *****************
   504 ;; Defined at:
   505 ;;		line 13 in file "interrupcion_libreria.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		None
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   519 ;;      Params:         0       0       0       0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text2
   534  0009FE                     __ptext2:
   535                           	callstack 0
   536  0009FE                     _INT_Init:
   537                           	callstack 29
   538  0009FE                     
   539                           ;interrupcion_libreria.c: 14:     TRISBbits.RB0 = 1;
   540  0009FE  8093               	bsf	147,0,c	;volatile
   541                           
   542                           ;interrupcion_libreria.c: 15:     INTCONbits.INT0E = 1;
   543  000A00  88F2               	bsf	242,4,c	;volatile
   544                           
   545                           ;interrupcion_libreria.c: 16:     INTCONbits.INT0IF = 0;
   546  000A02  92F2               	bcf	242,1,c	;volatile
   547                           
   548                           ;interrupcion_libreria.c: 18:     INTCON2bits.INTEDG0 = 0;
   549  000A04  9CF1               	bcf	241,6,c	;volatile
   550                           
   551                           ;interrupcion_libreria.c: 19:     INTCONbits.GIE = 1;
   552  000A06  8EF2               	bsf	242,7,c	;volatile
   553  000A08  0012               	return		;funcret
   554  000A0A                     __end_of_INT_Init:
   555                           	callstack 0
   556                           
   557 ;; *************** function _EUSART_Init *****************
   558 ;; Defined at:
   559 ;;		line 10 in file "EUSART_libreria.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  baud            1    wreg     unsigned char 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  baud            1    0[COMRAM] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   573 ;;      Params:         0       0       0       0       0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0
   576 ;;      Totals:         1       0       0       0       0       0       0       0       0
   577 ;;Total ram usage:        1 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; Hardware stack levels required when called: 1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_main
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text3
   588  0009D0                     __ptext3:
   589                           	callstack 0
   590  0009D0                     _EUSART_Init:
   591                           	callstack 29
   592                           
   593                           ;incstack = 0
   594                           ;EUSART_Init@baud stored from wreg
   595  0009D0  6E01               	movwf	EUSART_Init@baud^0,c
   596  0009D2                     
   597                           ;EUSART_libreria.c: 11:     SPBRG = baud;
   598  0009D2  C001  FFAF         	movff	EUSART_Init@baud,4015	;volatile
   599  0009D6                     
   600                           ;EUSART_libreria.c: 12:     BAUDCONbits.BRG16 = 0;
   601  0009D6  96B8               	bcf	184,3,c	;volatile
   602  0009D8                     
   603                           ;EUSART_libreria.c: 13:     TXSTAbits.BRGH = 0;
   604  0009D8  94AC               	bcf	172,2,c	;volatile
   605  0009DA                     
   606                           ;EUSART_libreria.c: 14:     TXSTAbits.SYNC = 0;
   607  0009DA  98AC               	bcf	172,4,c	;volatile
   608  0009DC                     
   609                           ;EUSART_libreria.c: 15:     RCSTAbits.SPEN = 1;
   610  0009DC  8EAB               	bsf	171,7,c	;volatile
   611  0009DE                     
   612                           ;EUSART_libreria.c: 17:     TXSTAbits.TXEN = 1;
   613  0009DE  8AAC               	bsf	172,5,c	;volatile
   614  0009E0                     
   615                           ;EUSART_libreria.c: 18:     TXSTAbits.TX9 = 0;
   616  0009E0  9CAC               	bcf	172,6,c	;volatile
   617  0009E2                     
   618                           ;EUSART_libreria.c: 20:     RCSTAbits.CREN = 1;
   619  0009E2  88AB               	bsf	171,4,c	;volatile
   620  0009E4                     
   621                           ;EUSART_libreria.c: 21:     RCSTAbits.RX9 = 0;
   622  0009E4  9CAB               	bcf	171,6,c	;volatile
   623  0009E6  0012               	return		;funcret
   624  0009E8                     __end_of_EUSART_Init:
   625                           	callstack 0
   626                           
   627 ;; *************** function _EUSART_Cadena *****************
   628 ;; Defined at:
   629 ;;		line 31 in file "EUSART_libreria.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  data            2    1[COMRAM] PTR unsigned char 
   632 ;;		 -> STR_2(27), STR_1(10), 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   644 ;;      Params:         2       0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0       0       0       0       0
   647 ;;      Totals:         2       0       0       0       0       0       0       0       0
   648 ;;Total ram usage:        2 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 2
   651 ;; This function calls:
   652 ;;		_EUSART_TX
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text4
   659  000972                     __ptext4:
   660                           	callstack 0
   661  000972                     _EUSART_Cadena:
   662                           	callstack 28
   663  000972                     
   664                           ;EUSART_libreria.c: 32:     while(*data != '\0'){
   665  000972  EFC5  F004         	goto	l906
   666  000976                     l902:
   667                           
   668                           ;EUSART_libreria.c: 33:         EUSART_TX(*data);
   669  000976  C002  FFF6         	movff	EUSART_Cadena@data,tblptrl
   670  00097A  C003  FFF7         	movff	EUSART_Cadena@data+1,tblptrh
   671  00097E                     	if	0	;tblptru may be non-zero
   672  00097E                     	endif
   673  00097E                     	if	0	;tblptru may be non-zero
   674  00097E                     	endif
   675  00097E  0008               	tblrd		*
   676  000980  50F5               	movf	tablat,w,c
   677  000982  ECF4  F004         	call	_EUSART_TX
   678  000986                     
   679                           ;EUSART_libreria.c: 34:         data++;
   680  000986  4A02               	infsnz	EUSART_Cadena@data^0,f,c
   681  000988  2A03               	incf	(EUSART_Cadena@data+1)^0,f,c
   682  00098A                     l906:
   683                           
   684                           ;EUSART_libreria.c: 32:     while(*data != '\0'){
   685  00098A  C002  FFF6         	movff	EUSART_Cadena@data,tblptrl
   686  00098E  C003  FFF7         	movff	EUSART_Cadena@data+1,tblptrh
   687  000992                     	if	0	;tblptru may be non-zero
   688  000992                     	endif
   689  000992                     	if	0	;tblptru may be non-zero
   690  000992                     	endif
   691  000992  0008               	tblrd		*
   692  000994  50F5               	movf	tablat,w,c
   693  000996  0900               	iorlw	0
   694  000998  A4D8               	btfss	status,2,c
   695  00099A  EFD1  F004         	goto	u81
   696  00099E  EFD3  F004         	goto	u80
   697  0009A2                     u81:
   698  0009A2  EFBB  F004         	goto	l902
   699  0009A6                     u80:
   700  0009A6  0012               	return		;funcret
   701  0009A8                     __end_of_EUSART_Cadena:
   702                           	callstack 0
   703                           
   704 ;; *************** function _EUSART_TX *****************
   705 ;; Defined at:
   706 ;;		line 24 in file "EUSART_libreria.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  dato            1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  dato            1    0[COMRAM] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   720 ;;      Params:         0       0       0       0       0       0       0       0       0
   721 ;;      Locals:         1       0       0       0       0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0       0       0       0       0
   723 ;;      Totals:         1       0       0       0       0       0       0       0       0
   724 ;;Total ram usage:        1 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_EUSART_Cadena
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text5
   735  0009E8                     __ptext5:
   736                           	callstack 0
   737  0009E8                     _EUSART_TX:
   738                           	callstack 28
   739                           
   740                           ;incstack = 0
   741                           ;EUSART_TX@dato stored from wreg
   742  0009E8  6E01               	movwf	EUSART_TX@dato^0,c
   743  0009EA                     l18:
   744  0009EA  A2AC               	btfss	172,1,c	;volatile
   745  0009EC  EFFA  F004         	goto	u71
   746  0009F0  EFFC  F004         	goto	u70
   747  0009F4                     u71:
   748  0009F4  EFF5  F004         	goto	l18
   749  0009F8                     u70:
   750  0009F8                     
   751                           ;EUSART_libreria.c: 26:     TXREG = dato;
   752  0009F8  C001  FFAD         	movff	EUSART_TX@dato,4013	;volatile
   753  0009FC  0012               	return		;funcret
   754  0009FE                     __end_of_EUSART_TX:
   755                           	callstack 0
   756                           
   757 ;; *************** function _INT0_ISRs *****************
   758 ;; Defined at:
   759 ;;		line 21 in file "interrupcion_libreria.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;		None
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   773 ;;      Params:         0       0       0       0       0       0       0       0       0
   774 ;;      Locals:         0       0       0       0       0       0       0       0       0
   775 ;;      Temps:          0       0       0       0       0       0       0       0       0
   776 ;;      Totals:         0       0       0       0       0       0       0       0       0
   777 ;;Total ram usage:        0 bytes
   778 ;; Hardware stack levels used: 1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		Interrupt level 2
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	intcode
   787  000008                     __pintcode:
   788                           	callstack 0
   789  000008                     _INT0_ISRs:
   790                           	callstack 28
   791                           
   792                           ;incstack = 0
   793  000008  8209               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   794  00000A  ED05  F005         	call	int_func,f	;refresh shadow registers
   795                           
   796                           	psect	intcode_body
   797  000A0A                     __pintcode_body:
   798                           	callstack 28
   799  000A0A                     int_func:
   800                           	callstack 28
   801  000A0A  0006               	pop		; remove dummy address from shadow register refresh
   802  000A0C                     
   803                           ;interrupcion_libreria.c: 22:     x++;
   804  000A0C  2A08               	incf	_x^0,f,c
   805  000A0E                     
   806                           ;interrupcion_libreria.c: 23:     INTCONbits.INT0IF = 0;
   807  000A0E  92F2               	bcf	242,1,c	;volatile
   808  000A10  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   809  000A12  0011               	retfie		f
   810  000A14                     __end_of_INT0_ISRs:
   811                           	callstack 0
   812                           
   813                           	psect	rparam
   814  0000                     
   815                           	psect	temp
   816  000009                     btemp:
   817                           	callstack 0
   818  000009                     	ds	1
   819  0000                     int$flags	set	btemp
   820  0000                     wtemp8	set	btemp+1
   821  0000                     ttemp5	set	btemp+1
   822  0000                     ttemp6	set	btemp+4
   823  0000                     ttemp7	set	btemp+8
   824                           
   825                           	psect	idloc
   826                           
   827                           ;Config register IDLOC0 @ 0x200000
   828                           ;	unspecified, using default values
   829  200000                     	org	2097152
   830  200000  FF                 	db	255
   831                           
   832                           ;Config register IDLOC1 @ 0x200001
   833                           ;	unspecified, using default values
   834  200001                     	org	2097153
   835  200001  FF                 	db	255
   836                           
   837                           ;Config register IDLOC2 @ 0x200002
   838                           ;	unspecified, using default values
   839  200002                     	org	2097154
   840  200002  FF                 	db	255
   841                           
   842                           ;Config register IDLOC3 @ 0x200003
   843                           ;	unspecified, using default values
   844  200003                     	org	2097155
   845  200003  FF                 	db	255
   846                           
   847                           ;Config register IDLOC4 @ 0x200004
   848                           ;	unspecified, using default values
   849  200004                     	org	2097156
   850  200004  FF                 	db	255
   851                           
   852                           ;Config register IDLOC5 @ 0x200005
   853                           ;	unspecified, using default values
   854  200005                     	org	2097157
   855  200005  FF                 	db	255
   856                           
   857                           ;Config register IDLOC6 @ 0x200006
   858                           ;	unspecified, using default values
   859  200006                     	org	2097158
   860  200006  FF                 	db	255
   861                           
   862                           ;Config register IDLOC7 @ 0x200007
   863                           ;	unspecified, using default values
   864  200007                     	org	2097159
   865  200007  FF                 	db	255
   866                           
   867                           	psect	config
   868                           
   869                           ;Config register CONFIG1L @ 0x300000
   870                           ;	PLL Prescaler Selection bits
   871                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   872                           ;	System Clock Postscaler Selection bits
   873                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   874                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   875                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   876  300000                     	org	3145728
   877  300000  00                 	db	0
   878                           
   879                           ;Config register CONFIG1H @ 0x300001
   880                           ;	Oscillator Selection bits
   881                           ;	FOSC = HS, HS oscillator (HS)
   882                           ;	Fail-Safe Clock Monitor Enable bit
   883                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   884                           ;	Internal/External Oscillator Switchover bit
   885                           ;	IESO = ON, Oscillator Switchover mode enabled
   886  300001                     	org	3145729
   887  300001  8C                 	db	140
   888                           
   889                           ;Config register CONFIG2L @ 0x300002
   890                           ;	Power-up Timer Enable bit
   891                           ;	PWRT = ON, PWRT enabled
   892                           ;	Brown-out Reset Enable bits
   893                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   894                           ;	Brown-out Reset Voltage bits
   895                           ;	BORV = 3, Minimum setting 2.05V
   896                           ;	USB Voltage Regulator Enable bit
   897                           ;	VREGEN = OFF, USB voltage regulator disabled
   898  300002                     	org	3145730
   899  300002  18                 	db	24
   900                           
   901                           ;Config register CONFIG2H @ 0x300003
   902                           ;	Watchdog Timer Enable bit
   903                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   904                           ;	Watchdog Timer Postscale Select bits
   905                           ;	WDTPS = 32768, 1:32768
   906  300003                     	org	3145731
   907  300003  1E                 	db	30
   908                           
   909                           ; Padding undefined space
   910  300004                     	org	3145732
   911  300004  FF                 	db	255
   912                           
   913                           ;Config register CONFIG3H @ 0x300005
   914                           ;	CCP2 MUX bit
   915                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   916                           ;	PORTB A/D Enable bit
   917                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   918                           ;	Low-Power Timer 1 Oscillator Enable bit
   919                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   920                           ;	MCLR Pin Enable bit
   921                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   922  300005                     	org	3145733
   923  300005  81                 	db	129
   924                           
   925                           ;Config register CONFIG4L @ 0x300006
   926                           ;	Stack Full/Underflow Reset Enable bit
   927                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   928                           ;	Single-Supply ICSP Enable bit
   929                           ;	LVP = OFF, Single-Supply ICSP disabled
   930                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   931                           ;	ICPRT = OFF, ICPORT disabled
   932                           ;	Extended Instruction Set Enable bit
   933                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   934                           ;	Background Debugger Enable bit
   935                           ;	DEBUG = 0x1, unprogrammed default
   936  300006                     	org	3145734
   937  300006  80                 	db	128
   938                           
   939                           ; Padding undefined space
   940  300007                     	org	3145735
   941  300007  FF                 	db	255
   942                           
   943                           ;Config register CONFIG5L @ 0x300008
   944                           ;	Code Protection bit
   945                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   946                           ;	Code Protection bit
   947                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   948                           ;	Code Protection bit
   949                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   950                           ;	Code Protection bit
   951                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   952  300008                     	org	3145736
   953  300008  0F                 	db	15
   954                           
   955                           ;Config register CONFIG5H @ 0x300009
   956                           ;	Boot Block Code Protection bit
   957                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   958                           ;	Data EEPROM Code Protection bit
   959                           ;	CPD = OFF, Data EEPROM is not code-protected
   960  300009                     	org	3145737
   961  300009  C0                 	db	192
   962                           
   963                           ;Config register CONFIG6L @ 0x30000A
   964                           ;	Write Protection bit
   965                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   966                           ;	Write Protection bit
   967                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   968                           ;	Write Protection bit
   969                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   970                           ;	Write Protection bit
   971                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   972  30000A                     	org	3145738
   973  30000A  0F                 	db	15
   974                           
   975                           ;Config register CONFIG6H @ 0x30000B
   976                           ;	Configuration Register Write Protection bit
   977                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   978                           ;	Boot Block Write Protection bit
   979                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   980                           ;	Data EEPROM Write Protection bit
   981                           ;	WRTD = OFF, Data EEPROM is not write-protected
   982  30000B                     	org	3145739
   983  30000B  E0                 	db	224
   984                           
   985                           ;Config register CONFIG7L @ 0x30000C
   986                           ;	Table Read Protection bit
   987                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   988                           ;	Table Read Protection bit
   989                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   990                           ;	Table Read Protection bit
   991                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   992                           ;	Table Read Protection bit
   993                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   994  30000C                     	org	3145740
   995  30000C  0F                 	db	15
   996                           
   997                           ;Config register CONFIG7H @ 0x30000D
   998                           ;	Boot Block Table Read Protection bit
   999                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1000  30000D                     	org	3145741
  1001  30000D  40                 	db	64
  1002                           tosu	equ	0xFFF
  1003                           tosh	equ	0xFFE
  1004                           tosl	equ	0xFFD
  1005                           stkptr	equ	0xFFC
  1006                           pclatu	equ	0xFFB
  1007                           pclath	equ	0xFFA
  1008                           pcl	equ	0xFF9
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           prodh	equ	0xFF4
  1014                           prodl	equ	0xFF3
  1015                           indf0	equ	0xFEF
  1016                           postinc0	equ	0xFEE
  1017                           postdec0	equ	0xFED
  1018                           preinc0	equ	0xFEC
  1019                           plusw0	equ	0xFEB
  1020                           fsr0h	equ	0xFEA
  1021                           fsr0l	equ	0xFE9
  1022                           wreg	equ	0xFE8
  1023                           indf1	equ	0xFE7
  1024                           postinc1	equ	0xFE6
  1025                           postdec1	equ	0xFE5
  1026                           preinc1	equ	0xFE4
  1027                           plusw1	equ	0xFE3
  1028                           fsr1h	equ	0xFE2
  1029                           fsr1l	equ	0xFE1
  1030                           bsr	equ	0xFE0
  1031                           indf2	equ	0xFDF
  1032                           postinc2	equ	0xFDE
  1033                           postdec2	equ	0xFDD
  1034                           preinc2	equ	0xFDC
  1035                           plusw2	equ	0xFDB
  1036                           fsr2h	equ	0xFDA
  1037                           fsr2l	equ	0xFD9
  1038                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      5       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    EUSART_Cadena@data	PTR unsigned char  size(2) Largest target is 27
		 -> STR_2(CODE[27]), STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_EUSART_Cadena
    _EUSART_Cadena->_EUSART_TX

Critical Paths under _INT0_ISRs in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISRs in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISRs in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISRs in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISRs in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISRs in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISRs in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISRs in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISRs in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     241
                                              3 COMRAM     2     2      0
                      _EUSART_Cadena
                        _EUSART_Init
                           _INT_Init
                           _pwm_Init
 ---------------------------------------------------------------------------------
 (1) _pwm_Init                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Cadena                                        2     0      2     219
                                              1 COMRAM     2     0      2
                          _EUSART_TX
 ---------------------------------------------------------------------------------
 (2) _EUSART_TX                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISRs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Cadena
     _EUSART_TX
   _EUSART_Init
   _INT_Init
   _pwm_Init

 _INT0_ISRs (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      5       8       1        8.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      20        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 02 02:25:26 2021

                      _x 0008                       l21 09FC                       l30 09A6  
                     l15 09E6                       l18 09EA                       l58 08FE  
                     l84 0970                       l95 0A08                       u70 09F8  
                     u71 09F4                       u80 09A6                       u81 09A2  
                     u90 0846                       u91 0842                      l900 0972  
                    l902 0976                      l910 092C                      l904 0986  
                    l912 0930                      l920 0828                      l906 098A  
                    l914 0948                      l930 084A                      l922 082C  
                    l908 09FE                      l916 095C                      l940 088E  
                    l932 0858                      l924 0834                      l918 0966  
                    l950 08D6                      l942 0896                      l934 085E  
                    l926 0838                      l880 09F8                      l952 08E6  
                    l944 08AE                      l936 0874                      l928 0846  
                    l960 08FE                      l890 09DC                      l882 09D2  
                    l954 08EA                      l946 08C2                      l938 087C  
                    l892 09DE                      l884 09D6                      l956 08F6  
                    l948 08D0                      l878 09EA                      l894 09E0  
                    l886 09D8                      l974 0912                      l896 09E2  
                    l888 09DA                      l898 09E4                      u100 0858  
                    u101 0854                      u110 0874                      u111 0870  
                    u120 088E                      u121 088A                      u137 08C8  
                    _PR2 000FCB                      wreg 000FE8             ?_EUSART_Init 0001  
                   STR_1 081C                     STR_2 0801                     _main 0828  
                   _duty 0006                     btemp 0009       __size_of_INT0_ISRs 0A0C  
                   start 000E       __size_of_EUSART_TX 0016             ___param_bank 000000  
          _EUSART_Cadena 0972                    ?_main 0001                    i2l100 0A10  
                  i2l966 0A0C                    i2l968 0A0E                    _RCREG 000FAE  
                  _SPBRG 000FAF         __end_of_INT_Init 0A0A                    _TXREG 000FAD  
                  tablat 000FF5                    ttemp5 000A                    ttemp6 000D  
                  ttemp7 0011                    status 000FD8                    wtemp8 000A  
        __initialization 09A8             __end_of_main 092C           ?_EUSART_Cadena 0002  
                 ??_main 0004            __activetblptr 000002        __end_of_INT0_ISRs 0A14  
      __end_of_EUSART_TX 09FE                   _CCPR1L 000FBE                   isa$std 000001  
           __pdataCOMRAM 0006             __mediumconst 0000         __end_of_pwm_Init 0972  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
   __size_of_EUSART_Init 0018               __accesstop 0060  __end_of__initialization 09C2  
          ___rparam_used 000001                ?_INT_Init 0001           __pcstackCOMRAM 0001  
        ??_EUSART_Cadena 0004               ??_INT_Init 0001                  __Hparam 0000  
                __Lparam 0000                ?_pwm_Init 0001             __psmallconst 0800  
                __pcinit 09A8                  __ramtop 0800                  __ptext0 0828  
                __ptext1 092C                  __ptext2 09FE                  __ptext3 09D0  
                __ptext4 0972                  __ptext5 09E8                _T2CONbits 000FCA  
              _INT0_ISRs 0008            EUSART_TX@dato 0001           __pintcode_body 0A0A  
              _EUSART_TX 09E8     end_of_initialization 09C2            __Lmediumconst 0000  
                int_func 0A0A                _RCSTAbits 000FAB               ??_pwm_Init 0001  
              _PORTBbits 000F81                _TRISBbits 000F93                _TRISCbits 000F94  
             ?_INT0_ISRs 0001               ?_EUSART_TX 0001              _CCP1CONbits 000FBD  
              _TXSTAbits 000FAC        __size_of_INT_Init 000C              _BAUDCONbits 000FB8  
          __pidataCOMRAM 0A14      start_initialization 09A8            ??_EUSART_Init 0001  
  __end_of_EUSART_Cadena 09A8              __pbssCOMRAM 0008              ??_INT0_ISRs 0001  
            ??_EUSART_TX 0001      __end_of_EUSART_Init 09E8                __pintcode 0008  
      __size_of_pwm_Init 0046              __smallconst 0800                 _INT_Init 09FE  
            _EUSART_Init 09D0              _INTCON2bits 000FF1                 __Hrparam 0000  
        EUSART_Init@baud 0001                 __Lrparam 0000            __size_of_main 0104  
               isa$xinst 000000                 _pwm_Init 092C                 int$flags 0009  
             _INTCONbits 000FF2                 intlevel2 0000        EUSART_Cadena@data 0002  
 __size_of_EUSART_Cadena 0036  
