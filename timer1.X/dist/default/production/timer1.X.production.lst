

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 29 01:48:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _LATDbits	set	3980
    62  0000                     _LATD	set	3980
    63  0000                     _TRISD	set	3989
    64  0000                     _IPR1bits	set	3999
    65  0000                     _PIE1bits	set	3997
    66  0000                     _T1CON	set	4045
    67  0000                     _TRISDbits	set	3989
    68  0000                     _PIR1bits	set	3998
    69  0000                     _TMR1L	set	4046
    70  0000                     _TMR1H	set	4047
    71  0000                     _INTCONbits	set	4082
    72  0000                     _RCONbits	set	4048
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     STR_1:
    79  000801  48                 	db	72	;'H'
    80  000802  6F                 	db	111	;'o'
    81  000803  72                 	db	114	;'r'
    82  000804  61                 	db	97	;'a'
    83  000805  3A                 	db	58	;':'
    84  000806  00                 	db	0
    85  000807  00                 	db	0	; dummy byte at the end
    86  0000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90  000AA2                     __pcinit:
    91                           	callstack 0
    92  000AA2                     start_initialization:
    93                           	callstack 0
    94  000AA2                     __initialization:
    95                           	callstack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (12 bytes)
    98  000AA2  EE00  F001         	lfsr	0,__pbssCOMRAM
    99  000AA6  0E0C               	movlw	12
   100  000AA8                     clear_0:
   101  000AA8  6AEE               	clrf	postinc0,c
   102  000AAA  06E8               	decf	wreg,f,c
   103  000AAC  E1FD               	bnz	clear_0
   104  000AAE                     end_of_initialization:
   105                           	callstack 0
   106  000AAE                     __end_of__initialization:
   107                           	callstack 0
   108  000AAE  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   109  000AB0  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   110  000AB2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   111  000AB4  6EF8               	movwf	tblptru,c
   112  000AB6  0E08               	movlw	high __Lsmallconst
   113  000AB8  6EF7               	movwf	tblptrh,c
   114  000ABA  0100               	movlb	0
   115  000ABC  EF5E  F004         	goto	_main	;jump to C main() function
   116                           
   117                           	psect	bssCOMRAM
   118  000001                     __pbssCOMRAM:
   119                           	callstack 0
   120  000001                     _hor_d:
   121                           	callstack 0
   122  000001                     	ds	2
   123  000003                     _hor:
   124                           	callstack 0
   125  000003                     	ds	2
   126  000005                     _min_d:
   127                           	callstack 0
   128  000005                     	ds	2
   129  000007                     _min:
   130                           	callstack 0
   131  000007                     	ds	2
   132  000009                     _sec_d:
   133                           	callstack 0
   134  000009                     	ds	2
   135  00000B                     _sec:
   136                           	callstack 0
   137  00000B                     	ds	2
   138                           
   139                           	psect	cstackCOMRAM
   140  00000D                     __pcstackCOMRAM:
   141                           	callstack 0
   142  00000D                     ??_INT_TMR1_BAJA:
   143  00000D                     
   144                           ; 1 bytes @ 0x0
   145  00000D                     	ds	1
   146  00000E                     selectorRegistro@rs:
   147                           	callstack 0
   148                           
   149                           ; 2 bytes @ 0x1
   150  00000E                     	ds	2
   151  000010                     ??_selectorRegistro:
   152                           
   153                           ; 1 bytes @ 0x3
   154  000010                     	ds	1
   155  000011                     lcd_Comando@cmd:
   156                           	callstack 0
   157  000011                     lcd_Caracter@dat:
   158                           	callstack 0
   159                           
   160                           ; 1 bytes @ 0x4
   161  000011                     	ds	1
   162  000012                     ??_lcd_Init:
   163  000012                     lcd_XY@x:
   164                           	callstack 0
   165  000012                     lcd_Cadena@pal:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x5
   169  000012                     	ds	2
   170  000014                     lcd_XY@y:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0x7
   174  000014                     	ds	2
   175  000016                     
   176                           ; 1 bytes @ 0x9
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 17 in file "main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   196 ;;      Params:         0       0       0       0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels required when called: 5
   202 ;; This function calls:
   203 ;;		_INT_Init
   204 ;;		_Timer1_Init
   205 ;;		_lcd_Cadena
   206 ;;		_lcd_Caracter
   207 ;;		_lcd_Init
   208 ;;		_lcd_XY
   209 ;; This function is called by:
   210 ;;		Startup code after reset
   211 ;; This function uses a non-reentrant model
   212 ;;
   213                           
   214                           	psect	text0
   215  0008BC                     __ptext0:
   216                           	callstack 0
   217  0008BC                     _main:
   218                           	callstack 26
   219  0008BC                     
   220                           ;main.c: 18:     TRISDbits.RD0 = 0;
   221  0008BC  9095               	bcf	149,0,c	;volatile
   222  0008BE                     
   223                           ;main.c: 19:     lcd_Init();
   224  0008BE  ECA1  F004         	call	_lcd_Init	;wreg free
   225  0008C2                     
   226                           ;main.c: 20:     Timer1_Init();
   227  0008C2  EC60  F005         	call	_Timer1_Init	;wreg free
   228  0008C6                     
   229                           ;main.c: 21:     INT_Init();
   230  0008C6  EC6A  F005         	call	_INT_Init	;wreg free
   231  0008CA                     
   232                           ;main.c: 22:     lcd_XY(0,0);
   233  0008CA  0E00               	movlw	0
   234  0008CC  6E13               	movwf	(lcd_XY@x+1)^0,c
   235  0008CE  0E00               	movlw	0
   236  0008D0  6E12               	movwf	lcd_XY@x^0,c
   237  0008D2  0E00               	movlw	0
   238  0008D4  6E15               	movwf	(lcd_XY@y+1)^0,c
   239  0008D6  0E00               	movlw	0
   240  0008D8  6E14               	movwf	lcd_XY@y^0,c
   241  0008DA  EC39  F005         	call	_lcd_XY	;wreg free
   242  0008DE                     
   243                           ;main.c: 23:     lcd_Cadena("Hora:");
   244  0008DE  0E01               	movlw	low STR_1
   245  0008E0  6E12               	movwf	lcd_Cadena@pal^0,c
   246  0008E2  0E08               	movlw	high STR_1
   247  0008E4  6E13               	movwf	(lcd_Cadena@pal+1)^0,c
   248  0008E6  ECEC  F004         	call	_lcd_Cadena	;wreg free
   249  0008EA                     l1022:
   250                           
   251                           ;main.c: 25:         lcd_XY(1,0);
   252  0008EA  0E00               	movlw	0
   253  0008EC  6E13               	movwf	(lcd_XY@x+1)^0,c
   254  0008EE  0E01               	movlw	1
   255  0008F0  6E12               	movwf	lcd_XY@x^0,c
   256  0008F2  0E00               	movlw	0
   257  0008F4  6E15               	movwf	(lcd_XY@y+1)^0,c
   258  0008F6  0E00               	movlw	0
   259  0008F8  6E14               	movwf	lcd_XY@y^0,c
   260  0008FA  EC39  F005         	call	_lcd_XY	;wreg free
   261  0008FE                     
   262                           ;main.c: 26:         lcd_Caracter('0'+hor_d);
   263  0008FE  5001               	movf	_hor_d^0,w,c
   264  000900  0F30               	addlw	48
   265  000902  EC20  F005         	call	_lcd_Caracter
   266  000906                     
   267                           ;main.c: 27:         lcd_Caracter('0'+hor);
   268  000906  5003               	movf	_hor^0,w,c
   269  000908  0F30               	addlw	48
   270  00090A  EC20  F005         	call	_lcd_Caracter
   271  00090E                     
   272                           ;main.c: 28:         lcd_Caracter(':');
   273  00090E  0E3A               	movlw	58
   274  000910  EC20  F005         	call	_lcd_Caracter
   275  000914                     
   276                           ;main.c: 29:         lcd_Caracter('0'+min_d);
   277  000914  5005               	movf	_min_d^0,w,c
   278  000916  0F30               	addlw	48
   279  000918  EC20  F005         	call	_lcd_Caracter
   280  00091C                     
   281                           ;main.c: 30:         lcd_Caracter('0'+min);
   282  00091C  5007               	movf	_min^0,w,c
   283  00091E  0F30               	addlw	48
   284  000920  EC20  F005         	call	_lcd_Caracter
   285  000924                     
   286                           ;main.c: 31:         lcd_Caracter(':');
   287  000924  0E3A               	movlw	58
   288  000926  EC20  F005         	call	_lcd_Caracter
   289  00092A                     
   290                           ;main.c: 32:         lcd_Caracter('0'+sec_d);
   291  00092A  5009               	movf	_sec_d^0,w,c
   292  00092C  0F30               	addlw	48
   293  00092E  EC20  F005         	call	_lcd_Caracter
   294  000932                     
   295                           ;main.c: 33:         lcd_Caracter('0'+sec);
   296  000932  500B               	movf	_sec^0,w,c
   297  000934  0F30               	addlw	48
   298  000936  EC20  F005         	call	_lcd_Caracter
   299  00093A  EF75  F004         	goto	l1022
   300  00093E  EF13  F000         	goto	start
   301  000942                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _lcd_XY *****************
   305 ;; Defined at:
   306 ;;		line 28 in file "lcd_libreria.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;  x               2    5[COMRAM] int 
   309 ;;  y               2    7[COMRAM] int 
   310 ;; Auto vars:     Size  Location     Type
   311 ;;		None
   312 ;; Return value:  Size  Location     Type
   313 ;;                  1    wreg      void 
   314 ;; Registers used:
   315 ;;		wreg, status,2, status,0, cstack
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   321 ;;      Params:         4       0       0       0       0       0       0       0       0
   322 ;;      Locals:         0       0       0       0       0       0       0       0       0
   323 ;;      Temps:          0       0       0       0       0       0       0       0       0
   324 ;;      Totals:         4       0       0       0       0       0       0       0       0
   325 ;;Total ram usage:        4 bytes
   326 ;; Hardware stack levels used: 1
   327 ;; Hardware stack levels required when called: 4
   328 ;; This function calls:
   329 ;;		_lcd_Comando
   330 ;; This function is called by:
   331 ;;		_main
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           	psect	text1
   336  000A72                     __ptext1:
   337                           	callstack 0
   338  000A72                     _lcd_XY:
   339                           	callstack 26
   340  000A72                     
   341                           ;lcd_libreria.c: 29:     if(x > 0){
   342  000A72  BE13               	btfsc	(lcd_XY@x+1)^0,7,c
   343  000A74  EF44  F005         	goto	u101
   344  000A78  5013               	movf	(lcd_XY@x+1)^0,w,c
   345  000A7A  E108               	bnz	u100
   346  000A7C  0412               	decf	lcd_XY@x^0,w,c
   347  000A7E  A0D8               	btfss	status,0,c
   348  000A80  EF44  F005         	goto	u101
   349  000A84  EF46  F005         	goto	u100
   350  000A88                     u101:
   351  000A88  EF4C  F005         	goto	l1000
   352  000A8C                     u100:
   353  000A8C                     
   354                           ;lcd_libreria.c: 30:         lcd_Comando(0xC0+y);
   355  000A8C  5014               	movf	lcd_XY@y^0,w,c
   356  000A8E  0FC0               	addlw	192
   357  000A90  EC07  F005         	call	_lcd_Comando
   358                           
   359                           ;lcd_libreria.c: 31:     }
   360  000A94  EF50  F005         	goto	l112
   361  000A98                     l1000:
   362                           
   363                           ;lcd_libreria.c: 33:         lcd_Comando(0x80+y);
   364  000A98  5014               	movf	lcd_XY@y^0,w,c
   365  000A9A  0F80               	addlw	128
   366  000A9C  EC07  F005         	call	_lcd_Comando
   367  000AA0                     l112:
   368  000AA0  0012               	return		;funcret
   369  000AA2                     __end_of_lcd_XY:
   370                           	callstack 0
   371                           
   372 ;; *************** function _lcd_Init *****************
   373 ;; Defined at:
   374 ;;		line 4 in file "lcd_libreria.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   388 ;;      Params:         0       0       0       0       0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0       0       0       0       0
   390 ;;      Temps:          1       0       0       0       0       0       0       0       0
   391 ;;      Totals:         1       0       0       0       0       0       0       0       0
   392 ;;Total ram usage:        1 bytes
   393 ;; Hardware stack levels used: 1
   394 ;; Hardware stack levels required when called: 4
   395 ;; This function calls:
   396 ;;		_lcd_Comando
   397 ;; This function is called by:
   398 ;;		_main
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text2
   403  000942                     __ptext2:
   404                           	callstack 0
   405  000942                     _lcd_Init:
   406                           	callstack 26
   407  000942                     
   408                           ;lcd_libreria.c: 5:     TRISD = 0x00;
   409  000942  0E00               	movlw	0
   410  000944  6E95               	movwf	149,c	;volatile
   411  000946                     
   412                           ;lcd_libreria.c: 6:     _delay((unsigned long)((20)*(20000000UL/4000.0)));
   413  000946  0E82               	movlw	130
   414  000948  6E12               	movwf	??_lcd_Init^0,c
   415  00094A  0EDE               	movlw	222
   416  00094C                     u127:
   417  00094C  2EE8               	decfsz	wreg,f,c
   418  00094E  D7FE               	bra	u127
   419  000950  2E12               	decfsz	??_lcd_Init^0,f,c
   420  000952  D7FC               	bra	u127
   421  000954                     
   422                           ;lcd_libreria.c: 7:     lcd_Comando(0x30);
   423  000954  0E30               	movlw	48
   424  000956  EC07  F005         	call	_lcd_Comando
   425  00095A                     
   426                           ;lcd_libreria.c: 8:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   427  00095A  0E21               	movlw	33
   428  00095C  6E12               	movwf	??_lcd_Init^0,c
   429  00095E  0E76               	movlw	118
   430  000960                     u137:
   431  000960  2EE8               	decfsz	wreg,f,c
   432  000962  D7FE               	bra	u137
   433  000964  2E12               	decfsz	??_lcd_Init^0,f,c
   434  000966  D7FC               	bra	u137
   435  000968  D000               	nop2	
   436  00096A                     
   437                           ;lcd_libreria.c: 9:     lcd_Comando(0x30);
   438  00096A  0E30               	movlw	48
   439  00096C  EC07  F005         	call	_lcd_Comando
   440  000970                     
   441                           ;lcd_libreria.c: 10:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   442  000970  0EA6               	movlw	166
   443  000972                     u147:
   444  000972  2EE8               	decfsz	wreg,f,c
   445  000974  D7FE               	bra	u147
   446  000976  D000               	nop2	
   447  000978                     
   448                           ;lcd_libreria.c: 11:     lcd_Comando(0x32);
   449  000978  0E32               	movlw	50
   450  00097A  EC07  F005         	call	_lcd_Comando
   451  00097E                     
   452                           ;lcd_libreria.c: 12:     lcd_Comando(0x28);
   453  00097E  0E28               	movlw	40
   454  000980  EC07  F005         	call	_lcd_Comando
   455  000984                     
   456                           ;lcd_libreria.c: 13:     lcd_Comando(0x0C);
   457  000984  0E0C               	movlw	12
   458  000986  EC07  F005         	call	_lcd_Comando
   459  00098A                     
   460                           ;lcd_libreria.c: 14:     lcd_Comando(0x01);
   461  00098A  0E01               	movlw	1
   462  00098C  EC07  F005         	call	_lcd_Comando
   463  000990                     
   464                           ;lcd_libreria.c: 15:     lcd_Comando(0x06);
   465  000990  0E06               	movlw	6
   466  000992  EC07  F005         	call	_lcd_Comando
   467  000996  0012               	return		;funcret
   468  000998                     __end_of_lcd_Init:
   469                           	callstack 0
   470                           
   471 ;; *************** function _lcd_Comando *****************
   472 ;; Defined at:
   473 ;;		line 18 in file "lcd_libreria.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  cmd             1    wreg     unsigned char 
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  cmd             1    4[COMRAM] unsigned char 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         1       0       0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; Hardware stack levels required when called: 3
   494 ;; This function calls:
   495 ;;		_selectorRegistro
   496 ;; This function is called by:
   497 ;;		_lcd_Init
   498 ;;		_lcd_XY
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text3
   503  000A0E                     __ptext3:
   504                           	callstack 0
   505  000A0E                     _lcd_Comando:
   506                           	callstack 26
   507                           
   508                           ;incstack = 0
   509                           ;lcd_Comando@cmd stored from wreg
   510  000A0E  6E11               	movwf	lcd_Comando@cmd^0,c
   511  000A10                     
   512                           ;lcd_libreria.c: 20:     LATD &= 0x03;
   513  000A10  0E03               	movlw	3
   514  000A12  168C               	andwf	140,f,c	;volatile
   515                           
   516                           ;lcd_libreria.c: 21:     LATD |= (cmd&0xF0);
   517  000A14  5011               	movf	lcd_Comando@cmd^0,w,c
   518  000A16  0BF0               	andlw	240
   519  000A18  128C               	iorwf	140,f,c	;volatile
   520  000A1A                     
   521                           ;lcd_libreria.c: 22:     selectorRegistro(0);
   522  000A1A  0E00               	movlw	0
   523  000A1C  6E0F               	movwf	(selectorRegistro@rs+1)^0,c
   524  000A1E  0E00               	movlw	0
   525  000A20  6E0E               	movwf	selectorRegistro@rs^0,c
   526  000A22  ECCC  F004         	call	_selectorRegistro	;wreg free
   527  000A26                     
   528                           ;lcd_libreria.c: 23:     LATD &= 0x03;
   529  000A26  0E03               	movlw	3
   530  000A28  168C               	andwf	140,f,c	;volatile
   531  000A2A                     
   532                           ;lcd_libreria.c: 24:     LATD |= ((cmd<<4)&0xF0);
   533  000A2A  3811               	swapf	lcd_Comando@cmd^0,w,c
   534  000A2C  0BF0               	andlw	240
   535  000A2E  0BF0               	andlw	240
   536  000A30  128C               	iorwf	140,f,c	;volatile
   537  000A32                     
   538                           ;lcd_libreria.c: 25:     selectorRegistro(0);
   539  000A32  0E00               	movlw	0
   540  000A34  6E0F               	movwf	(selectorRegistro@rs+1)^0,c
   541  000A36  0E00               	movlw	0
   542  000A38  6E0E               	movwf	selectorRegistro@rs^0,c
   543  000A3A  ECCC  F004         	call	_selectorRegistro	;wreg free
   544  000A3E  0012               	return		;funcret
   545  000A40                     __end_of_lcd_Comando:
   546                           	callstack 0
   547                           
   548 ;; *************** function _lcd_Cadena *****************
   549 ;; Defined at:
   550 ;;		line 47 in file "lcd_libreria.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  pal             2    5[COMRAM] PTR unsigned char 
   553 ;;		 -> STR_1(6), 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         2       0       0       0       0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0       0       0       0       0
   568 ;;      Totals:         2       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; Hardware stack levels required when called: 4
   572 ;; This function calls:
   573 ;;		_lcd_Caracter
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text4
   580  0009D8                     __ptext4:
   581                           	callstack 0
   582  0009D8                     _lcd_Cadena:
   583                           	callstack 26
   584  0009D8                     
   585                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   586  0009D8  EFF8  F004         	goto	l1008
   587  0009DC                     l1004:
   588                           
   589                           ;lcd_libreria.c: 49:         lcd_Caracter(*pal);
   590  0009DC  C012  FFF6         	movff	lcd_Cadena@pal,tblptrl
   591  0009E0  C013  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   592  0009E4                     	if	0	;tblptru may be non-zero
   593  0009E4                     	endif
   594  0009E4                     	if	0	;tblptru may be non-zero
   595  0009E4                     	endif
   596  0009E4  0008               	tblrd		*
   597  0009E6  50F5               	movf	tablat,w,c
   598  0009E8  EC20  F005         	call	_lcd_Caracter
   599  0009EC                     
   600                           ;lcd_libreria.c: 50:         pal++;
   601  0009EC  4A12               	infsnz	lcd_Cadena@pal^0,f,c
   602  0009EE  2A13               	incf	(lcd_Cadena@pal+1)^0,f,c
   603  0009F0                     l1008:
   604                           
   605                           ;lcd_libreria.c: 48:     while(*pal != '\0'){
   606  0009F0  C012  FFF6         	movff	lcd_Cadena@pal,tblptrl
   607  0009F4  C013  FFF7         	movff	lcd_Cadena@pal+1,tblptrh
   608  0009F8                     	if	0	;tblptru may be non-zero
   609  0009F8                     	endif
   610  0009F8                     	if	0	;tblptru may be non-zero
   611  0009F8                     	endif
   612  0009F8  0008               	tblrd		*
   613  0009FA  50F5               	movf	tablat,w,c
   614  0009FC  0900               	iorlw	0
   615  0009FE  A4D8               	btfss	status,2,c
   616  000A00  EF04  F005         	goto	u111
   617  000A04  EF06  F005         	goto	u110
   618  000A08                     u111:
   619  000A08  EFEE  F004         	goto	l1004
   620  000A0C                     u110:
   621  000A0C  0012               	return		;funcret
   622  000A0E                     __end_of_lcd_Cadena:
   623                           	callstack 0
   624                           
   625 ;; *************** function _lcd_Caracter *****************
   626 ;; Defined at:
   627 ;;		line 37 in file "lcd_libreria.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  dat             1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  dat             1    4[COMRAM] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   641 ;;      Params:         0       0       0       0       0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0
   644 ;;      Totals:         1       0       0       0       0       0       0       0       0
   645 ;;Total ram usage:        1 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 3
   648 ;; This function calls:
   649 ;;		_selectorRegistro
   650 ;; This function is called by:
   651 ;;		_main
   652 ;;		_lcd_Cadena
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text5
   657  000A40                     __ptext5:
   658                           	callstack 0
   659  000A40                     _lcd_Caracter:
   660                           	callstack 27
   661                           
   662                           ;incstack = 0
   663                           ;lcd_Caracter@dat stored from wreg
   664  000A40  6E11               	movwf	lcd_Caracter@dat^0,c
   665  000A42                     
   666                           ;lcd_libreria.c: 38:     LATD &= 0x03;
   667  000A42  0E03               	movlw	3
   668  000A44  168C               	andwf	140,f,c	;volatile
   669                           
   670                           ;lcd_libreria.c: 39:     LATD |= (dat&0xF0);
   671  000A46  5011               	movf	lcd_Caracter@dat^0,w,c
   672  000A48  0BF0               	andlw	240
   673  000A4A  128C               	iorwf	140,f,c	;volatile
   674  000A4C                     
   675                           ;lcd_libreria.c: 40:     selectorRegistro(1);
   676  000A4C  0E00               	movlw	0
   677  000A4E  6E0F               	movwf	(selectorRegistro@rs+1)^0,c
   678  000A50  0E01               	movlw	1
   679  000A52  6E0E               	movwf	selectorRegistro@rs^0,c
   680  000A54  ECCC  F004         	call	_selectorRegistro	;wreg free
   681  000A58                     
   682                           ;lcd_libreria.c: 41:     LATD &= 0x03;
   683  000A58  0E03               	movlw	3
   684  000A5A  168C               	andwf	140,f,c	;volatile
   685  000A5C                     
   686                           ;lcd_libreria.c: 42:     LATD |= ((dat<<4)&0xF0);
   687  000A5C  3811               	swapf	lcd_Caracter@dat^0,w,c
   688  000A5E  0BF0               	andlw	240
   689  000A60  0BF0               	andlw	240
   690  000A62  128C               	iorwf	140,f,c	;volatile
   691  000A64                     
   692                           ;lcd_libreria.c: 43:     selectorRegistro(1);
   693  000A64  0E00               	movlw	0
   694  000A66  6E0F               	movwf	(selectorRegistro@rs+1)^0,c
   695  000A68  0E01               	movlw	1
   696  000A6A  6E0E               	movwf	selectorRegistro@rs^0,c
   697  000A6C  ECCC  F004         	call	_selectorRegistro	;wreg free
   698  000A70  0012               	return		;funcret
   699  000A72                     __end_of_lcd_Caracter:
   700                           	callstack 0
   701                           
   702 ;; *************** function _selectorRegistro *****************
   703 ;; Defined at:
   704 ;;		line 54 in file "lcd_libreria.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  rs              2    1[COMRAM] int 
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         2       0       0       0       0       0       0       0       0
   719 ;;      Locals:         0       0       0       0       0       0       0       0       0
   720 ;;      Temps:          1       0       0       0       0       0       0       0       0
   721 ;;      Totals:         3       0       0       0       0       0       0       0       0
   722 ;;Total ram usage:        3 bytes
   723 ;; Hardware stack levels used: 1
   724 ;; Hardware stack levels required when called: 2
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_lcd_Comando
   729 ;;		_lcd_Caracter
   730 ;; This function uses a non-reentrant model
   731 ;;
   732                           
   733                           	psect	text6
   734  000998                     __ptext6:
   735                           	callstack 0
   736  000998                     _selectorRegistro:
   737                           	callstack 26
   738  000998                     
   739                           ;lcd_libreria.c: 55:     if(rs == 1){
   740  000998  040E               	decf	selectorRegistro@rs^0,w,c
   741  00099A  100F               	iorwf	(selectorRegistro@rs+1)^0,w,c
   742  00099C  A4D8               	btfss	status,2,c
   743  00099E  EFD3  F004         	goto	u91
   744  0009A2  EFD5  F004         	goto	u90
   745  0009A6                     u91:
   746  0009A6  EFD8  F004         	goto	l124
   747  0009AA                     u90:
   748  0009AA                     
   749                           ;lcd_libreria.c: 56:         LATDbits.LATD2 = 1;
   750  0009AA  848C               	bsf	140,2,c	;volatile
   751                           
   752                           ;lcd_libreria.c: 57:     }
   753  0009AC  EFD9  F004         	goto	l948
   754  0009B0                     l124:
   755                           
   756                           ;lcd_libreria.c: 59:         LATDbits.LATD2 = 0;
   757  0009B0  948C               	bcf	140,2,c	;volatile
   758  0009B2                     l948:
   759                           
   760                           ;lcd_libreria.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   761  0009B2  0E07               	movlw	7
   762  0009B4  6E10               	movwf	??_selectorRegistro^0,c
   763  0009B6  0E7D               	movlw	125
   764  0009B8                     u157:
   765  0009B8  2EE8               	decfsz	wreg,f,c
   766  0009BA  D7FE               	bra	u157
   767  0009BC  2E10               	decfsz	??_selectorRegistro^0,f,c
   768  0009BE  D7FC               	bra	u157
   769  0009C0  F000               	nop	
   770  0009C2                     
   771                           ;lcd_libreria.c: 62:     LATDbits.LATD3 = 1;
   772  0009C2  868C               	bsf	140,3,c	;volatile
   773                           
   774                           ;lcd_libreria.c: 63:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   775  0009C4  0E07               	movlw	7
   776  0009C6  6E10               	movwf	??_selectorRegistro^0,c
   777  0009C8  0E7D               	movlw	125
   778  0009CA                     u167:
   779  0009CA  2EE8               	decfsz	wreg,f,c
   780  0009CC  D7FE               	bra	u167
   781  0009CE  2E10               	decfsz	??_selectorRegistro^0,f,c
   782  0009D0  D7FC               	bra	u167
   783  0009D2  F000               	nop	
   784  0009D4                     
   785                           ;lcd_libreria.c: 64:     LATDbits.LATD3 = 0;
   786  0009D4  968C               	bcf	140,3,c	;volatile
   787  0009D6  0012               	return		;funcret
   788  0009D8                     __end_of_selectorRegistro:
   789                           	callstack 0
   790                           
   791 ;; *************** function _Timer1_Init *****************
   792 ;; Defined at:
   793 ;;		line 11 in file "timers_libreria.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   807 ;;      Params:         0       0       0       0       0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 2
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_main
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text7
   822  000AC0                     __ptext7:
   823                           	callstack 0
   824  000AC0                     _Timer1_Init:
   825                           	callstack 28
   826  000AC0                     
   827                           ;timers_libreria.c: 12:     TMR1H = 0x80;
   828  000AC0  0E80               	movlw	128
   829  000AC2  6ECF               	movwf	207,c	;volatile
   830                           
   831                           ;timers_libreria.c: 13:     TMR1L = 0x00;
   832  000AC4  0E00               	movlw	0
   833  000AC6  6ECE               	movwf	206,c	;volatile
   834                           
   835                           ;timers_libreria.c: 14:     T1CON = 0x0F;
   836  000AC8  0E0F               	movlw	15
   837  000ACA  6ECD               	movwf	205,c	;volatile
   838  000ACC                     
   839                           ;timers_libreria.c: 15:     PIE1bits.TMR1IE = 1;
   840  000ACC  809D               	bsf	157,0,c	;volatile
   841  000ACE                     
   842                           ;timers_libreria.c: 16:     PIR1bits.TMR1IF = 0;
   843  000ACE  909E               	bcf	158,0,c	;volatile
   844  000AD0                     
   845                           ;timers_libreria.c: 17:     IPR1bits.TMR1IP = 1;
   846  000AD0  809F               	bsf	159,0,c	;volatile
   847  000AD2  0012               	return		;funcret
   848  000AD4                     __end_of_Timer1_Init:
   849                           	callstack 0
   850                           
   851 ;; *************** function _INT_Init *****************
   852 ;; Defined at:
   853 ;;		line 12 in file "interrupcion_libreria.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		None
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   867 ;;      Params:         0       0       0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 2
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           	psect	text8
   882  000AD4                     __ptext8:
   883                           	callstack 0
   884  000AD4                     _INT_Init:
   885                           	callstack 28
   886  000AD4                     
   887                           ;interrupcion_libreria.c: 13:     RCONbits.IPEN = 1;
   888  000AD4  8ED0               	bsf	208,7,c	;volatile
   889                           
   890                           ;interrupcion_libreria.c: 14:     INTCONbits.GIEH = 1;
   891  000AD6  8EF2               	bsf	242,7,c	;volatile
   892                           
   893                           ;interrupcion_libreria.c: 15:     INTCONbits.GIEL = 1;
   894  000AD8  8CF2               	bsf	242,6,c	;volatile
   895  000ADA  0012               	return		;funcret
   896  000ADC                     __end_of_INT_Init:
   897                           	callstack 0
   898                           
   899 ;; *************** function _INT_TMR1_BAJA *****************
   900 ;; Defined at:
   901 ;;		line 44 in file "interrupcion_libreria.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		None
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0       0       0       0       0
   918 ;;      Totals:         1       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		Interrupt level 1
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	intcodelo
   930  000018                     __pintcodelo:
   931                           	callstack 0
   932  000018                     _INT_TMR1_BAJA:
   933                           	callstack 26
   934                           
   935                           ;incstack = 0
   936  000018  8016               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   937  00001A  CFE0 F00D          	movff	bsr,??_INT_TMR1_BAJA
   938  00001E  C00D  FFE0         	movff	??_INT_TMR1_BAJA,bsr
   939  000022  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   940  000024  0010               	retfie	
   941  000026                     __end_of_INT_TMR1_BAJA:
   942                           	callstack 0
   943                           
   944 ;; *************** function _INT_TMR1_ALTA *****************
   945 ;; Defined at:
   946 ;;		line 18 in file "interrupcion_libreria.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          0       0       0       0       0       0       0       0       0
   963 ;;      Totals:         0       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        0 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		Interrupt level 2
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	intcode
   974  000008                     __pintcode:
   975                           	callstack 0
   976  000008                     _INT_TMR1_ALTA:
   977                           	callstack 26
   978                           
   979                           ;incstack = 0
   980  000008  8216               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   981  00000A  ED04  F004         	call	int_func,f	;refresh shadow registers
   982                           
   983                           	psect	intcode_body
   984  000808                     __pintcode_body:
   985                           	callstack 26
   986  000808                     int_func:
   987                           	callstack 26
   988  000808  0006               	pop		; remove dummy address from shadow register refresh
   989  00080A                     
   990                           ;interrupcion_libreria.c: 19:     TMR1H = 0x80;
   991  00080A  0E80               	movlw	128
   992  00080C  6ECF               	movwf	207,c	;volatile
   993                           
   994                           ;interrupcion_libreria.c: 20:     TMR1L = 0x00;
   995  00080E  0E00               	movlw	0
   996  000810  6ECE               	movwf	206,c	;volatile
   997  000812                     
   998                           ;interrupcion_libreria.c: 21:     sec++;
   999  000812  4A0B               	infsnz	_sec^0,f,c
  1000  000814  2A0C               	incf	(_sec+1)^0,f,c
  1001  000816                     
  1002                           ;interrupcion_libreria.c: 22:     if(sec == 10){
  1003  000816  0E0A               	movlw	10
  1004  000818  180B               	xorwf	_sec^0,w,c
  1005  00081A  100C               	iorwf	(_sec+1)^0,w,c
  1006  00081C  A4D8               	btfss	status,2,c
  1007  00081E  EF13  F004         	goto	i2u4_41
  1008  000822  EF15  F004         	goto	i2u4_40
  1009  000826                     i2u4_41:
  1010  000826  EF1B  F004         	goto	i2l888
  1011  00082A                     i2u4_40:
  1012  00082A                     
  1013                           ;interrupcion_libreria.c: 23:         sec_d++;
  1014  00082A  4A09               	infsnz	_sec_d^0,f,c
  1015  00082C  2A0A               	incf	(_sec_d+1)^0,f,c
  1016  00082E                     
  1017                           ;interrupcion_libreria.c: 24:         sec = 0;
  1018  00082E  0E00               	movlw	0
  1019  000830  6E0C               	movwf	(_sec+1)^0,c
  1020  000832  0E00               	movlw	0
  1021  000834  6E0B               	movwf	_sec^0,c
  1022  000836                     i2l888:
  1023                           
  1024                           ;interrupcion_libreria.c: 26:     if(sec_d == 6){
  1025  000836  0E06               	movlw	6
  1026  000838  1809               	xorwf	_sec_d^0,w,c
  1027  00083A  100A               	iorwf	(_sec_d+1)^0,w,c
  1028  00083C  A4D8               	btfss	status,2,c
  1029  00083E  EF23  F004         	goto	i2u5_41
  1030  000842  EF25  F004         	goto	i2u5_40
  1031  000846                     i2u5_41:
  1032  000846  EF2B  F004         	goto	i2l894
  1033  00084A                     i2u5_40:
  1034  00084A                     
  1035                           ;interrupcion_libreria.c: 27:         min++;
  1036  00084A  4A07               	infsnz	_min^0,f,c
  1037  00084C  2A08               	incf	(_min+1)^0,f,c
  1038  00084E                     
  1039                           ;interrupcion_libreria.c: 28:         sec_d = 0;
  1040  00084E  0E00               	movlw	0
  1041  000850  6E0A               	movwf	(_sec_d+1)^0,c
  1042  000852  0E00               	movlw	0
  1043  000854  6E09               	movwf	_sec_d^0,c
  1044  000856                     i2l894:
  1045                           
  1046                           ;interrupcion_libreria.c: 30:     if(min == 10){
  1047  000856  0E0A               	movlw	10
  1048  000858  1807               	xorwf	_min^0,w,c
  1049  00085A  1008               	iorwf	(_min+1)^0,w,c
  1050  00085C  A4D8               	btfss	status,2,c
  1051  00085E  EF33  F004         	goto	i2u6_41
  1052  000862  EF35  F004         	goto	i2u6_40
  1053  000866                     i2u6_41:
  1054  000866  EF3B  F004         	goto	i2l900
  1055  00086A                     i2u6_40:
  1056  00086A                     
  1057                           ;interrupcion_libreria.c: 31:         min_d++;
  1058  00086A  4A05               	infsnz	_min_d^0,f,c
  1059  00086C  2A06               	incf	(_min_d+1)^0,f,c
  1060  00086E                     
  1061                           ;interrupcion_libreria.c: 32:         min = 0;
  1062  00086E  0E00               	movlw	0
  1063  000870  6E08               	movwf	(_min+1)^0,c
  1064  000872  0E00               	movlw	0
  1065  000874  6E07               	movwf	_min^0,c
  1066  000876                     i2l900:
  1067                           
  1068                           ;interrupcion_libreria.c: 34:     if(min_d == 6){
  1069  000876  0E06               	movlw	6
  1070  000878  1805               	xorwf	_min_d^0,w,c
  1071  00087A  1006               	iorwf	(_min_d+1)^0,w,c
  1072  00087C  A4D8               	btfss	status,2,c
  1073  00087E  EF43  F004         	goto	i2u7_41
  1074  000882  EF45  F004         	goto	i2u7_40
  1075  000886                     i2u7_41:
  1076  000886  EF4B  F004         	goto	i2l906
  1077  00088A                     i2u7_40:
  1078  00088A                     
  1079                           ;interrupcion_libreria.c: 35:         hor++;
  1080  00088A  4A03               	infsnz	_hor^0,f,c
  1081  00088C  2A04               	incf	(_hor+1)^0,f,c
  1082  00088E                     
  1083                           ;interrupcion_libreria.c: 36:         min_d = 0;
  1084  00088E  0E00               	movlw	0
  1085  000890  6E06               	movwf	(_min_d+1)^0,c
  1086  000892  0E00               	movlw	0
  1087  000894  6E05               	movwf	_min_d^0,c
  1088  000896                     i2l906:
  1089                           
  1090                           ;interrupcion_libreria.c: 38:     if(hor == 10){
  1091  000896  0E0A               	movlw	10
  1092  000898  1803               	xorwf	_hor^0,w,c
  1093  00089A  1004               	iorwf	(_hor+1)^0,w,c
  1094  00089C  A4D8               	btfss	status,2,c
  1095  00089E  EF53  F004         	goto	i2u8_41
  1096  0008A2  EF55  F004         	goto	i2u8_40
  1097  0008A6                     i2u8_41:
  1098  0008A6  EF5B  F004         	goto	i2l912
  1099  0008AA                     i2u8_40:
  1100  0008AA                     
  1101                           ;interrupcion_libreria.c: 39:         hor_d++;
  1102  0008AA  4A01               	infsnz	_hor_d^0,f,c
  1103  0008AC  2A02               	incf	(_hor_d+1)^0,f,c
  1104  0008AE                     
  1105                           ;interrupcion_libreria.c: 40:         hor = 0;
  1106  0008AE  0E00               	movlw	0
  1107  0008B0  6E04               	movwf	(_hor+1)^0,c
  1108  0008B2  0E00               	movlw	0
  1109  0008B4  6E03               	movwf	_hor^0,c
  1110  0008B6                     i2l912:
  1111                           
  1112                           ;interrupcion_libreria.c: 42:     PIR1bits.TMR1IF = 0;
  1113  0008B6  909E               	bcf	158,0,c	;volatile
  1114  0008B8  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1115  0008BA  0011               	retfie		f
  1116  0008BC                     __end_of_INT_TMR1_ALTA:
  1117                           	callstack 0
  1118                           
  1119                           	psect	rparam
  1120  0000                     
  1121                           	psect	temp
  1122  000016                     btemp:
  1123                           	callstack 0
  1124  000016                     	ds	1
  1125  0000                     int$flags	set	btemp
  1126  0000                     wtemp8	set	btemp+1
  1127  0000                     ttemp5	set	btemp+1
  1128  0000                     ttemp6	set	btemp+4
  1129  0000                     ttemp7	set	btemp+8
  1130                           
  1131                           	psect	idloc
  1132                           
  1133                           ;Config register IDLOC0 @ 0x200000
  1134                           ;	unspecified, using default values
  1135  200000                     	org	2097152
  1136  200000  FF                 	db	255
  1137                           
  1138                           ;Config register IDLOC1 @ 0x200001
  1139                           ;	unspecified, using default values
  1140  200001                     	org	2097153
  1141  200001  FF                 	db	255
  1142                           
  1143                           ;Config register IDLOC2 @ 0x200002
  1144                           ;	unspecified, using default values
  1145  200002                     	org	2097154
  1146  200002  FF                 	db	255
  1147                           
  1148                           ;Config register IDLOC3 @ 0x200003
  1149                           ;	unspecified, using default values
  1150  200003                     	org	2097155
  1151  200003  FF                 	db	255
  1152                           
  1153                           ;Config register IDLOC4 @ 0x200004
  1154                           ;	unspecified, using default values
  1155  200004                     	org	2097156
  1156  200004  FF                 	db	255
  1157                           
  1158                           ;Config register IDLOC5 @ 0x200005
  1159                           ;	unspecified, using default values
  1160  200005                     	org	2097157
  1161  200005  FF                 	db	255
  1162                           
  1163                           ;Config register IDLOC6 @ 0x200006
  1164                           ;	unspecified, using default values
  1165  200006                     	org	2097158
  1166  200006  FF                 	db	255
  1167                           
  1168                           ;Config register IDLOC7 @ 0x200007
  1169                           ;	unspecified, using default values
  1170  200007                     	org	2097159
  1171  200007  FF                 	db	255
  1172                           
  1173                           	psect	config
  1174                           
  1175                           ;Config register CONFIG1L @ 0x300000
  1176                           ;	PLL Prescaler Selection bits
  1177                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1178                           ;	System Clock Postscaler Selection bits
  1179                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1180                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1181                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1182  300000                     	org	3145728
  1183  300000  00                 	db	0
  1184                           
  1185                           ;Config register CONFIG1H @ 0x300001
  1186                           ;	Oscillator Selection bits
  1187                           ;	FOSC = HS, HS oscillator (HS)
  1188                           ;	Fail-Safe Clock Monitor Enable bit
  1189                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1190                           ;	Internal/External Oscillator Switchover bit
  1191                           ;	IESO = ON, Oscillator Switchover mode enabled
  1192  300001                     	org	3145729
  1193  300001  8C                 	db	140
  1194                           
  1195                           ;Config register CONFIG2L @ 0x300002
  1196                           ;	Power-up Timer Enable bit
  1197                           ;	PWRT = ON, PWRT enabled
  1198                           ;	Brown-out Reset Enable bits
  1199                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1200                           ;	Brown-out Reset Voltage bits
  1201                           ;	BORV = 3, Minimum setting 2.05V
  1202                           ;	USB Voltage Regulator Enable bit
  1203                           ;	VREGEN = OFF, USB voltage regulator disabled
  1204  300002                     	org	3145730
  1205  300002  18                 	db	24
  1206                           
  1207                           ;Config register CONFIG2H @ 0x300003
  1208                           ;	Watchdog Timer Enable bit
  1209                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1210                           ;	Watchdog Timer Postscale Select bits
  1211                           ;	WDTPS = 32768, 1:32768
  1212  300003                     	org	3145731
  1213  300003  1E                 	db	30
  1214                           
  1215                           ; Padding undefined space
  1216  300004                     	org	3145732
  1217  300004  FF                 	db	255
  1218                           
  1219                           ;Config register CONFIG3H @ 0x300005
  1220                           ;	CCP2 MUX bit
  1221                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1222                           ;	PORTB A/D Enable bit
  1223                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1224                           ;	Low-Power Timer 1 Oscillator Enable bit
  1225                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1226                           ;	MCLR Pin Enable bit
  1227                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1228  300005                     	org	3145733
  1229  300005  81                 	db	129
  1230                           
  1231                           ;Config register CONFIG4L @ 0x300006
  1232                           ;	Stack Full/Underflow Reset Enable bit
  1233                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1234                           ;	Single-Supply ICSP Enable bit
  1235                           ;	LVP = OFF, Single-Supply ICSP disabled
  1236                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1237                           ;	ICPRT = OFF, ICPORT disabled
  1238                           ;	Extended Instruction Set Enable bit
  1239                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1240                           ;	Background Debugger Enable bit
  1241                           ;	DEBUG = 0x1, unprogrammed default
  1242  300006                     	org	3145734
  1243  300006  80                 	db	128
  1244                           
  1245                           ; Padding undefined space
  1246  300007                     	org	3145735
  1247  300007  FF                 	db	255
  1248                           
  1249                           ;Config register CONFIG5L @ 0x300008
  1250                           ;	Code Protection bit
  1251                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1252                           ;	Code Protection bit
  1253                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1254                           ;	Code Protection bit
  1255                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1256                           ;	Code Protection bit
  1257                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1258  300008                     	org	3145736
  1259  300008  0F                 	db	15
  1260                           
  1261                           ;Config register CONFIG5H @ 0x300009
  1262                           ;	Boot Block Code Protection bit
  1263                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1264                           ;	Data EEPROM Code Protection bit
  1265                           ;	CPD = OFF, Data EEPROM is not code-protected
  1266  300009                     	org	3145737
  1267  300009  C0                 	db	192
  1268                           
  1269                           ;Config register CONFIG6L @ 0x30000A
  1270                           ;	Write Protection bit
  1271                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1272                           ;	Write Protection bit
  1273                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1274                           ;	Write Protection bit
  1275                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1276                           ;	Write Protection bit
  1277                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1278  30000A                     	org	3145738
  1279  30000A  0F                 	db	15
  1280                           
  1281                           ;Config register CONFIG6H @ 0x30000B
  1282                           ;	Configuration Register Write Protection bit
  1283                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1284                           ;	Boot Block Write Protection bit
  1285                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1286                           ;	Data EEPROM Write Protection bit
  1287                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1288  30000B                     	org	3145739
  1289  30000B  E0                 	db	224
  1290                           
  1291                           ;Config register CONFIG7L @ 0x30000C
  1292                           ;	Table Read Protection bit
  1293                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1294                           ;	Table Read Protection bit
  1295                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1296                           ;	Table Read Protection bit
  1297                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1298                           ;	Table Read Protection bit
  1299                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1300  30000C                     	org	3145740
  1301  30000C  0F                 	db	15
  1302                           
  1303                           ;Config register CONFIG7H @ 0x30000D
  1304                           ;	Boot Block Table Read Protection bit
  1305                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1306  30000D                     	org	3145741
  1307  30000D  40                 	db	64
  1308                           tosu	equ	0xFFF
  1309                           tosh	equ	0xFFE
  1310                           tosl	equ	0xFFD
  1311                           stkptr	equ	0xFFC
  1312                           pclatu	equ	0xFFB
  1313                           pclath	equ	0xFFA
  1314                           pcl	equ	0xFF9
  1315                           tblptru	equ	0xFF8
  1316                           tblptrh	equ	0xFF7
  1317                           tblptrl	equ	0xFF6
  1318                           tablat	equ	0xFF5
  1319                           prodh	equ	0xFF4
  1320                           prodl	equ	0xFF3
  1321                           indf0	equ	0xFEF
  1322                           postinc0	equ	0xFEE
  1323                           postdec0	equ	0xFED
  1324                           preinc0	equ	0xFEC
  1325                           plusw0	equ	0xFEB
  1326                           fsr0h	equ	0xFEA
  1327                           fsr0l	equ	0xFE9
  1328                           wreg	equ	0xFE8
  1329                           indf1	equ	0xFE7
  1330                           postinc1	equ	0xFE6
  1331                           postdec1	equ	0xFE5
  1332                           preinc1	equ	0xFE4
  1333                           plusw1	equ	0xFE3
  1334                           fsr1h	equ	0xFE2
  1335                           fsr1l	equ	0xFE1
  1336                           bsr	equ	0xFE0
  1337                           indf2	equ	0xFDF
  1338                           postinc2	equ	0xFDE
  1339                           postdec2	equ	0xFDD
  1340                           preinc2	equ	0xFDC
  1341                           plusw2	equ	0xFDB
  1342                           fsr2h	equ	0xFDA
  1343                           fsr2l	equ	0xFD9
  1344                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      9      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_Cadena@pal	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_lcd_XY
    _lcd_XY->_lcd_Comando
    _lcd_Init->_lcd_Comando
    _lcd_Comando->_selectorRegistro
    _lcd_Cadena->_lcd_Caracter
    _lcd_Caracter->_selectorRegistro

Critical Paths under _INT_TMR1_BAJA in COMRAM

    None.

Critical Paths under _INT_TMR1_ALTA in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_TMR1_BAJA in BANK0

    None.

Critical Paths under _INT_TMR1_ALTA in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_TMR1_BAJA in BANK1

    None.

Critical Paths under _INT_TMR1_ALTA in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_TMR1_BAJA in BANK2

    None.

Critical Paths under _INT_TMR1_ALTA in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_TMR1_BAJA in BANK3

    None.

Critical Paths under _INT_TMR1_ALTA in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_TMR1_BAJA in BANK4

    None.

Critical Paths under _INT_TMR1_ALTA in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_TMR1_BAJA in BANK5

    None.

Critical Paths under _INT_TMR1_ALTA in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_TMR1_BAJA in BANK6

    None.

Critical Paths under _INT_TMR1_ALTA in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_TMR1_BAJA in BANK7

    None.

Critical Paths under _INT_TMR1_ALTA in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1971
                           _INT_Init
                        _Timer1_Init
                         _lcd_Cadena
                       _lcd_Caracter
                           _lcd_Init
                             _lcd_XY
 ---------------------------------------------------------------------------------
 (1) _lcd_XY                                               4     0      4     740
                                              5 COMRAM     4     0      4
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (1) _lcd_Init                                             1     1      0     370
                                              5 COMRAM     1     1      0
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (2) _lcd_Comando                                          1     1      0     370
                                              4 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (1) _lcd_Cadena                                           2     0      2     491
                                              5 COMRAM     2     0      2
                       _lcd_Caracter
 ---------------------------------------------------------------------------------
 (1) _lcd_Caracter                                         1     1      0     370
                                              4 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (3) _selectorRegistro                                     3     1      2     326
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT_TMR1_BAJA                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT_TMR1_ALTA                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT_Init
   _Timer1_Init
   _lcd_Cadena
     _lcd_Caracter
       _selectorRegistro
   _lcd_Caracter
   _lcd_Init
     _lcd_Comando
       _selectorRegistro
   _lcd_XY
     _lcd_Comando

 _INT_TMR1_BAJA (ROOT)

 _INT_TMR1_ALTA (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      9      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 29 01:48:57 2021

                       l25 0ADA                         l89 0AD2                         u90 09AA  
                       u91 09A6            lcd_Caracter@dat 0011                         bsr 000FE0  
                      l104 0996                        l112 0AA0                        l121 0A0C  
                      l115 0A70                        l107 0A3E                        l124 09B0  
                      l126 09D6                        l832 0AD4                        l860 0ACE  
                      l862 0AD0                        l950 09C2                        l856 0AC0  
                      l952 09D4                        l944 0998                        l960 0A5C  
                      l858 0ACC                        l946 09AA                        l962 0A64  
                      l954 0A42                        l970 0A2A                        l948 09B2  
                      l956 0A4C                        l972 0A32                        l964 0A10  
                      l980 095A                        l958 0A58                        l966 0A1A  
                      l990 0984                        l982 096A                        l974 0942  
                      l968 0A26                        l992 098A                        l984 0970  
                      l976 0946                        l994 0990                        l986 0978  
                      l978 0954                        l988 097E                        l996 0A72  
                      l998 0A8C                        u100 0A8C                        u101 0A88  
                      u110 0A0C                        u111 0A08                        u127 094C  
                      u137 0960                        u147 0972                        u157 09B8  
                      u167 09CA                        _hor 0003                        _min 0007  
                      _sec 000B                        wreg 000FE8                       l1000 0A98  
                     l1002 09D8                       l1010 08BC                       l1004 09DC  
                     l1020 08DE                       l1012 08BE                       l1006 09EC  
                     l1030 0914                       l1022 08EA                       l1014 08C2  
                     l1008 09F0                       l1032 091C                       l1024 08FE  
                     l1016 08C6                       l1034 0924                       l1026 0906  
                     l1018 08CA                       l1036 092A                       l1028 090E  
                     l1038 0932                       STR_1 0801                       _LATD 000F8C  
                     i1l40 001E                       i2l35 08B8                       _main 08BC  
                     btemp 0016                       start 0026               ___param_bank 000000  
                    ?_main 000D                      _T1CON 000FCD                      i2l900 0876  
                    i2l910 08AE                      i2l902 088A                      i2l912 08B6  
                    i2l904 088E                      i2l906 0896                      i2l908 08AA  
                    i2l880 0812                      i2l890 084A                      i2l882 0816  
                    i2l892 084E                      i2l884 082A                      i2l894 0856  
                    i2l886 082E                      i2l878 080A                      i2l896 086A  
                    i2l888 0836                      i2l898 086E                      _TMR1H 000FCF  
                    _TMR1L 000FCE           __end_of_INT_Init 0ADC                      _TRISD 000F95  
                    _hor_d 0001                      _min_d 0005                      _sec_d 0009  
                    tablat 000FF5                      ttemp5 0017                      ttemp6 001A  
                    ttemp7 001E                      status 000FD8                      wtemp8 0017  
          __initialization 0AA2       __end_of_lcd_Caracter 0A72               __end_of_main 0942  
                   ??_main 0016              __activetblptr 000001           _selectorRegistro 0998  
     __size_of_lcd_Comando 0032                     i2u4_40 082A                     i2u4_41 0826  
                   i2u5_40 084A                     i2u5_41 0846                     i2u6_40 086A  
                   i2u6_41 0866                     i2u7_40 088A                     i2u7_41 0886  
                   i2u8_40 08AA                     i2u8_41 08A6              ??_Timer1_Init 000E  
         __end_of_lcd_Init 0998                     _lcd_XY 0A72                     clear_0 0AA8  
                   isa$std 000001               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8     __size_of_INT_TMR1_BAJA 000E  
               __accesstop 0060    __end_of__initialization 0AAE     __size_of_INT_TMR1_ALTA 08B4  
            ___rparam_used 000001                  ?_INT_Init 000D             __pcstackCOMRAM 000D  
      __end_of_Timer1_Init 0AD4      __size_of_lcd_Caracter 0032                 ??_INT_Init 000E  
               _lcd_Cadena 09D8                    ?_lcd_XY 0012              _INT_TMR1_BAJA 0018  
            _INT_TMR1_ALTA 0008                  ?_lcd_Init 000D               _lcd_Caracter 0A40  
                  __Hparam 0000   __end_of_selectorRegistro 09D8                _Timer1_Init 0AC0  
                  __Lparam 0000               __psmallconst 0800            __size_of_lcd_XY 0030  
           ?_INT_TMR1_BAJA 000D             ?_INT_TMR1_ALTA 000D                    __pcinit 0AA2  
                  __ramtop 0800                    __ptext0 08BC                    __ptext1 0A72  
                  __ptext2 0942                    __ptext3 0A0E                    __ptext4 09D8  
                  __ptext5 0A40                    __ptext6 0998                    __ptext7 0AC0  
                  __ptext8 0AD4                    lcd_XY@x 0012                    lcd_XY@y 0014  
               ??_lcd_Init 0012             __pintcode_body 0808       end_of_initialization 0AAE  
                  int_func 0808                    postinc0 000FEE                ?_lcd_Cadena 0012  
            ??_lcd_Comando 0011                  _TRISDbits 000F95            ??_INT_TMR1_BAJA 000D  
          ??_INT_TMR1_ALTA 000D          __size_of_INT_Init 0008             __end_of_lcd_XY 0AA2  
      start_initialization 0AA2        __end_of_lcd_Comando 0A40        __size_of_lcd_Cadena 0036  
           lcd_Comando@cmd 0011                   ??_lcd_XY 0016                __pbssCOMRAM 0001  
        __size_of_lcd_Init 0056               ?_Timer1_Init 000D          ?_selectorRegistro 000E  
                __pintcode 0008         ??_selectorRegistro 0010                __pintcodelo 0018  
              __smallconst 0800                _lcd_Comando 0A0E                   _LATDbits 000F8C  
            lcd_Cadena@pal 0012                   _IPR1bits 000F9F                   _PIE1bits 000F9D  
                 _PIR1bits 000F9E                   _INT_Init 0AD4                   _RCONbits 000FD0  
             ??_lcd_Cadena 0014         __end_of_lcd_Cadena 0A0E                   __Hrparam 0000  
                 __Lrparam 0000               __Lsmallconst 0800                   _lcd_Init 0942  
            __size_of_main 0086                   isa$xinst 000000       __size_of_Timer1_Init 0014  
                 int$flags 0016      __end_of_INT_TMR1_BAJA 0026      __end_of_INT_TMR1_ALTA 08BC  
               _INTCONbits 000FF2              ?_lcd_Caracter 000D                   intlevel1 0000  
                 intlevel2 0000         selectorRegistro@rs 000E               ?_lcd_Comando 000D  
__size_of_selectorRegistro 0040             ??_lcd_Caracter 0011  
