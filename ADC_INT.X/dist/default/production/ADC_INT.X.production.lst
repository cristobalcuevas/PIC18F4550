

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 01 22:26:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _ADRESL	set	4035
    59  0000                     _LATC	set	3979
    60  0000                     _ADRESH	set	4036
    61  0000                     _INTCONbits	set	4082
    62  0000                     _RCONbits	set	4048
    63  0000                     _TRISC	set	3988
    64  0000                     _LATDbits	set	3980
    65  0000                     _LATD	set	3980
    66  0000                     _TRISD	set	3989
    67  0000                     _IPR1bits	set	3999
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _ADCON2bits	set	4032
    71  0000                     _ADCON0bits	set	4034
    72  0000                     _ADCON1bits	set	4033
    73  0000                     _TRISAbits	set	3986
    74                           
    75                           ; #config settings
    76                           
    77                           	psect	cinit
    78  000170                     __pcinit:
    79                           	callstack 0
    80  000170                     start_initialization:
    81                           	callstack 0
    82  000170                     __initialization:
    83                           	callstack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (21 bytes)
    86  000170  EE00  F001         	lfsr	0,__pbssCOMRAM
    87  000174  0E15               	movlw	21
    88  000176                     clear_0:
    89  000176  6AEE               	clrf	postinc0,c
    90  000178  06E8               	decf	wreg,f,c
    91  00017A  E1FD               	bnz	clear_0
    92  00017C                     end_of_initialization:
    93                           	callstack 0
    94  00017C                     __end_of__initialization:
    95                           	callstack 0
    96  00017C  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    97  00017E  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    98  000180  0100               	movlb	0
    99  000182  EFA7  F000         	goto	_main	;jump to C main() function
   100                           
   101                           	psect	bssCOMRAM
   102  000001                     __pbssCOMRAM:
   103                           	callstack 0
   104  000001                     _dato:
   105                           	callstack 0
   106  000001                     	ds	10
   107  00000B                     _vin:
   108                           	callstack 0
   109  00000B                     	ds	4
   110  00000F                     _resolucion:
   111                           	callstack 0
   112  00000F                     	ds	4
   113  000013                     _valor_adc:
   114                           	callstack 0
   115  000013                     	ds	2
   116  000015                     _x:
   117                           	callstack 0
   118  000015                     	ds	1
   119                           
   120                           	psect	cstackCOMRAM
   121  000016                     __pcstackCOMRAM:
   122                           	callstack 0
   123  000016                     ??_INT0_ADC_BAJA:
   124                           
   125                           ; 1 bytes @ 0x0
   126  000016                     	ds	1
   127  000017                     ??_ADC_Read:
   128  000017                     selectorRegistro@rs:
   129                           	callstack 0
   130                           
   131                           ; 2 bytes @ 0x1
   132  000017                     	ds	1
   133  000018                     ADC_Read@canal:
   134                           	callstack 0
   135                           
   136                           ; 1 bytes @ 0x2
   137  000018                     	ds	1
   138  000019                     ??_selectorRegistro:
   139                           
   140                           ; 1 bytes @ 0x3
   141  000019                     	ds	1
   142  00001A                     lcd_Comando@cmd:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x4
   146  00001A                     	ds	1
   147  00001B                     ??_lcd_Init:
   148                           
   149                           ; 1 bytes @ 0x5
   150  00001B                     	ds	1
   151  00001C                     
   152                           ; 1 bytes @ 0x6
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 19 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2, status,0, cstack
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 0/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   172 ;;      Params:         0       0       0       0       0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0       0       0       0       0
   175 ;;      Totals:         0       0       0       0       0       0       0       0       0
   176 ;;Total ram usage:        0 bytes
   177 ;; Hardware stack levels required when called: 5
   178 ;; This function calls:
   179 ;;		_ADC_Init
   180 ;;		_ADC_Read
   181 ;;		_INT_Init
   182 ;;		_lcd_Init
   183 ;; This function is called by:
   184 ;;		Startup code after reset
   185 ;; This function uses a non-reentrant model
   186 ;;
   187                           
   188                           	psect	text0
   189  00014E                     __ptext0:
   190                           	callstack 0
   191  00014E                     _main:
   192                           	callstack 26
   193  00014E                     
   194                           ;main.c: 20:     TRISD = 0x00;
   195  00014E  0E00               	movlw	0
   196  000150  6E95               	movwf	149,c	;volatile
   197                           
   198                           ;main.c: 21:     TRISC = 0x00;
   199  000152  0E00               	movlw	0
   200  000154  6E94               	movwf	148,c	;volatile
   201  000156                     
   202                           ;main.c: 22:     ADC_Init();
   203  000156  EC79  F000         	call	_ADC_Init	;wreg free
   204  00015A                     
   205                           ;main.c: 23:     lcd_Init();
   206  00015A  EC15  F000         	call	_lcd_Init	;wreg free
   207  00015E                     
   208                           ;main.c: 24:     INT_Init();
   209  00015E  ECCC  F000         	call	_INT_Init	;wreg free
   210                           
   211                           ;main.c: 25:     ADC_Read(0);
   212  000162  0E00               	movlw	0
   213  000164  EC91  F000         	call	_ADC_Read
   214  000168                     l83:
   215  000168  EFB4  F000         	goto	l83
   216  00016C  EF13  F000         	goto	start
   217  000170                     __end_of_main:
   218                           	callstack 0
   219                           
   220 ;; *************** function _lcd_Init *****************
   221 ;; Defined at:
   222 ;;		line 4 in file "lcd_libreria.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0, cstack
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 0/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   236 ;;      Params:         0       0       0       0       0       0       0       0       0
   237 ;;      Locals:         0       0       0       0       0       0       0       0       0
   238 ;;      Temps:          1       0       0       0       0       0       0       0       0
   239 ;;      Totals:         1       0       0       0       0       0       0       0       0
   240 ;;Total ram usage:        1 bytes
   241 ;; Hardware stack levels used: 1
   242 ;; Hardware stack levels required when called: 4
   243 ;; This function calls:
   244 ;;		_lcd_Comando
   245 ;; This function is called by:
   246 ;;		_main
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text1
   251  00002A                     __ptext1:
   252                           	callstack 0
   253  00002A                     _lcd_Init:
   254                           	callstack 26
   255  00002A                     
   256                           ;lcd_libreria.c: 5:     TRISD = 0x00;
   257  00002A  0E00               	movlw	0
   258  00002C  6E95               	movwf	149,c	;volatile
   259  00002E                     
   260                           ;lcd_libreria.c: 6:     _delay((unsigned long)((20)*(20000000UL/4000.0)));
   261  00002E  0E82               	movlw	130
   262  000030  6E1B               	movwf	??_lcd_Init^0,c
   263  000032  0EDE               	movlw	222
   264  000034                     u87:
   265  000034  2EE8               	decfsz	wreg,f,c
   266  000036  D7FE               	bra	u87
   267  000038  2E1B               	decfsz	??_lcd_Init^0,f,c
   268  00003A  D7FC               	bra	u87
   269  00003C                     
   270                           ;lcd_libreria.c: 7:     lcd_Comando(0x30);
   271  00003C  0E30               	movlw	48
   272  00003E  EC60  F000         	call	_lcd_Comando
   273  000042                     
   274                           ;lcd_libreria.c: 8:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
   275  000042  0E21               	movlw	33
   276  000044  6E1B               	movwf	??_lcd_Init^0,c
   277  000046  0E76               	movlw	118
   278  000048                     u97:
   279  000048  2EE8               	decfsz	wreg,f,c
   280  00004A  D7FE               	bra	u97
   281  00004C  2E1B               	decfsz	??_lcd_Init^0,f,c
   282  00004E  D7FC               	bra	u97
   283  000050  D000               	nop2	
   284  000052                     
   285                           ;lcd_libreria.c: 9:     lcd_Comando(0x30);
   286  000052  0E30               	movlw	48
   287  000054  EC60  F000         	call	_lcd_Comando
   288  000058                     
   289                           ;lcd_libreria.c: 10:     _delay((unsigned long)((100)*(20000000UL/4000000.0)));
   290  000058  0EA6               	movlw	166
   291  00005A                     u107:
   292  00005A  2EE8               	decfsz	wreg,f,c
   293  00005C  D7FE               	bra	u107
   294  00005E  D000               	nop2	
   295  000060                     
   296                           ;lcd_libreria.c: 11:     lcd_Comando(0x32);
   297  000060  0E32               	movlw	50
   298  000062  EC60  F000         	call	_lcd_Comando
   299  000066                     
   300                           ;lcd_libreria.c: 12:     lcd_Comando(0x28);
   301  000066  0E28               	movlw	40
   302  000068  EC60  F000         	call	_lcd_Comando
   303  00006C                     
   304                           ;lcd_libreria.c: 13:     lcd_Comando(0x0C);
   305  00006C  0E0C               	movlw	12
   306  00006E  EC60  F000         	call	_lcd_Comando
   307  000072                     
   308                           ;lcd_libreria.c: 14:     lcd_Comando(0x01);
   309  000072  0E01               	movlw	1
   310  000074  EC60  F000         	call	_lcd_Comando
   311  000078                     
   312                           ;lcd_libreria.c: 15:     lcd_Comando(0x06);
   313  000078  0E06               	movlw	6
   314  00007A  EC60  F000         	call	_lcd_Comando
   315  00007E  0012               	return		;funcret
   316  000080                     __end_of_lcd_Init:
   317                           	callstack 0
   318                           
   319 ;; *************** function _lcd_Comando *****************
   320 ;; Defined at:
   321 ;;		line 18 in file "lcd_libreria.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;  cmd             1    wreg     unsigned char 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  cmd             1    4[COMRAM] unsigned char 
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   335 ;;      Params:         0       0       0       0       0       0       0       0       0
   336 ;;      Locals:         1       0       0       0       0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0
   338 ;;      Totals:         1       0       0       0       0       0       0       0       0
   339 ;;Total ram usage:        1 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; Hardware stack levels required when called: 3
   342 ;; This function calls:
   343 ;;		_selectorRegistro
   344 ;; This function is called by:
   345 ;;		_lcd_Init
   346 ;;		_lcd_XY
   347 ;; This function uses a non-reentrant model
   348 ;;
   349                           
   350                           	psect	text2
   351  0000C0                     __ptext2:
   352                           	callstack 0
   353  0000C0                     _lcd_Comando:
   354                           	callstack 26
   355                           
   356                           ;incstack = 0
   357                           ;lcd_Comando@cmd stored from wreg
   358  0000C0  6E1A               	movwf	lcd_Comando@cmd^0,c
   359  0000C2                     
   360                           ;lcd_libreria.c: 20:     LATD &= 0x03;
   361  0000C2  0E03               	movlw	3
   362  0000C4  168C               	andwf	140,f,c	;volatile
   363                           
   364                           ;lcd_libreria.c: 21:     LATD |= (cmd&0xF0);
   365  0000C6  501A               	movf	lcd_Comando@cmd^0,w,c
   366  0000C8  0BF0               	andlw	240
   367  0000CA  128C               	iorwf	140,f,c	;volatile
   368  0000CC                     
   369                           ;lcd_libreria.c: 22:     selectorRegistro(0);
   370  0000CC  0E00               	movlw	0
   371  0000CE  6E18               	movwf	(selectorRegistro@rs+1)^0,c
   372  0000D0  0E00               	movlw	0
   373  0000D2  6E17               	movwf	selectorRegistro@rs^0,c
   374  0000D4  EC40  F000         	call	_selectorRegistro	;wreg free
   375  0000D8                     
   376                           ;lcd_libreria.c: 23:     LATD &= 0x03;
   377  0000D8  0E03               	movlw	3
   378  0000DA  168C               	andwf	140,f,c	;volatile
   379  0000DC                     
   380                           ;lcd_libreria.c: 24:     LATD |= ((cmd<<4)&0xF0);
   381  0000DC  381A               	swapf	lcd_Comando@cmd^0,w,c
   382  0000DE  0BF0               	andlw	240
   383  0000E0  0BF0               	andlw	240
   384  0000E2  128C               	iorwf	140,f,c	;volatile
   385  0000E4                     
   386                           ;lcd_libreria.c: 25:     selectorRegistro(0);
   387  0000E4  0E00               	movlw	0
   388  0000E6  6E18               	movwf	(selectorRegistro@rs+1)^0,c
   389  0000E8  0E00               	movlw	0
   390  0000EA  6E17               	movwf	selectorRegistro@rs^0,c
   391  0000EC  EC40  F000         	call	_selectorRegistro	;wreg free
   392  0000F0  0012               	return		;funcret
   393  0000F2                     __end_of_lcd_Comando:
   394                           	callstack 0
   395                           
   396 ;; *************** function _selectorRegistro *****************
   397 ;; Defined at:
   398 ;;		line 54 in file "lcd_libreria.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  rs              2    1[COMRAM] int 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   412 ;;      Params:         2       0       0       0       0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0       0       0       0       0
   414 ;;      Temps:          1       0       0       0       0       0       0       0       0
   415 ;;      Totals:         3       0       0       0       0       0       0       0       0
   416 ;;Total ram usage:        3 bytes
   417 ;; Hardware stack levels used: 1
   418 ;; Hardware stack levels required when called: 2
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_lcd_Comando
   423 ;;		_lcd_Caracter
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text3
   428  000080                     __ptext3:
   429                           	callstack 0
   430  000080                     _selectorRegistro:
   431                           	callstack 26
   432  000080                     
   433                           ;lcd_libreria.c: 55:     if(rs == 1){
   434  000080  0417               	decf	selectorRegistro@rs^0,w,c
   435  000082  1018               	iorwf	(selectorRegistro@rs+1)^0,w,c
   436  000084  A4D8               	btfss	status,2,c
   437  000086  EF47  F000         	goto	u51
   438  00008A  EF49  F000         	goto	u50
   439  00008E                     u51:
   440  00008E  EF4C  F000         	goto	l56
   441  000092                     u50:
   442  000092                     
   443                           ;lcd_libreria.c: 56:         LATDbits.LATD2 = 1;
   444  000092  848C               	bsf	140,2,c	;volatile
   445                           
   446                           ;lcd_libreria.c: 57:     }
   447  000094  EF4D  F000         	goto	l901
   448  000098                     l56:
   449                           
   450                           ;lcd_libreria.c: 59:         LATDbits.LATD2 = 0;
   451  000098  948C               	bcf	140,2,c	;volatile
   452  00009A                     l901:
   453                           
   454                           ;lcd_libreria.c: 61:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   455  00009A  0E07               	movlw	7
   456  00009C  6E19               	movwf	??_selectorRegistro^0,c
   457  00009E  0E7D               	movlw	125
   458  0000A0                     u117:
   459  0000A0  2EE8               	decfsz	wreg,f,c
   460  0000A2  D7FE               	bra	u117
   461  0000A4  2E19               	decfsz	??_selectorRegistro^0,f,c
   462  0000A6  D7FC               	bra	u117
   463  0000A8  F000               	nop	
   464  0000AA                     
   465                           ;lcd_libreria.c: 62:     LATDbits.LATD3 = 1;
   466  0000AA  868C               	bsf	140,3,c	;volatile
   467                           
   468                           ;lcd_libreria.c: 63:     _delay((unsigned long)((1)*(20000000UL/4000.0)));
   469  0000AC  0E07               	movlw	7
   470  0000AE  6E19               	movwf	??_selectorRegistro^0,c
   471  0000B0  0E7D               	movlw	125
   472  0000B2                     u127:
   473  0000B2  2EE8               	decfsz	wreg,f,c
   474  0000B4  D7FE               	bra	u127
   475  0000B6  2E19               	decfsz	??_selectorRegistro^0,f,c
   476  0000B8  D7FC               	bra	u127
   477  0000BA  F000               	nop	
   478  0000BC                     
   479                           ;lcd_libreria.c: 64:     LATDbits.LATD3 = 0;
   480  0000BC  968C               	bcf	140,3,c	;volatile
   481  0000BE  0012               	return		;funcret
   482  0000C0                     __end_of_selectorRegistro:
   483                           	callstack 0
   484                           
   485 ;; *************** function _INT_Init *****************
   486 ;; Defined at:
   487 ;;		line 14 in file "interrupcion_libreria.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;		None
   492 ;; Return value:  Size  Location     Type
   493 ;;                  1    wreg      void 
   494 ;; Registers used:
   495 ;;		None
   496 ;; Tracked objects:
   497 ;;		On entry : 0/0
   498 ;;		On exit  : 0/0
   499 ;;		Unchanged: 0/0
   500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   501 ;;      Params:         0       0       0       0       0       0       0       0       0
   502 ;;      Locals:         0       0       0       0       0       0       0       0       0
   503 ;;      Temps:          0       0       0       0       0       0       0       0       0
   504 ;;      Totals:         0       0       0       0       0       0       0       0       0
   505 ;;Total ram usage:        0 bytes
   506 ;; Hardware stack levels used: 1
   507 ;; Hardware stack levels required when called: 2
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text4
   516  000198                     __ptext4:
   517                           	callstack 0
   518  000198                     _INT_Init:
   519                           	callstack 28
   520  000198                     
   521                           ;interrupcion_libreria.c: 15:     RCONbits.IPEN = 1;
   522  000198  8ED0               	bsf	208,7,c	;volatile
   523                           
   524                           ;interrupcion_libreria.c: 16:     INTCONbits.GIEH = 1;
   525  00019A  8EF2               	bsf	242,7,c	;volatile
   526                           
   527                           ;interrupcion_libreria.c: 17:     INTCONbits.GIEL = 1;
   528  00019C  8CF2               	bsf	242,6,c	;volatile
   529  00019E  0012               	return		;funcret
   530  0001A0                     __end_of_INT_Init:
   531                           	callstack 0
   532                           
   533 ;; *************** function _ADC_Read *****************
   534 ;; Defined at:
   535 ;;		line 20 in file "ADC_libreria.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;  canal           1    wreg     unsigned char 
   538 ;; Auto vars:     Size  Location     Type
   539 ;;  canal           1    2[COMRAM] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   549 ;;      Params:         0       0       0       0       0       0       0       0       0
   550 ;;      Locals:         1       0       0       0       0       0       0       0       0
   551 ;;      Temps:          1       0       0       0       0       0       0       0       0
   552 ;;      Totals:         2       0       0       0       0       0       0       0       0
   553 ;;Total ram usage:        2 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 2
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           	psect	text5
   564  000122                     __ptext5:
   565                           	callstack 0
   566  000122                     _ADC_Read:
   567                           	callstack 28
   568                           
   569                           ;incstack = 0
   570                           ;ADC_Read@canal stored from wreg
   571  000122  6E18               	movwf	ADC_Read@canal^0,c
   572  000124                     
   573                           ;ADC_libreria.c: 21:     if(canal >= 13){
   574  000124  0E0C               	movlw	12
   575  000126  6418               	cpfsgt	ADC_Read@canal^0,c
   576  000128  EF98  F000         	goto	u21
   577  00012C  EF9A  F000         	goto	u20
   578  000130                     u21:
   579  000130  EF9C  F000         	goto	l835
   580  000134                     u20:
   581  000134                     
   582                           ;ADC_libreria.c: 22:         canal = 0;
   583  000134  0E00               	movlw	0
   584  000136  6E18               	movwf	ADC_Read@canal^0,c
   585  000138                     l835:
   586                           
   587                           ;ADC_libreria.c: 24:     ADCON0bits.CHS = canal;
   588  000138  C018  F017         	movff	ADC_Read@canal,??_ADC_Read
   589  00013C  4617               	rlncf	??_ADC_Read^0,f,c
   590  00013E  4617               	rlncf	??_ADC_Read^0,f,c
   591  000140  50C2               	movf	194,w,c	;volatile
   592  000142  1817               	xorwf	??_ADC_Read^0,w,c
   593  000144  0BC3               	andlw	-61
   594  000146  1817               	xorwf	??_ADC_Read^0,w,c
   595  000148  6EC2               	movwf	194,c	;volatile
   596  00014A                     
   597                           ;ADC_libreria.c: 25:     ADCON0bits.GO_DONE = 1;
   598  00014A  82C2               	bsf	194,1,c	;volatile
   599  00014C  0012               	return		;funcret
   600  00014E                     __end_of_ADC_Read:
   601                           	callstack 0
   602                           
   603 ;; *************** function _ADC_Init *****************
   604 ;; Defined at:
   605 ;;		line 4 in file "ADC_libreria.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   619 ;;      Params:         0       0       0       0       0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 2
   626 ;; This function calls:
   627 ;;		Nothing
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text6
   634  0000F2                     __ptext6:
   635                           	callstack 0
   636  0000F2                     _ADC_Init:
   637                           	callstack 28
   638  0000F2                     
   639                           ;ADC_libreria.c: 6:     TRISAbits.RA0 = 1;
   640  0000F2  8092               	bsf	146,0,c	;volatile
   641                           
   642                           ;ADC_libreria.c: 7:     TRISAbits.RA1 = 1;
   643  0000F4  8292               	bsf	146,1,c	;volatile
   644  0000F6                     
   645                           ;ADC_libreria.c: 8:     ADCON1bits.PCFG = 0b1101;
   646  0000F6  50C1               	movf	193,w,c	;volatile
   647  0000F8  0BF0               	andlw	-16
   648  0000FA  090D               	iorlw	13
   649  0000FC  6EC1               	movwf	193,c	;volatile
   650  0000FE                     
   651                           ;ADC_libreria.c: 9:     ADCON1bits.VCFG1 = 0;
   652  0000FE  9AC1               	bcf	193,5,c	;volatile
   653  000100                     
   654                           ;ADC_libreria.c: 10:     ADCON1bits.VCFG0 = 0;
   655  000100  98C1               	bcf	193,4,c	;volatile
   656                           
   657                           ;ADC_libreria.c: 11:     ADCON0bits.CHS = 0b0000;
   658  000102  0EC3               	movlw	-61
   659  000104  16C2               	andwf	194,f,c	;volatile
   660                           
   661                           ;ADC_libreria.c: 12:     ADCON2bits.ADCS = 0b101;
   662  000106  50C0               	movf	192,w,c	;volatile
   663  000108  0BF8               	andlw	-8
   664  00010A  0905               	iorlw	5
   665  00010C  6EC0               	movwf	192,c	;volatile
   666  00010E                     
   667                           ;ADC_libreria.c: 13:     PIR1bits.ADIF = 0;
   668  00010E  9C9E               	bcf	158,6,c	;volatile
   669  000110                     
   670                           ;ADC_libreria.c: 14:     PIE1bits.ADIE = 1;
   671  000110  8C9D               	bsf	157,6,c	;volatile
   672  000112                     
   673                           ;ADC_libreria.c: 15:     IPR1bits.ADIP = 1;
   674  000112  8C9F               	bsf	159,6,c	;volatile
   675                           
   676                           ;ADC_libreria.c: 16:     ADCON2bits.ACQT = 0b010;
   677  000114  50C0               	movf	192,w,c	;volatile
   678  000116  0BC7               	andlw	-57
   679  000118  0910               	iorlw	16
   680  00011A  6EC0               	movwf	192,c	;volatile
   681  00011C                     
   682                           ;ADC_libreria.c: 17:     ADCON2bits.ADFM = 0;
   683  00011C  9EC0               	bcf	192,7,c	;volatile
   684  00011E                     
   685                           ;ADC_libreria.c: 18:     ADCON0bits.ADON = 1;
   686  00011E  80C2               	bsf	194,0,c	;volatile
   687  000120  0012               	return		;funcret
   688  000122                     __end_of_ADC_Init:
   689                           	callstack 0
   690                           
   691 ;; *************** function _INT0_ADC_BAJA *****************
   692 ;; Defined at:
   693 ;;		line 26 in file "interrupcion_libreria.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		None
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          1       0       0       0       0       0       0       0       0
   710 ;;      Totals:         1       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        1 bytes
   712 ;; Hardware stack levels used: 1
   713 ;; Hardware stack levels required when called: 1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		Interrupt level 1
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	intcodelo
   722  000018                     __pintcodelo:
   723                           	callstack 0
   724  000018                     _INT0_ADC_BAJA:
   725                           	callstack 26
   726                           
   727                           ;incstack = 0
   728  000018  801C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   729  00001A  CFE0 F016          	movff	bsr,??_INT0_ADC_BAJA
   730  00001E  C016  FFE0         	movff	??_INT0_ADC_BAJA,bsr
   731  000022  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   732  000024  0010               	retfie	
   733  000026                     __end_of_INT0_ADC_BAJA:
   734                           	callstack 0
   735                           
   736 ;; *************** function _INT0_ADC_ALTA *****************
   737 ;; Defined at:
   738 ;;		line 20 in file "interrupcion_libreria.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		None
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   752 ;;      Params:         0       0       0       0       0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used: 1
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		Interrupt level 2
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	intcode
   766  000008                     __pintcode:
   767                           	callstack 0
   768  000008                     _INT0_ADC_ALTA:
   769                           	callstack 26
   770                           
   771                           ;incstack = 0
   772  000008  821C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   773  00000A  EDC3  F000         	call	int_func,f	;refresh shadow registers
   774                           
   775                           	psect	intcode_body
   776  000186                     __pintcode_body:
   777                           	callstack 26
   778  000186                     int_func:
   779                           	callstack 26
   780  000186  0006               	pop		; remove dummy address from shadow register refresh
   781  000188                     
   782                           ;interrupcion_libreria.c: 21:     LATD = ADRESH;
   783  000188  CFC4 FF8C          	movff	4036,3980	;volatile
   784                           
   785                           ;interrupcion_libreria.c: 22:     LATC = ADRESL;
   786  00018C  CFC3 FF8B          	movff	4035,3979	;volatile
   787                           
   788                           ;interrupcion_libreria.c: 23:     ADCON0bits.GO_DONE = 1;
   789  000190  82C2               	bsf	194,1,c	;volatile
   790                           
   791                           ;interrupcion_libreria.c: 24:     PIR1bits.ADIF = 0;
   792  000192  9C9E               	bcf	158,6,c	;volatile
   793  000194  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   794  000196  0011               	retfie		f
   795  000198                     __end_of_INT0_ADC_ALTA:
   796                           	callstack 0
   797  0000                     
   798                           	psect	rparam
   799  0000                     
   800                           	psect	temp
   801  00001C                     btemp:
   802                           	callstack 0
   803  00001C                     	ds	1
   804  0000                     int$flags	set	btemp
   805  0000                     wtemp8	set	btemp+1
   806  0000                     ttemp5	set	btemp+1
   807  0000                     ttemp6	set	btemp+4
   808  0000                     ttemp7	set	btemp+8
   809                           
   810                           	psect	idloc
   811                           
   812                           ;Config register IDLOC0 @ 0x200000
   813                           ;	unspecified, using default values
   814  200000                     	org	2097152
   815  200000  FF                 	db	255
   816                           
   817                           ;Config register IDLOC1 @ 0x200001
   818                           ;	unspecified, using default values
   819  200001                     	org	2097153
   820  200001  FF                 	db	255
   821                           
   822                           ;Config register IDLOC2 @ 0x200002
   823                           ;	unspecified, using default values
   824  200002                     	org	2097154
   825  200002  FF                 	db	255
   826                           
   827                           ;Config register IDLOC3 @ 0x200003
   828                           ;	unspecified, using default values
   829  200003                     	org	2097155
   830  200003  FF                 	db	255
   831                           
   832                           ;Config register IDLOC4 @ 0x200004
   833                           ;	unspecified, using default values
   834  200004                     	org	2097156
   835  200004  FF                 	db	255
   836                           
   837                           ;Config register IDLOC5 @ 0x200005
   838                           ;	unspecified, using default values
   839  200005                     	org	2097157
   840  200005  FF                 	db	255
   841                           
   842                           ;Config register IDLOC6 @ 0x200006
   843                           ;	unspecified, using default values
   844  200006                     	org	2097158
   845  200006  FF                 	db	255
   846                           
   847                           ;Config register IDLOC7 @ 0x200007
   848                           ;	unspecified, using default values
   849  200007                     	org	2097159
   850  200007  FF                 	db	255
   851                           
   852                           	psect	config
   853                           
   854                           ;Config register CONFIG1L @ 0x300000
   855                           ;	PLL Prescaler Selection bits
   856                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   857                           ;	System Clock Postscaler Selection bits
   858                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   859                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   860                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   861  300000                     	org	3145728
   862  300000  00                 	db	0
   863                           
   864                           ;Config register CONFIG1H @ 0x300001
   865                           ;	Oscillator Selection bits
   866                           ;	FOSC = HS, HS oscillator (HS)
   867                           ;	Fail-Safe Clock Monitor Enable bit
   868                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   869                           ;	Internal/External Oscillator Switchover bit
   870                           ;	IESO = ON, Oscillator Switchover mode enabled
   871  300001                     	org	3145729
   872  300001  8C                 	db	140
   873                           
   874                           ;Config register CONFIG2L @ 0x300002
   875                           ;	Power-up Timer Enable bit
   876                           ;	PWRT = ON, PWRT enabled
   877                           ;	Brown-out Reset Enable bits
   878                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
   879                           ;	Brown-out Reset Voltage bits
   880                           ;	BORV = 3, Minimum setting 2.05V
   881                           ;	USB Voltage Regulator Enable bit
   882                           ;	VREGEN = OFF, USB voltage regulator disabled
   883  300002                     	org	3145730
   884  300002  18                 	db	24
   885                           
   886                           ;Config register CONFIG2H @ 0x300003
   887                           ;	Watchdog Timer Enable bit
   888                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   889                           ;	Watchdog Timer Postscale Select bits
   890                           ;	WDTPS = 32768, 1:32768
   891  300003                     	org	3145731
   892  300003  1E                 	db	30
   893                           
   894                           ; Padding undefined space
   895  300004                     	org	3145732
   896  300004  FF                 	db	255
   897                           
   898                           ;Config register CONFIG3H @ 0x300005
   899                           ;	CCP2 MUX bit
   900                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   901                           ;	PORTB A/D Enable bit
   902                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   903                           ;	Low-Power Timer 1 Oscillator Enable bit
   904                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   905                           ;	MCLR Pin Enable bit
   906                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   907  300005                     	org	3145733
   908  300005  81                 	db	129
   909                           
   910                           ;Config register CONFIG4L @ 0x300006
   911                           ;	Stack Full/Underflow Reset Enable bit
   912                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
   913                           ;	Single-Supply ICSP Enable bit
   914                           ;	LVP = OFF, Single-Supply ICSP disabled
   915                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   916                           ;	ICPRT = OFF, ICPORT disabled
   917                           ;	Extended Instruction Set Enable bit
   918                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   919                           ;	Background Debugger Enable bit
   920                           ;	DEBUG = 0x1, unprogrammed default
   921  300006                     	org	3145734
   922  300006  80                 	db	128
   923                           
   924                           ; Padding undefined space
   925  300007                     	org	3145735
   926  300007  FF                 	db	255
   927                           
   928                           ;Config register CONFIG5L @ 0x300008
   929                           ;	Code Protection bit
   930                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   931                           ;	Code Protection bit
   932                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   933                           ;	Code Protection bit
   934                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   935                           ;	Code Protection bit
   936                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   937  300008                     	org	3145736
   938  300008  0F                 	db	15
   939                           
   940                           ;Config register CONFIG5H @ 0x300009
   941                           ;	Boot Block Code Protection bit
   942                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   943                           ;	Data EEPROM Code Protection bit
   944                           ;	CPD = OFF, Data EEPROM is not code-protected
   945  300009                     	org	3145737
   946  300009  C0                 	db	192
   947                           
   948                           ;Config register CONFIG6L @ 0x30000A
   949                           ;	Write Protection bit
   950                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   951                           ;	Write Protection bit
   952                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   953                           ;	Write Protection bit
   954                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   955                           ;	Write Protection bit
   956                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   957  30000A                     	org	3145738
   958  30000A  0F                 	db	15
   959                           
   960                           ;Config register CONFIG6H @ 0x30000B
   961                           ;	Configuration Register Write Protection bit
   962                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   963                           ;	Boot Block Write Protection bit
   964                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   965                           ;	Data EEPROM Write Protection bit
   966                           ;	WRTD = OFF, Data EEPROM is not write-protected
   967  30000B                     	org	3145739
   968  30000B  E0                 	db	224
   969                           
   970                           ;Config register CONFIG7L @ 0x30000C
   971                           ;	Table Read Protection bit
   972                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   973                           ;	Table Read Protection bit
   974                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   975                           ;	Table Read Protection bit
   976                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   977                           ;	Table Read Protection bit
   978                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   979  30000C                     	org	3145740
   980  30000C  0F                 	db	15
   981                           
   982                           ;Config register CONFIG7H @ 0x30000D
   983                           ;	Boot Block Table Read Protection bit
   984                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   985  30000D                     	org	3145741
   986  30000D  40                 	db	64
   987                           tosu	equ	0xFFF
   988                           tosh	equ	0xFFE
   989                           tosl	equ	0xFFD
   990                           stkptr	equ	0xFFC
   991                           pclatu	equ	0xFFB
   992                           pclath	equ	0xFFA
   993                           pcl	equ	0xFF9
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           indf0	equ	0xFEF
  1001                           postinc0	equ	0xFEE
  1002                           postdec0	equ	0xFED
  1003                           preinc0	equ	0xFEC
  1004                           plusw0	equ	0xFEB
  1005                           fsr0h	equ	0xFEA
  1006                           fsr0l	equ	0xFE9
  1007                           wreg	equ	0xFE8
  1008                           indf1	equ	0xFE7
  1009                           postinc1	equ	0xFE6
  1010                           postdec1	equ	0xFE5
  1011                           preinc1	equ	0xFE4
  1012                           plusw1	equ	0xFE3
  1013                           fsr1h	equ	0xFE2
  1014                           fsr1l	equ	0xFE1
  1015                           bsr	equ	0xFE0
  1016                           indf2	equ	0xFDF
  1017                           postinc2	equ	0xFDE
  1018                           postdec2	equ	0xFDD
  1019                           preinc2	equ	0xFDC
  1020                           plusw2	equ	0xFDB
  1021                           fsr2h	equ	0xFDA
  1022                           fsr2l	equ	0xFD9
  1023                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      6      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_lcd_Init
    _lcd_Init->_lcd_Comando
    _lcd_Comando->_selectorRegistro

Critical Paths under _INT0_ADC_BAJA in COMRAM

    None.

Critical Paths under _INT0_ADC_ALTA in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ADC_BAJA in BANK0

    None.

Critical Paths under _INT0_ADC_ALTA in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ADC_BAJA in BANK1

    None.

Critical Paths under _INT0_ADC_ALTA in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ADC_BAJA in BANK2

    None.

Critical Paths under _INT0_ADC_ALTA in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ADC_BAJA in BANK3

    None.

Critical Paths under _INT0_ADC_ALTA in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ADC_BAJA in BANK4

    None.

Critical Paths under _INT0_ADC_ALTA in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ADC_BAJA in BANK5

    None.

Critical Paths under _INT0_ADC_ALTA in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ADC_BAJA in BANK6

    None.

Critical Paths under _INT0_ADC_ALTA in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ADC_BAJA in BANK7

    None.

Critical Paths under _INT0_ADC_ALTA in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     400
                           _ADC_Init
                           _ADC_Read
                           _INT_Init
                           _lcd_Init
 ---------------------------------------------------------------------------------
 (1) _lcd_Init                                             1     1      0     370
                                              5 COMRAM     1     1      0
                        _lcd_Comando
 ---------------------------------------------------------------------------------
 (2) _lcd_Comando                                          1     1      0     370
                                              4 COMRAM     1     1      0
                   _selectorRegistro
 ---------------------------------------------------------------------------------
 (3) _selectorRegistro                                     3     1      2     326
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _INT_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     2      0      30
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INT0_ADC_BAJA                                        1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ADC_ALTA                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _INT_Init
   _lcd_Init
     _lcd_Comando
       _selectorRegistro

 _INT0_ADC_BAJA (ROOT)

 _INT0_ADC_ALTA (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      6      1B       1       28.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      20        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 01 22:26:07 2021

                        _x 0015                         l21 014C                         l17 0120  
                       l36 007E                         l39 00F0                         l56 0098  
                       l58 00BE                         l83 0168                         l84 0168  
                       u20 0134                         u21 0130                         u50 0092  
                       u51 008E                         u87 0034                         u97 0048  
                       bsr 000FE0                        l107 019E                        l821 010E  
                      l813 00F2                        l901 009A                        l823 0110  
                      l815 00F6                        l831 0124                        l903 00AA  
                      l911 00D8                        l825 0112                        l817 00FE  
                      l833 0134                        l905 00BC                        l913 00DC  
                      l921 003C                        l827 011C                        l819 0100  
                      l835 0138                        l915 00E4                        l907 00C2  
                      l931 0066                        l923 0042                        l829 011E  
                      l837 014A                        l909 00CC                        l933 006C  
                      l925 0052                        l917 002A                        l871 0198  
                      l935 0072                        l927 0058                        l919 002E  
                      l937 0078                        l929 0060                        l963 014E  
                      l965 0156                        l967 015A                        l897 0080  
                      l969 015E                        l899 0092                        u107 005A  
                      u117 00A0                        u127 00B2                        _vin 000B  
           ?_INT0_ADC_BAJA 0016                        wreg 000FE8             ?_INT0_ADC_ALTA 0016  
                     _LATC 000F8B                       _LATD 000F8C                       _dato 0001  
                     _main 014E                       btemp 001C           __end_of_ADC_Init 0122  
         __end_of_ADC_Read 014E                       start 0026               ___param_bank 000000  
                    ?_main 0016                      i1l117 001E                      i2l112 0194  
                    i2l895 0188           __end_of_INT_Init 01A0                      _TRISC 000F94  
                    _TRISD 000F95                      ttemp5 001D                      ttemp6 0020  
                    ttemp7 0024                      status 000FD8                      wtemp8 001D  
          __initialization 0170               __end_of_main 0170                     ??_main 001C  
          ??_INT0_ADC_BAJA 0016              __activetblptr 000000            ??_INT0_ADC_ALTA 0016  
         _selectorRegistro 0080       __size_of_lcd_Comando 0032                     _ADRESH 000FC4  
                   _ADRESL 000FC3           __end_of_lcd_Init 0080                     clear_0 0176  
                   isa$std 000001                  ?_ADC_Init 0016                  ?_ADC_Read 0016  
               __accesstop 0060    __end_of__initialization 017C              ___rparam_used 000001  
                ?_INT_Init 0016             __pcstackCOMRAM 0016                 ??_ADC_Init 0017  
               ??_ADC_Read 0017                 ??_INT_Init 0017                  ?_lcd_Init 0016  
                  __Hparam 0000   __end_of_selectorRegistro 00C0                    __Lparam 0000  
                  __pcinit 0170                    __ramtop 0800                    __ptext0 014E  
                  __ptext1 002A                    __ptext2 00C0                    __ptext3 0080  
                  __ptext4 0198                    __ptext5 0122                    __ptext6 00F2  
               ??_lcd_Init 001B             __pintcode_body 0186       end_of_initialization 017C  
                  int_func 0186                    postinc0 000FEE                 _resolucion 000F  
            ??_lcd_Comando 001A      __end_of_INT0_ADC_BAJA 0026      __end_of_INT0_ADC_ALTA 0198  
                _TRISAbits 000F92          __size_of_ADC_Init 0030          __size_of_ADC_Read 002C  
        __size_of_INT_Init 0008        start_initialization 0170        __end_of_lcd_Comando 00F2  
           lcd_Comando@cmd 001A                __pbssCOMRAM 0001          __size_of_lcd_Init 0056  
        ?_selectorRegistro 0017                  __pintcode 0008         ??_selectorRegistro 0019  
              __pintcodelo 0018                _lcd_Comando 00C0                   _ADC_Init 00F2  
                 _ADC_Read 0122                   _LATDbits 000F8C                   _IPR1bits 000F9F  
                 _PIE1bits 000F9D                   _PIR1bits 000F9E                   _INT_Init 0198  
                 _RCONbits 000FD0                  _valor_adc 0013                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0                   __Hrparam 0000  
                 __Lrparam 0000              ADC_Read@canal 0018                   _lcd_Init 002A  
            __size_of_main 0022     __size_of_INT0_ADC_BAJA 000E     __size_of_INT0_ADC_ALTA 0190  
                 isa$xinst 000000                   int$flags 001C                 _INTCONbits 000FF2  
                 intlevel1 0000                   intlevel2 0000         selectorRegistro@rs 0017  
             ?_lcd_Comando 0016  __size_of_selectorRegistro 0040              _INT0_ADC_BAJA 0018  
            _INT0_ADC_ALTA 0008  
